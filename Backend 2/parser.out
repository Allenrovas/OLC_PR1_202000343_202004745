Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RCONCAT
    RSPLIT

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> imprimir PTCOMA
Rule 5     instruccion -> declaracion_normal PTCOMA
Rule 6     instruccion -> condicional_ifs PTCOMA
Rule 7     instruccion -> ciclo_for PTCOMA
Rule 8     instruccion -> funcion PTCOMA
Rule 9     instruccion -> llamada_funcion PTCOMA
Rule 10    instruccion -> r_return PTCOMA
Rule 11    instruccion -> asignacion PTCOMA
Rule 12    instruccion -> ciclo_while PTCOMA
Rule 13    instruccion -> r_break PTCOMA
Rule 14    instruccion -> r_continue PTCOMA
Rule 15    instruccion -> struct PTCOMA
Rule 16    instruccion -> asignacion_struct PTCOMA
Rule 17    instruccion -> declaracion_array PTCOMA
Rule 18    instruccion -> imprimir
Rule 19    instruccion -> declaracion_normal
Rule 20    instruccion -> condicional_ifs
Rule 21    instruccion -> ciclo_for
Rule 22    instruccion -> funcion
Rule 23    instruccion -> llamada_funcion
Rule 24    instruccion -> r_return
Rule 25    instruccion -> asignacion
Rule 26    instruccion -> ciclo_while
Rule 27    instruccion -> r_break
Rule 28    instruccion -> r_continue
Rule 29    instruccion -> struct
Rule 30    instruccion -> asignacion_struct
Rule 31    instruccion -> declaracion_array
Rule 32    imprimir -> RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER
Rule 33    asignacion -> ID IGUAL expresion
Rule 34    declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion
Rule 35    declaracion_normal -> RLET ID
Rule 36    declaracion_normal -> RLET ID DOSPUNTOS tipo
Rule 37    declaracion_normal -> RLET ID IGUAL expresion
Rule 38    struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
Rule 39    asignacion_struct -> ID PUNTO parametros_asignacion_struct IGUAL expresion
Rule 40    declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
Rule 41    declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER
Rule 42    declaracion_array -> RLET ID IGUAL CORIZQ parametros_llamada CORDER
Rule 43    declaracion_array -> RLET ID IGUAL CORIZQ CORDER
Rule 44    funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
Rule 45    funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
Rule 46    funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 47    funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 48    llamada_funcion -> ID PARIZQ PARDER
Rule 49    llamada_funcion -> ID PARIZQ parametros_llamada PARDER
Rule 50    parametros_struct -> parametros_struct params_struct
Rule 51    parametros_struct -> params_struct
Rule 52    params_struct -> declaracion_struct PTCOMA
Rule 53    declaracion_struct -> ID DOSPUNTOS tipo IGUAL expresion
Rule 54    declaracion_struct -> ID
Rule 55    declaracion_struct -> ID DOSPUNTOS tipo
Rule 56    declaracion_struct -> ID IGUAL expresion
Rule 57    parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param
Rule 58    parametros_asignacion_struct -> asignacion_struct_param
Rule 59    asignacion_struct_param -> ID
Rule 60    parametros -> parametros COMA parametro
Rule 61    parametros -> parametro
Rule 62    parametro -> RLET ID DOSPUNTOS tipo
Rule 63    parametro -> ID DOSPUNTOS tipo
Rule 64    parametro -> ID
Rule 65    parametros_llamada -> parametros_llamada COMA parametro_ll
Rule 66    parametros_llamada -> parametro_ll
Rule 67    parametro_ll -> expresion
Rule 68    expresion -> llamada_funcion
Rule 69    r_return -> RRETURN expresion
Rule 70    r_break -> RBREAK
Rule 71    r_continue -> RCONTINUE
Rule 72    condicional_ifs -> RIF condicional_if
Rule 73    condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 74    condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
Rule 75    condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if
Rule 76    ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 77    ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 78    tipo -> RSTRING
Rule 79    tipo -> RNUMBER
Rule 80    tipo -> RBOOLEAN
Rule 81    expresion -> expresion MAS expresion
Rule 82    expresion -> expresion MENOS expresion
Rule 83    expresion -> expresion POR expresion
Rule 84    expresion -> expresion DIV expresion
Rule 85    expresion -> expresion IGUALDAD expresion
Rule 86    expresion -> expresion DESIGUALDAD expresion
Rule 87    expresion -> expresion MAYORQ expresion
Rule 88    expresion -> expresion MENORQ expresion
Rule 89    expresion -> expresion MAYORIGUAL expresion
Rule 90    expresion -> expresion MENORIGUAL expresion
Rule 91    expresion -> expresion AND expresion
Rule 92    expresion -> expresion OR expresion
Rule 93    expresion -> expresion POT expresion
Rule 94    expresion -> expresion MOD expresion
Rule 95    expresion -> MENOS expresion
Rule 96    expresion -> NOT expresion
Rule 97    expresion -> PARIZQ expresion PARDER
Rule 98    expresion -> expresion MAS MAS
Rule 99    expresion -> expresion MENOS MENOS
Rule 100   expresion -> ID PUNTO parametros_asignacion_struct
Rule 101   expresion -> ID
Rule 102   expresion -> RNULL
Rule 103   expresion -> RANY
Rule 104   expresion -> ENTERO
Rule 105   expresion -> DECIMAL
Rule 106   expresion -> CADENA
Rule 107   expresion -> RTRUE
Rule 108   expresion -> RFALSE

Terminals, with rules where they appear

AND                  : 91
CADENA               : 106
COMA                 : 60 65
CORDER               : 40 41 42 43
CORIZQ               : 40 41 42 43
DECIMAL              : 105
DESIGUALDAD          : 86
DIV                  : 84
DOSPUNTOS            : 34 36 40 41 44 45 53 55 62 63
ENTERO               : 104
ID                   : 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 53 54 55 56 59 62 63 64 100 101
IGUAL                : 33 34 37 39 40 41 42 43 53 56
IGUALDAD             : 85
LLAVEDER             : 38 44 45 46 47 73 74 74 75 76 77
LLAVEIZQ             : 38 44 45 46 47 73 74 74 75 76 77
MAS                  : 81 98 98
MAYORIGUAL           : 89
MAYORQ               : 87
MENORIGUAL           : 90
MENORQ               : 88
MENOS                : 82 95 99 99
MOD                  : 94
NOT                  : 96
OR                   : 92
PARDER               : 32 44 45 46 47 48 49 73 74 75 76 77 97
PARIZQ               : 32 44 45 46 47 48 49 73 74 75 76 77 97
POR                  : 83
POT                  : 93
PTCOMA               : 4 5 6 7 8 9 10 11 12 13 14 15 16 17 52 76 76
PUNTO                : 32 39 57 100
RANY                 : 103
RBOOLEAN             : 80
RBREAK               : 70
RCONCAT              : 
RCONSOLE             : 32
RCONTINUE            : 71
RELSE                : 74 75
RFALSE               : 108
RFOR                 : 76
RFUNCTION            : 44 45 46 47
RIF                  : 72 75
RINTERFACE           : 38
RLET                 : 34 35 36 37 40 41 42 43 62
RLOG                 : 32
RNULL                : 102
RNUMBER              : 79
RRETURN              : 69
RSPLIT               : 
RSTRING              : 78
RTRUE                : 107
RWHILE               : 77
error                : 

Nonterminals, with rules where they appear

asignacion           : 11 25
asignacion_struct    : 16 30
asignacion_struct_param : 57 58
ciclo_for            : 7 21
ciclo_while          : 12 26
condicional_if       : 72 75
condicional_ifs      : 6 20
declaracion_array    : 17 31
declaracion_normal   : 5 19 76
declaracion_struct   : 52
expresion            : 33 34 37 39 53 56 67 69 73 74 75 76 76 77 81 81 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 95 96 97 98 99
funcion              : 8 22
imprimir             : 4 18
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 44 45 46 47 73 74 74 75 76 77
llamada_funcion      : 9 23 68
parametro            : 60 61
parametro_ll         : 65 66
parametros           : 45 47 60
parametros_asignacion_struct : 39 57 100
parametros_llamada   : 32 40 42 49 65
parametros_struct    : 38 50
params_struct        : 50 51
r_break              : 13 27
r_continue           : 14 28
r_return             : 10 24
struct               : 15 29
tipo                 : 34 36 40 41 44 45 53 55 62 63

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . r_break PTCOMA
    (14) instruccion -> . r_continue PTCOMA
    (15) instruccion -> . struct PTCOMA
    (16) instruccion -> . asignacion_struct PTCOMA
    (17) instruccion -> . declaracion_array PTCOMA
    (18) instruccion -> . imprimir
    (19) instruccion -> . declaracion_normal
    (20) instruccion -> . condicional_ifs
    (21) instruccion -> . ciclo_for
    (22) instruccion -> . funcion
    (23) instruccion -> . llamada_funcion
    (24) instruccion -> . r_return
    (25) instruccion -> . asignacion
    (26) instruccion -> . ciclo_while
    (27) instruccion -> . r_break
    (28) instruccion -> . r_continue
    (29) instruccion -> . struct
    (30) instruccion -> . asignacion_struct
    (31) instruccion -> . declaracion_array
    (32) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER
    (34) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> . RLET ID
    (36) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (37) declaracion_normal -> . RLET ID IGUAL expresion
    (72) condicional_ifs -> . RIF condicional_if
    (76) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funcion -> . RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> . RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (69) r_return -> . RRETURN expresion
    (33) asignacion -> . ID IGUAL expresion
    (77) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (70) r_break -> . RBREAK
    (71) r_continue -> . RCONTINUE
    (38) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (39) asignacion_struct -> . ID PUNTO parametros_asignacion_struct IGUAL expresion
    (40) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER
    (42) declaracion_array -> . RLET ID IGUAL CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> . RLET ID IGUAL CORIZQ CORDER

    RCONSOLE        shift and go to state 18
    RLET            shift and go to state 19
    RIF             shift and go to state 21
    RFOR            shift and go to state 22
    RFUNCTION       shift and go to state 23
    ID              shift and go to state 20
    RRETURN         shift and go to state 24
    RWHILE          shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27
    RINTERFACE      shift and go to state 28

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12
    r_break                        shift and go to state 13
    r_continue                     shift and go to state 14
    struct                         shift and go to state 15
    asignacion_struct              shift and go to state 16
    declaracion_array              shift and go to state 17

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . r_break PTCOMA
    (14) instruccion -> . r_continue PTCOMA
    (15) instruccion -> . struct PTCOMA
    (16) instruccion -> . asignacion_struct PTCOMA
    (17) instruccion -> . declaracion_array PTCOMA
    (18) instruccion -> . imprimir
    (19) instruccion -> . declaracion_normal
    (20) instruccion -> . condicional_ifs
    (21) instruccion -> . ciclo_for
    (22) instruccion -> . funcion
    (23) instruccion -> . llamada_funcion
    (24) instruccion -> . r_return
    (25) instruccion -> . asignacion
    (26) instruccion -> . ciclo_while
    (27) instruccion -> . r_break
    (28) instruccion -> . r_continue
    (29) instruccion -> . struct
    (30) instruccion -> . asignacion_struct
    (31) instruccion -> . declaracion_array
    (32) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER
    (34) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> . RLET ID
    (36) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (37) declaracion_normal -> . RLET ID IGUAL expresion
    (72) condicional_ifs -> . RIF condicional_if
    (76) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funcion -> . RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> . RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (69) r_return -> . RRETURN expresion
    (33) asignacion -> . ID IGUAL expresion
    (77) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (70) r_break -> . RBREAK
    (71) r_continue -> . RCONTINUE
    (38) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (39) asignacion_struct -> . ID PUNTO parametros_asignacion_struct IGUAL expresion
    (40) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER
    (42) declaracion_array -> . RLET ID IGUAL CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> . RLET ID IGUAL CORIZQ CORDER

    $end            reduce using rule 1 (init -> instrucciones .)
    RCONSOLE        shift and go to state 18
    RLET            shift and go to state 19
    RIF             shift and go to state 21
    RFOR            shift and go to state 22
    RFUNCTION       shift and go to state 23
    ID              shift and go to state 20
    RRETURN         shift and go to state 24
    RWHILE          shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27
    RINTERFACE      shift and go to state 28

    instruccion                    shift and go to state 29
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12
    r_break                        shift and go to state 13
    r_continue                     shift and go to state 14
    struct                         shift and go to state 15
    asignacion_struct              shift and go to state 16
    declaracion_array              shift and go to state 17

state 3

    (3) instrucciones -> instruccion .

    RCONSOLE        reduce using rule 3 (instrucciones -> instruccion .)
    RLET            reduce using rule 3 (instrucciones -> instruccion .)
    RIF             reduce using rule 3 (instrucciones -> instruccion .)
    RFOR            reduce using rule 3 (instrucciones -> instruccion .)
    RFUNCTION       reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    RRETURN         reduce using rule 3 (instrucciones -> instruccion .)
    RWHILE          reduce using rule 3 (instrucciones -> instruccion .)
    RBREAK          reduce using rule 3 (instrucciones -> instruccion .)
    RCONTINUE       reduce using rule 3 (instrucciones -> instruccion .)
    RINTERFACE      reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> imprimir . PTCOMA
    (18) instruccion -> imprimir .

    PTCOMA          shift and go to state 30
    RCONSOLE        reduce using rule 18 (instruccion -> imprimir .)
    RLET            reduce using rule 18 (instruccion -> imprimir .)
    RIF             reduce using rule 18 (instruccion -> imprimir .)
    RFOR            reduce using rule 18 (instruccion -> imprimir .)
    RFUNCTION       reduce using rule 18 (instruccion -> imprimir .)
    ID              reduce using rule 18 (instruccion -> imprimir .)
    RRETURN         reduce using rule 18 (instruccion -> imprimir .)
    RWHILE          reduce using rule 18 (instruccion -> imprimir .)
    RBREAK          reduce using rule 18 (instruccion -> imprimir .)
    RCONTINUE       reduce using rule 18 (instruccion -> imprimir .)
    RINTERFACE      reduce using rule 18 (instruccion -> imprimir .)
    $end            reduce using rule 18 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 18 (instruccion -> imprimir .)


state 5

    (5) instruccion -> declaracion_normal . PTCOMA
    (19) instruccion -> declaracion_normal .

    PTCOMA          shift and go to state 31
    RCONSOLE        reduce using rule 19 (instruccion -> declaracion_normal .)
    RLET            reduce using rule 19 (instruccion -> declaracion_normal .)
    RIF             reduce using rule 19 (instruccion -> declaracion_normal .)
    RFOR            reduce using rule 19 (instruccion -> declaracion_normal .)
    RFUNCTION       reduce using rule 19 (instruccion -> declaracion_normal .)
    ID              reduce using rule 19 (instruccion -> declaracion_normal .)
    RRETURN         reduce using rule 19 (instruccion -> declaracion_normal .)
    RWHILE          reduce using rule 19 (instruccion -> declaracion_normal .)
    RBREAK          reduce using rule 19 (instruccion -> declaracion_normal .)
    RCONTINUE       reduce using rule 19 (instruccion -> declaracion_normal .)
    RINTERFACE      reduce using rule 19 (instruccion -> declaracion_normal .)
    $end            reduce using rule 19 (instruccion -> declaracion_normal .)
    LLAVEDER        reduce using rule 19 (instruccion -> declaracion_normal .)


state 6

    (6) instruccion -> condicional_ifs . PTCOMA
    (20) instruccion -> condicional_ifs .

    PTCOMA          shift and go to state 32
    RCONSOLE        reduce using rule 20 (instruccion -> condicional_ifs .)
    RLET            reduce using rule 20 (instruccion -> condicional_ifs .)
    RIF             reduce using rule 20 (instruccion -> condicional_ifs .)
    RFOR            reduce using rule 20 (instruccion -> condicional_ifs .)
    RFUNCTION       reduce using rule 20 (instruccion -> condicional_ifs .)
    ID              reduce using rule 20 (instruccion -> condicional_ifs .)
    RRETURN         reduce using rule 20 (instruccion -> condicional_ifs .)
    RWHILE          reduce using rule 20 (instruccion -> condicional_ifs .)
    RBREAK          reduce using rule 20 (instruccion -> condicional_ifs .)
    RCONTINUE       reduce using rule 20 (instruccion -> condicional_ifs .)
    RINTERFACE      reduce using rule 20 (instruccion -> condicional_ifs .)
    $end            reduce using rule 20 (instruccion -> condicional_ifs .)
    LLAVEDER        reduce using rule 20 (instruccion -> condicional_ifs .)


state 7

    (7) instruccion -> ciclo_for . PTCOMA
    (21) instruccion -> ciclo_for .

    PTCOMA          shift and go to state 33
    RCONSOLE        reduce using rule 21 (instruccion -> ciclo_for .)
    RLET            reduce using rule 21 (instruccion -> ciclo_for .)
    RIF             reduce using rule 21 (instruccion -> ciclo_for .)
    RFOR            reduce using rule 21 (instruccion -> ciclo_for .)
    RFUNCTION       reduce using rule 21 (instruccion -> ciclo_for .)
    ID              reduce using rule 21 (instruccion -> ciclo_for .)
    RRETURN         reduce using rule 21 (instruccion -> ciclo_for .)
    RWHILE          reduce using rule 21 (instruccion -> ciclo_for .)
    RBREAK          reduce using rule 21 (instruccion -> ciclo_for .)
    RCONTINUE       reduce using rule 21 (instruccion -> ciclo_for .)
    RINTERFACE      reduce using rule 21 (instruccion -> ciclo_for .)
    $end            reduce using rule 21 (instruccion -> ciclo_for .)
    LLAVEDER        reduce using rule 21 (instruccion -> ciclo_for .)


state 8

    (8) instruccion -> funcion . PTCOMA
    (22) instruccion -> funcion .

    PTCOMA          shift and go to state 34
    RCONSOLE        reduce using rule 22 (instruccion -> funcion .)
    RLET            reduce using rule 22 (instruccion -> funcion .)
    RIF             reduce using rule 22 (instruccion -> funcion .)
    RFOR            reduce using rule 22 (instruccion -> funcion .)
    RFUNCTION       reduce using rule 22 (instruccion -> funcion .)
    ID              reduce using rule 22 (instruccion -> funcion .)
    RRETURN         reduce using rule 22 (instruccion -> funcion .)
    RWHILE          reduce using rule 22 (instruccion -> funcion .)
    RBREAK          reduce using rule 22 (instruccion -> funcion .)
    RCONTINUE       reduce using rule 22 (instruccion -> funcion .)
    RINTERFACE      reduce using rule 22 (instruccion -> funcion .)
    $end            reduce using rule 22 (instruccion -> funcion .)
    LLAVEDER        reduce using rule 22 (instruccion -> funcion .)


state 9

    (9) instruccion -> llamada_funcion . PTCOMA
    (23) instruccion -> llamada_funcion .

    PTCOMA          shift and go to state 35
    RCONSOLE        reduce using rule 23 (instruccion -> llamada_funcion .)
    RLET            reduce using rule 23 (instruccion -> llamada_funcion .)
    RIF             reduce using rule 23 (instruccion -> llamada_funcion .)
    RFOR            reduce using rule 23 (instruccion -> llamada_funcion .)
    RFUNCTION       reduce using rule 23 (instruccion -> llamada_funcion .)
    ID              reduce using rule 23 (instruccion -> llamada_funcion .)
    RRETURN         reduce using rule 23 (instruccion -> llamada_funcion .)
    RWHILE          reduce using rule 23 (instruccion -> llamada_funcion .)
    RBREAK          reduce using rule 23 (instruccion -> llamada_funcion .)
    RCONTINUE       reduce using rule 23 (instruccion -> llamada_funcion .)
    RINTERFACE      reduce using rule 23 (instruccion -> llamada_funcion .)
    $end            reduce using rule 23 (instruccion -> llamada_funcion .)
    LLAVEDER        reduce using rule 23 (instruccion -> llamada_funcion .)


state 10

    (10) instruccion -> r_return . PTCOMA
    (24) instruccion -> r_return .

    PTCOMA          shift and go to state 36
    RCONSOLE        reduce using rule 24 (instruccion -> r_return .)
    RLET            reduce using rule 24 (instruccion -> r_return .)
    RIF             reduce using rule 24 (instruccion -> r_return .)
    RFOR            reduce using rule 24 (instruccion -> r_return .)
    RFUNCTION       reduce using rule 24 (instruccion -> r_return .)
    ID              reduce using rule 24 (instruccion -> r_return .)
    RRETURN         reduce using rule 24 (instruccion -> r_return .)
    RWHILE          reduce using rule 24 (instruccion -> r_return .)
    RBREAK          reduce using rule 24 (instruccion -> r_return .)
    RCONTINUE       reduce using rule 24 (instruccion -> r_return .)
    RINTERFACE      reduce using rule 24 (instruccion -> r_return .)
    $end            reduce using rule 24 (instruccion -> r_return .)
    LLAVEDER        reduce using rule 24 (instruccion -> r_return .)


state 11

    (11) instruccion -> asignacion . PTCOMA
    (25) instruccion -> asignacion .

    PTCOMA          shift and go to state 37
    RCONSOLE        reduce using rule 25 (instruccion -> asignacion .)
    RLET            reduce using rule 25 (instruccion -> asignacion .)
    RIF             reduce using rule 25 (instruccion -> asignacion .)
    RFOR            reduce using rule 25 (instruccion -> asignacion .)
    RFUNCTION       reduce using rule 25 (instruccion -> asignacion .)
    ID              reduce using rule 25 (instruccion -> asignacion .)
    RRETURN         reduce using rule 25 (instruccion -> asignacion .)
    RWHILE          reduce using rule 25 (instruccion -> asignacion .)
    RBREAK          reduce using rule 25 (instruccion -> asignacion .)
    RCONTINUE       reduce using rule 25 (instruccion -> asignacion .)
    RINTERFACE      reduce using rule 25 (instruccion -> asignacion .)
    $end            reduce using rule 25 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 25 (instruccion -> asignacion .)


state 12

    (12) instruccion -> ciclo_while . PTCOMA
    (26) instruccion -> ciclo_while .

    PTCOMA          shift and go to state 38
    RCONSOLE        reduce using rule 26 (instruccion -> ciclo_while .)
    RLET            reduce using rule 26 (instruccion -> ciclo_while .)
    RIF             reduce using rule 26 (instruccion -> ciclo_while .)
    RFOR            reduce using rule 26 (instruccion -> ciclo_while .)
    RFUNCTION       reduce using rule 26 (instruccion -> ciclo_while .)
    ID              reduce using rule 26 (instruccion -> ciclo_while .)
    RRETURN         reduce using rule 26 (instruccion -> ciclo_while .)
    RWHILE          reduce using rule 26 (instruccion -> ciclo_while .)
    RBREAK          reduce using rule 26 (instruccion -> ciclo_while .)
    RCONTINUE       reduce using rule 26 (instruccion -> ciclo_while .)
    RINTERFACE      reduce using rule 26 (instruccion -> ciclo_while .)
    $end            reduce using rule 26 (instruccion -> ciclo_while .)
    LLAVEDER        reduce using rule 26 (instruccion -> ciclo_while .)


state 13

    (13) instruccion -> r_break . PTCOMA
    (27) instruccion -> r_break .

    PTCOMA          shift and go to state 39
    RCONSOLE        reduce using rule 27 (instruccion -> r_break .)
    RLET            reduce using rule 27 (instruccion -> r_break .)
    RIF             reduce using rule 27 (instruccion -> r_break .)
    RFOR            reduce using rule 27 (instruccion -> r_break .)
    RFUNCTION       reduce using rule 27 (instruccion -> r_break .)
    ID              reduce using rule 27 (instruccion -> r_break .)
    RRETURN         reduce using rule 27 (instruccion -> r_break .)
    RWHILE          reduce using rule 27 (instruccion -> r_break .)
    RBREAK          reduce using rule 27 (instruccion -> r_break .)
    RCONTINUE       reduce using rule 27 (instruccion -> r_break .)
    RINTERFACE      reduce using rule 27 (instruccion -> r_break .)
    $end            reduce using rule 27 (instruccion -> r_break .)
    LLAVEDER        reduce using rule 27 (instruccion -> r_break .)


state 14

    (14) instruccion -> r_continue . PTCOMA
    (28) instruccion -> r_continue .

    PTCOMA          shift and go to state 40
    RCONSOLE        reduce using rule 28 (instruccion -> r_continue .)
    RLET            reduce using rule 28 (instruccion -> r_continue .)
    RIF             reduce using rule 28 (instruccion -> r_continue .)
    RFOR            reduce using rule 28 (instruccion -> r_continue .)
    RFUNCTION       reduce using rule 28 (instruccion -> r_continue .)
    ID              reduce using rule 28 (instruccion -> r_continue .)
    RRETURN         reduce using rule 28 (instruccion -> r_continue .)
    RWHILE          reduce using rule 28 (instruccion -> r_continue .)
    RBREAK          reduce using rule 28 (instruccion -> r_continue .)
    RCONTINUE       reduce using rule 28 (instruccion -> r_continue .)
    RINTERFACE      reduce using rule 28 (instruccion -> r_continue .)
    $end            reduce using rule 28 (instruccion -> r_continue .)
    LLAVEDER        reduce using rule 28 (instruccion -> r_continue .)


state 15

    (15) instruccion -> struct . PTCOMA
    (29) instruccion -> struct .

    PTCOMA          shift and go to state 41
    RCONSOLE        reduce using rule 29 (instruccion -> struct .)
    RLET            reduce using rule 29 (instruccion -> struct .)
    RIF             reduce using rule 29 (instruccion -> struct .)
    RFOR            reduce using rule 29 (instruccion -> struct .)
    RFUNCTION       reduce using rule 29 (instruccion -> struct .)
    ID              reduce using rule 29 (instruccion -> struct .)
    RRETURN         reduce using rule 29 (instruccion -> struct .)
    RWHILE          reduce using rule 29 (instruccion -> struct .)
    RBREAK          reduce using rule 29 (instruccion -> struct .)
    RCONTINUE       reduce using rule 29 (instruccion -> struct .)
    RINTERFACE      reduce using rule 29 (instruccion -> struct .)
    $end            reduce using rule 29 (instruccion -> struct .)
    LLAVEDER        reduce using rule 29 (instruccion -> struct .)


state 16

    (16) instruccion -> asignacion_struct . PTCOMA
    (30) instruccion -> asignacion_struct .

    PTCOMA          shift and go to state 42
    RCONSOLE        reduce using rule 30 (instruccion -> asignacion_struct .)
    RLET            reduce using rule 30 (instruccion -> asignacion_struct .)
    RIF             reduce using rule 30 (instruccion -> asignacion_struct .)
    RFOR            reduce using rule 30 (instruccion -> asignacion_struct .)
    RFUNCTION       reduce using rule 30 (instruccion -> asignacion_struct .)
    ID              reduce using rule 30 (instruccion -> asignacion_struct .)
    RRETURN         reduce using rule 30 (instruccion -> asignacion_struct .)
    RWHILE          reduce using rule 30 (instruccion -> asignacion_struct .)
    RBREAK          reduce using rule 30 (instruccion -> asignacion_struct .)
    RCONTINUE       reduce using rule 30 (instruccion -> asignacion_struct .)
    RINTERFACE      reduce using rule 30 (instruccion -> asignacion_struct .)
    $end            reduce using rule 30 (instruccion -> asignacion_struct .)
    LLAVEDER        reduce using rule 30 (instruccion -> asignacion_struct .)


state 17

    (17) instruccion -> declaracion_array . PTCOMA
    (31) instruccion -> declaracion_array .

    PTCOMA          shift and go to state 43
    RCONSOLE        reduce using rule 31 (instruccion -> declaracion_array .)
    RLET            reduce using rule 31 (instruccion -> declaracion_array .)
    RIF             reduce using rule 31 (instruccion -> declaracion_array .)
    RFOR            reduce using rule 31 (instruccion -> declaracion_array .)
    RFUNCTION       reduce using rule 31 (instruccion -> declaracion_array .)
    ID              reduce using rule 31 (instruccion -> declaracion_array .)
    RRETURN         reduce using rule 31 (instruccion -> declaracion_array .)
    RWHILE          reduce using rule 31 (instruccion -> declaracion_array .)
    RBREAK          reduce using rule 31 (instruccion -> declaracion_array .)
    RCONTINUE       reduce using rule 31 (instruccion -> declaracion_array .)
    RINTERFACE      reduce using rule 31 (instruccion -> declaracion_array .)
    $end            reduce using rule 31 (instruccion -> declaracion_array .)
    LLAVEDER        reduce using rule 31 (instruccion -> declaracion_array .)


state 18

    (32) imprimir -> RCONSOLE . PUNTO RLOG PARIZQ parametros_llamada PARDER

    PUNTO           shift and go to state 44


state 19

    (34) declaracion_normal -> RLET . ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> RLET . ID
    (36) declaracion_normal -> RLET . ID DOSPUNTOS tipo
    (37) declaracion_normal -> RLET . ID IGUAL expresion
    (40) declaracion_array -> RLET . ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> RLET . ID DOSPUNTOS tipo IGUAL CORIZQ CORDER
    (42) declaracion_array -> RLET . ID IGUAL CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> RLET . ID IGUAL CORIZQ CORDER

    ID              shift and go to state 45


state 20

    (48) llamada_funcion -> ID . PARIZQ PARDER
    (49) llamada_funcion -> ID . PARIZQ parametros_llamada PARDER
    (33) asignacion -> ID . IGUAL expresion
    (39) asignacion_struct -> ID . PUNTO parametros_asignacion_struct IGUAL expresion

    PARIZQ          shift and go to state 46
    IGUAL           shift and go to state 47
    PUNTO           shift and go to state 48


state 21

    (72) condicional_ifs -> RIF . condicional_if
    (73) condicional_if -> . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (74) condicional_if -> . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (75) condicional_if -> . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if

    PARIZQ          shift and go to state 50

    condicional_if                 shift and go to state 49

state 22

    (76) ciclo_for -> RFOR . PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 51


state 23

    (44) funcion -> RFUNCTION . ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> RFUNCTION . ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> RFUNCTION . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> RFUNCTION . ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 52


state 24

    (69) r_return -> RRETURN . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 53
    llamada_funcion                shift and go to state 54

state 25

    (77) ciclo_while -> RWHILE . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 66


state 26

    (70) r_break -> RBREAK .

    PTCOMA          reduce using rule 70 (r_break -> RBREAK .)
    RCONSOLE        reduce using rule 70 (r_break -> RBREAK .)
    RLET            reduce using rule 70 (r_break -> RBREAK .)
    RIF             reduce using rule 70 (r_break -> RBREAK .)
    RFOR            reduce using rule 70 (r_break -> RBREAK .)
    RFUNCTION       reduce using rule 70 (r_break -> RBREAK .)
    ID              reduce using rule 70 (r_break -> RBREAK .)
    RRETURN         reduce using rule 70 (r_break -> RBREAK .)
    RWHILE          reduce using rule 70 (r_break -> RBREAK .)
    RBREAK          reduce using rule 70 (r_break -> RBREAK .)
    RCONTINUE       reduce using rule 70 (r_break -> RBREAK .)
    RINTERFACE      reduce using rule 70 (r_break -> RBREAK .)
    $end            reduce using rule 70 (r_break -> RBREAK .)
    LLAVEDER        reduce using rule 70 (r_break -> RBREAK .)


state 27

    (71) r_continue -> RCONTINUE .

    PTCOMA          reduce using rule 71 (r_continue -> RCONTINUE .)
    RCONSOLE        reduce using rule 71 (r_continue -> RCONTINUE .)
    RLET            reduce using rule 71 (r_continue -> RCONTINUE .)
    RIF             reduce using rule 71 (r_continue -> RCONTINUE .)
    RFOR            reduce using rule 71 (r_continue -> RCONTINUE .)
    RFUNCTION       reduce using rule 71 (r_continue -> RCONTINUE .)
    ID              reduce using rule 71 (r_continue -> RCONTINUE .)
    RRETURN         reduce using rule 71 (r_continue -> RCONTINUE .)
    RWHILE          reduce using rule 71 (r_continue -> RCONTINUE .)
    RBREAK          reduce using rule 71 (r_continue -> RCONTINUE .)
    RCONTINUE       reduce using rule 71 (r_continue -> RCONTINUE .)
    RINTERFACE      reduce using rule 71 (r_continue -> RCONTINUE .)
    $end            reduce using rule 71 (r_continue -> RCONTINUE .)
    LLAVEDER        reduce using rule 71 (r_continue -> RCONTINUE .)


state 28

    (38) struct -> RINTERFACE . ID LLAVEIZQ parametros_struct LLAVEDER

    ID              shift and go to state 67


state 29

    (2) instrucciones -> instrucciones instruccion .

    RCONSOLE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RLET            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RIF             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RFOR            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RFUNCTION       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RRETURN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RWHILE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RBREAK          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RCONTINUE       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RINTERFACE      reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 30

    (4) instruccion -> imprimir PTCOMA .

    RCONSOLE        reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    RLET            reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    RIF             reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    RFOR            reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    RFUNCTION       reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    ID              reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    RRETURN         reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    RWHILE          reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    RBREAK          reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    RCONTINUE       reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    RINTERFACE      reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    $end            reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    LLAVEDER        reduce using rule 4 (instruccion -> imprimir PTCOMA .)


state 31

    (5) instruccion -> declaracion_normal PTCOMA .

    RCONSOLE        reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    RLET            reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    RIF             reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    RFOR            reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    RFUNCTION       reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    ID              reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    RRETURN         reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    RWHILE          reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    RBREAK          reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    RCONTINUE       reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    RINTERFACE      reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    $end            reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    LLAVEDER        reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)


state 32

    (6) instruccion -> condicional_ifs PTCOMA .

    RCONSOLE        reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    RLET            reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    RIF             reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    RFOR            reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    RFUNCTION       reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    ID              reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    RRETURN         reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    RWHILE          reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    RBREAK          reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    RCONTINUE       reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    RINTERFACE      reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    $end            reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    LLAVEDER        reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)


state 33

    (7) instruccion -> ciclo_for PTCOMA .

    RCONSOLE        reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    RLET            reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    RIF             reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    RFOR            reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    RFUNCTION       reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    ID              reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    RRETURN         reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    RWHILE          reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    RBREAK          reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    RCONTINUE       reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    RINTERFACE      reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    $end            reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    LLAVEDER        reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)


state 34

    (8) instruccion -> funcion PTCOMA .

    RCONSOLE        reduce using rule 8 (instruccion -> funcion PTCOMA .)
    RLET            reduce using rule 8 (instruccion -> funcion PTCOMA .)
    RIF             reduce using rule 8 (instruccion -> funcion PTCOMA .)
    RFOR            reduce using rule 8 (instruccion -> funcion PTCOMA .)
    RFUNCTION       reduce using rule 8 (instruccion -> funcion PTCOMA .)
    ID              reduce using rule 8 (instruccion -> funcion PTCOMA .)
    RRETURN         reduce using rule 8 (instruccion -> funcion PTCOMA .)
    RWHILE          reduce using rule 8 (instruccion -> funcion PTCOMA .)
    RBREAK          reduce using rule 8 (instruccion -> funcion PTCOMA .)
    RCONTINUE       reduce using rule 8 (instruccion -> funcion PTCOMA .)
    RINTERFACE      reduce using rule 8 (instruccion -> funcion PTCOMA .)
    $end            reduce using rule 8 (instruccion -> funcion PTCOMA .)
    LLAVEDER        reduce using rule 8 (instruccion -> funcion PTCOMA .)


state 35

    (9) instruccion -> llamada_funcion PTCOMA .

    RCONSOLE        reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    RLET            reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    RIF             reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    RFOR            reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    RFUNCTION       reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    ID              reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    RRETURN         reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    RWHILE          reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    RBREAK          reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    RCONTINUE       reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    RINTERFACE      reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    $end            reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    LLAVEDER        reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)


state 36

    (10) instruccion -> r_return PTCOMA .

    RCONSOLE        reduce using rule 10 (instruccion -> r_return PTCOMA .)
    RLET            reduce using rule 10 (instruccion -> r_return PTCOMA .)
    RIF             reduce using rule 10 (instruccion -> r_return PTCOMA .)
    RFOR            reduce using rule 10 (instruccion -> r_return PTCOMA .)
    RFUNCTION       reduce using rule 10 (instruccion -> r_return PTCOMA .)
    ID              reduce using rule 10 (instruccion -> r_return PTCOMA .)
    RRETURN         reduce using rule 10 (instruccion -> r_return PTCOMA .)
    RWHILE          reduce using rule 10 (instruccion -> r_return PTCOMA .)
    RBREAK          reduce using rule 10 (instruccion -> r_return PTCOMA .)
    RCONTINUE       reduce using rule 10 (instruccion -> r_return PTCOMA .)
    RINTERFACE      reduce using rule 10 (instruccion -> r_return PTCOMA .)
    $end            reduce using rule 10 (instruccion -> r_return PTCOMA .)
    LLAVEDER        reduce using rule 10 (instruccion -> r_return PTCOMA .)


state 37

    (11) instruccion -> asignacion PTCOMA .

    RCONSOLE        reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    RLET            reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    RIF             reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    RFOR            reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    RFUNCTION       reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    ID              reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    RRETURN         reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    RWHILE          reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    RBREAK          reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    RCONTINUE       reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    RINTERFACE      reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    $end            reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    LLAVEDER        reduce using rule 11 (instruccion -> asignacion PTCOMA .)


state 38

    (12) instruccion -> ciclo_while PTCOMA .

    RCONSOLE        reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    RLET            reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    RIF             reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    RFOR            reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    RFUNCTION       reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    ID              reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    RRETURN         reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    RWHILE          reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    RBREAK          reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    RCONTINUE       reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    RINTERFACE      reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    $end            reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    LLAVEDER        reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)


state 39

    (13) instruccion -> r_break PTCOMA .

    RCONSOLE        reduce using rule 13 (instruccion -> r_break PTCOMA .)
    RLET            reduce using rule 13 (instruccion -> r_break PTCOMA .)
    RIF             reduce using rule 13 (instruccion -> r_break PTCOMA .)
    RFOR            reduce using rule 13 (instruccion -> r_break PTCOMA .)
    RFUNCTION       reduce using rule 13 (instruccion -> r_break PTCOMA .)
    ID              reduce using rule 13 (instruccion -> r_break PTCOMA .)
    RRETURN         reduce using rule 13 (instruccion -> r_break PTCOMA .)
    RWHILE          reduce using rule 13 (instruccion -> r_break PTCOMA .)
    RBREAK          reduce using rule 13 (instruccion -> r_break PTCOMA .)
    RCONTINUE       reduce using rule 13 (instruccion -> r_break PTCOMA .)
    RINTERFACE      reduce using rule 13 (instruccion -> r_break PTCOMA .)
    $end            reduce using rule 13 (instruccion -> r_break PTCOMA .)
    LLAVEDER        reduce using rule 13 (instruccion -> r_break PTCOMA .)


state 40

    (14) instruccion -> r_continue PTCOMA .

    RCONSOLE        reduce using rule 14 (instruccion -> r_continue PTCOMA .)
    RLET            reduce using rule 14 (instruccion -> r_continue PTCOMA .)
    RIF             reduce using rule 14 (instruccion -> r_continue PTCOMA .)
    RFOR            reduce using rule 14 (instruccion -> r_continue PTCOMA .)
    RFUNCTION       reduce using rule 14 (instruccion -> r_continue PTCOMA .)
    ID              reduce using rule 14 (instruccion -> r_continue PTCOMA .)
    RRETURN         reduce using rule 14 (instruccion -> r_continue PTCOMA .)
    RWHILE          reduce using rule 14 (instruccion -> r_continue PTCOMA .)
    RBREAK          reduce using rule 14 (instruccion -> r_continue PTCOMA .)
    RCONTINUE       reduce using rule 14 (instruccion -> r_continue PTCOMA .)
    RINTERFACE      reduce using rule 14 (instruccion -> r_continue PTCOMA .)
    $end            reduce using rule 14 (instruccion -> r_continue PTCOMA .)
    LLAVEDER        reduce using rule 14 (instruccion -> r_continue PTCOMA .)


state 41

    (15) instruccion -> struct PTCOMA .

    RCONSOLE        reduce using rule 15 (instruccion -> struct PTCOMA .)
    RLET            reduce using rule 15 (instruccion -> struct PTCOMA .)
    RIF             reduce using rule 15 (instruccion -> struct PTCOMA .)
    RFOR            reduce using rule 15 (instruccion -> struct PTCOMA .)
    RFUNCTION       reduce using rule 15 (instruccion -> struct PTCOMA .)
    ID              reduce using rule 15 (instruccion -> struct PTCOMA .)
    RRETURN         reduce using rule 15 (instruccion -> struct PTCOMA .)
    RWHILE          reduce using rule 15 (instruccion -> struct PTCOMA .)
    RBREAK          reduce using rule 15 (instruccion -> struct PTCOMA .)
    RCONTINUE       reduce using rule 15 (instruccion -> struct PTCOMA .)
    RINTERFACE      reduce using rule 15 (instruccion -> struct PTCOMA .)
    $end            reduce using rule 15 (instruccion -> struct PTCOMA .)
    LLAVEDER        reduce using rule 15 (instruccion -> struct PTCOMA .)


state 42

    (16) instruccion -> asignacion_struct PTCOMA .

    RCONSOLE        reduce using rule 16 (instruccion -> asignacion_struct PTCOMA .)
    RLET            reduce using rule 16 (instruccion -> asignacion_struct PTCOMA .)
    RIF             reduce using rule 16 (instruccion -> asignacion_struct PTCOMA .)
    RFOR            reduce using rule 16 (instruccion -> asignacion_struct PTCOMA .)
    RFUNCTION       reduce using rule 16 (instruccion -> asignacion_struct PTCOMA .)
    ID              reduce using rule 16 (instruccion -> asignacion_struct PTCOMA .)
    RRETURN         reduce using rule 16 (instruccion -> asignacion_struct PTCOMA .)
    RWHILE          reduce using rule 16 (instruccion -> asignacion_struct PTCOMA .)
    RBREAK          reduce using rule 16 (instruccion -> asignacion_struct PTCOMA .)
    RCONTINUE       reduce using rule 16 (instruccion -> asignacion_struct PTCOMA .)
    RINTERFACE      reduce using rule 16 (instruccion -> asignacion_struct PTCOMA .)
    $end            reduce using rule 16 (instruccion -> asignacion_struct PTCOMA .)
    LLAVEDER        reduce using rule 16 (instruccion -> asignacion_struct PTCOMA .)


state 43

    (17) instruccion -> declaracion_array PTCOMA .

    RCONSOLE        reduce using rule 17 (instruccion -> declaracion_array PTCOMA .)
    RLET            reduce using rule 17 (instruccion -> declaracion_array PTCOMA .)
    RIF             reduce using rule 17 (instruccion -> declaracion_array PTCOMA .)
    RFOR            reduce using rule 17 (instruccion -> declaracion_array PTCOMA .)
    RFUNCTION       reduce using rule 17 (instruccion -> declaracion_array PTCOMA .)
    ID              reduce using rule 17 (instruccion -> declaracion_array PTCOMA .)
    RRETURN         reduce using rule 17 (instruccion -> declaracion_array PTCOMA .)
    RWHILE          reduce using rule 17 (instruccion -> declaracion_array PTCOMA .)
    RBREAK          reduce using rule 17 (instruccion -> declaracion_array PTCOMA .)
    RCONTINUE       reduce using rule 17 (instruccion -> declaracion_array PTCOMA .)
    RINTERFACE      reduce using rule 17 (instruccion -> declaracion_array PTCOMA .)
    $end            reduce using rule 17 (instruccion -> declaracion_array PTCOMA .)
    LLAVEDER        reduce using rule 17 (instruccion -> declaracion_array PTCOMA .)


state 44

    (32) imprimir -> RCONSOLE PUNTO . RLOG PARIZQ parametros_llamada PARDER

    RLOG            shift and go to state 68


state 45

    (34) declaracion_normal -> RLET ID . DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> RLET ID .
    (36) declaracion_normal -> RLET ID . DOSPUNTOS tipo
    (37) declaracion_normal -> RLET ID . IGUAL expresion
    (40) declaracion_array -> RLET ID . DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> RLET ID . DOSPUNTOS tipo IGUAL CORIZQ CORDER
    (42) declaracion_array -> RLET ID . IGUAL CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> RLET ID . IGUAL CORIZQ CORDER

    DOSPUNTOS       shift and go to state 69
    PTCOMA          reduce using rule 35 (declaracion_normal -> RLET ID .)
    RCONSOLE        reduce using rule 35 (declaracion_normal -> RLET ID .)
    RLET            reduce using rule 35 (declaracion_normal -> RLET ID .)
    RIF             reduce using rule 35 (declaracion_normal -> RLET ID .)
    RFOR            reduce using rule 35 (declaracion_normal -> RLET ID .)
    RFUNCTION       reduce using rule 35 (declaracion_normal -> RLET ID .)
    ID              reduce using rule 35 (declaracion_normal -> RLET ID .)
    RRETURN         reduce using rule 35 (declaracion_normal -> RLET ID .)
    RWHILE          reduce using rule 35 (declaracion_normal -> RLET ID .)
    RBREAK          reduce using rule 35 (declaracion_normal -> RLET ID .)
    RCONTINUE       reduce using rule 35 (declaracion_normal -> RLET ID .)
    RINTERFACE      reduce using rule 35 (declaracion_normal -> RLET ID .)
    $end            reduce using rule 35 (declaracion_normal -> RLET ID .)
    LLAVEDER        reduce using rule 35 (declaracion_normal -> RLET ID .)
    IGUAL           shift and go to state 70


state 46

    (48) llamada_funcion -> ID PARIZQ . PARDER
    (49) llamada_funcion -> ID PARIZQ . parametros_llamada PARDER
    (65) parametros_llamada -> . parametros_llamada COMA parametro_ll
    (66) parametros_llamada -> . parametro_ll
    (67) parametro_ll -> . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    PARDER          shift and go to state 71
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    parametros_llamada             shift and go to state 72
    parametro_ll                   shift and go to state 73
    expresion                      shift and go to state 74
    llamada_funcion                shift and go to state 54

state 47

    (33) asignacion -> ID IGUAL . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 75
    llamada_funcion                shift and go to state 54

state 48

    (39) asignacion_struct -> ID PUNTO . parametros_asignacion_struct IGUAL expresion
    (57) parametros_asignacion_struct -> . parametros_asignacion_struct PUNTO asignacion_struct_param
    (58) parametros_asignacion_struct -> . asignacion_struct_param
    (59) asignacion_struct_param -> . ID

    ID              shift and go to state 76

    parametros_asignacion_struct   shift and go to state 77
    asignacion_struct_param        shift and go to state 78

state 49

    (72) condicional_ifs -> RIF condicional_if .

    PTCOMA          reduce using rule 72 (condicional_ifs -> RIF condicional_if .)
    RCONSOLE        reduce using rule 72 (condicional_ifs -> RIF condicional_if .)
    RLET            reduce using rule 72 (condicional_ifs -> RIF condicional_if .)
    RIF             reduce using rule 72 (condicional_ifs -> RIF condicional_if .)
    RFOR            reduce using rule 72 (condicional_ifs -> RIF condicional_if .)
    RFUNCTION       reduce using rule 72 (condicional_ifs -> RIF condicional_if .)
    ID              reduce using rule 72 (condicional_ifs -> RIF condicional_if .)
    RRETURN         reduce using rule 72 (condicional_ifs -> RIF condicional_if .)
    RWHILE          reduce using rule 72 (condicional_ifs -> RIF condicional_if .)
    RBREAK          reduce using rule 72 (condicional_ifs -> RIF condicional_if .)
    RCONTINUE       reduce using rule 72 (condicional_ifs -> RIF condicional_if .)
    RINTERFACE      reduce using rule 72 (condicional_ifs -> RIF condicional_if .)
    $end            reduce using rule 72 (condicional_ifs -> RIF condicional_if .)
    LLAVEDER        reduce using rule 72 (condicional_ifs -> RIF condicional_if .)


state 50

    (73) condicional_if -> PARIZQ . expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (74) condicional_if -> PARIZQ . expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (75) condicional_if -> PARIZQ . expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 79
    llamada_funcion                shift and go to state 54

state 51

    (76) ciclo_for -> RFOR PARIZQ . declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (34) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> . RLET ID
    (36) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (37) declaracion_normal -> . RLET ID IGUAL expresion

    RLET            shift and go to state 81

    declaracion_normal             shift and go to state 80

state 52

    (44) funcion -> RFUNCTION ID . PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> RFUNCTION ID . PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> RFUNCTION ID . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> RFUNCTION ID . PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 82


state 53

    (69) r_return -> RRETURN expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    PTCOMA          reduce using rule 69 (r_return -> RRETURN expresion .)
    RCONSOLE        reduce using rule 69 (r_return -> RRETURN expresion .)
    RLET            reduce using rule 69 (r_return -> RRETURN expresion .)
    RIF             reduce using rule 69 (r_return -> RRETURN expresion .)
    RFOR            reduce using rule 69 (r_return -> RRETURN expresion .)
    RFUNCTION       reduce using rule 69 (r_return -> RRETURN expresion .)
    ID              reduce using rule 69 (r_return -> RRETURN expresion .)
    RRETURN         reduce using rule 69 (r_return -> RRETURN expresion .)
    RWHILE          reduce using rule 69 (r_return -> RRETURN expresion .)
    RBREAK          reduce using rule 69 (r_return -> RRETURN expresion .)
    RCONTINUE       reduce using rule 69 (r_return -> RRETURN expresion .)
    RINTERFACE      reduce using rule 69 (r_return -> RRETURN expresion .)
    $end            reduce using rule 69 (r_return -> RRETURN expresion .)
    LLAVEDER        reduce using rule 69 (r_return -> RRETURN expresion .)
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    IGUALDAD        shift and go to state 87
    DESIGUALDAD     shift and go to state 88
    MAYORQ          shift and go to state 89
    MENORQ          shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    MENORIGUAL      shift and go to state 92
    AND             shift and go to state 93
    OR              shift and go to state 94
    POT             shift and go to state 95
    MOD             shift and go to state 96


state 54

    (68) expresion -> llamada_funcion .

    MAS             reduce using rule 68 (expresion -> llamada_funcion .)
    MENOS           reduce using rule 68 (expresion -> llamada_funcion .)
    POR             reduce using rule 68 (expresion -> llamada_funcion .)
    DIV             reduce using rule 68 (expresion -> llamada_funcion .)
    IGUALDAD        reduce using rule 68 (expresion -> llamada_funcion .)
    DESIGUALDAD     reduce using rule 68 (expresion -> llamada_funcion .)
    MAYORQ          reduce using rule 68 (expresion -> llamada_funcion .)
    MENORQ          reduce using rule 68 (expresion -> llamada_funcion .)
    MAYORIGUAL      reduce using rule 68 (expresion -> llamada_funcion .)
    MENORIGUAL      reduce using rule 68 (expresion -> llamada_funcion .)
    AND             reduce using rule 68 (expresion -> llamada_funcion .)
    OR              reduce using rule 68 (expresion -> llamada_funcion .)
    POT             reduce using rule 68 (expresion -> llamada_funcion .)
    MOD             reduce using rule 68 (expresion -> llamada_funcion .)
    PTCOMA          reduce using rule 68 (expresion -> llamada_funcion .)
    RCONSOLE        reduce using rule 68 (expresion -> llamada_funcion .)
    RLET            reduce using rule 68 (expresion -> llamada_funcion .)
    RIF             reduce using rule 68 (expresion -> llamada_funcion .)
    RFOR            reduce using rule 68 (expresion -> llamada_funcion .)
    RFUNCTION       reduce using rule 68 (expresion -> llamada_funcion .)
    ID              reduce using rule 68 (expresion -> llamada_funcion .)
    RRETURN         reduce using rule 68 (expresion -> llamada_funcion .)
    RWHILE          reduce using rule 68 (expresion -> llamada_funcion .)
    RBREAK          reduce using rule 68 (expresion -> llamada_funcion .)
    RCONTINUE       reduce using rule 68 (expresion -> llamada_funcion .)
    RINTERFACE      reduce using rule 68 (expresion -> llamada_funcion .)
    $end            reduce using rule 68 (expresion -> llamada_funcion .)
    LLAVEDER        reduce using rule 68 (expresion -> llamada_funcion .)
    PARDER          reduce using rule 68 (expresion -> llamada_funcion .)
    COMA            reduce using rule 68 (expresion -> llamada_funcion .)
    CORDER          reduce using rule 68 (expresion -> llamada_funcion .)


state 55

    (95) expresion -> MENOS . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 97
    llamada_funcion                shift and go to state 54

state 56

    (96) expresion -> NOT . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 98
    llamada_funcion                shift and go to state 54

state 57

    (97) expresion -> PARIZQ . expresion PARDER
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 99
    llamada_funcion                shift and go to state 54

state 58

    (100) expresion -> ID . PUNTO parametros_asignacion_struct
    (101) expresion -> ID .
    (48) llamada_funcion -> ID . PARIZQ PARDER
    (49) llamada_funcion -> ID . PARIZQ parametros_llamada PARDER

    PUNTO           shift and go to state 100
    MAS             reduce using rule 101 (expresion -> ID .)
    MENOS           reduce using rule 101 (expresion -> ID .)
    POR             reduce using rule 101 (expresion -> ID .)
    DIV             reduce using rule 101 (expresion -> ID .)
    IGUALDAD        reduce using rule 101 (expresion -> ID .)
    DESIGUALDAD     reduce using rule 101 (expresion -> ID .)
    MAYORQ          reduce using rule 101 (expresion -> ID .)
    MENORQ          reduce using rule 101 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 101 (expresion -> ID .)
    MENORIGUAL      reduce using rule 101 (expresion -> ID .)
    AND             reduce using rule 101 (expresion -> ID .)
    OR              reduce using rule 101 (expresion -> ID .)
    POT             reduce using rule 101 (expresion -> ID .)
    MOD             reduce using rule 101 (expresion -> ID .)
    PTCOMA          reduce using rule 101 (expresion -> ID .)
    RCONSOLE        reduce using rule 101 (expresion -> ID .)
    RLET            reduce using rule 101 (expresion -> ID .)
    RIF             reduce using rule 101 (expresion -> ID .)
    RFOR            reduce using rule 101 (expresion -> ID .)
    RFUNCTION       reduce using rule 101 (expresion -> ID .)
    ID              reduce using rule 101 (expresion -> ID .)
    RRETURN         reduce using rule 101 (expresion -> ID .)
    RWHILE          reduce using rule 101 (expresion -> ID .)
    RBREAK          reduce using rule 101 (expresion -> ID .)
    RCONTINUE       reduce using rule 101 (expresion -> ID .)
    RINTERFACE      reduce using rule 101 (expresion -> ID .)
    $end            reduce using rule 101 (expresion -> ID .)
    LLAVEDER        reduce using rule 101 (expresion -> ID .)
    PARDER          reduce using rule 101 (expresion -> ID .)
    COMA            reduce using rule 101 (expresion -> ID .)
    CORDER          reduce using rule 101 (expresion -> ID .)
    PARIZQ          shift and go to state 46


state 59

    (102) expresion -> RNULL .

    MAS             reduce using rule 102 (expresion -> RNULL .)
    MENOS           reduce using rule 102 (expresion -> RNULL .)
    POR             reduce using rule 102 (expresion -> RNULL .)
    DIV             reduce using rule 102 (expresion -> RNULL .)
    IGUALDAD        reduce using rule 102 (expresion -> RNULL .)
    DESIGUALDAD     reduce using rule 102 (expresion -> RNULL .)
    MAYORQ          reduce using rule 102 (expresion -> RNULL .)
    MENORQ          reduce using rule 102 (expresion -> RNULL .)
    MAYORIGUAL      reduce using rule 102 (expresion -> RNULL .)
    MENORIGUAL      reduce using rule 102 (expresion -> RNULL .)
    AND             reduce using rule 102 (expresion -> RNULL .)
    OR              reduce using rule 102 (expresion -> RNULL .)
    POT             reduce using rule 102 (expresion -> RNULL .)
    MOD             reduce using rule 102 (expresion -> RNULL .)
    PTCOMA          reduce using rule 102 (expresion -> RNULL .)
    RCONSOLE        reduce using rule 102 (expresion -> RNULL .)
    RLET            reduce using rule 102 (expresion -> RNULL .)
    RIF             reduce using rule 102 (expresion -> RNULL .)
    RFOR            reduce using rule 102 (expresion -> RNULL .)
    RFUNCTION       reduce using rule 102 (expresion -> RNULL .)
    ID              reduce using rule 102 (expresion -> RNULL .)
    RRETURN         reduce using rule 102 (expresion -> RNULL .)
    RWHILE          reduce using rule 102 (expresion -> RNULL .)
    RBREAK          reduce using rule 102 (expresion -> RNULL .)
    RCONTINUE       reduce using rule 102 (expresion -> RNULL .)
    RINTERFACE      reduce using rule 102 (expresion -> RNULL .)
    $end            reduce using rule 102 (expresion -> RNULL .)
    LLAVEDER        reduce using rule 102 (expresion -> RNULL .)
    PARDER          reduce using rule 102 (expresion -> RNULL .)
    COMA            reduce using rule 102 (expresion -> RNULL .)
    CORDER          reduce using rule 102 (expresion -> RNULL .)


state 60

    (103) expresion -> RANY .

    MAS             reduce using rule 103 (expresion -> RANY .)
    MENOS           reduce using rule 103 (expresion -> RANY .)
    POR             reduce using rule 103 (expresion -> RANY .)
    DIV             reduce using rule 103 (expresion -> RANY .)
    IGUALDAD        reduce using rule 103 (expresion -> RANY .)
    DESIGUALDAD     reduce using rule 103 (expresion -> RANY .)
    MAYORQ          reduce using rule 103 (expresion -> RANY .)
    MENORQ          reduce using rule 103 (expresion -> RANY .)
    MAYORIGUAL      reduce using rule 103 (expresion -> RANY .)
    MENORIGUAL      reduce using rule 103 (expresion -> RANY .)
    AND             reduce using rule 103 (expresion -> RANY .)
    OR              reduce using rule 103 (expresion -> RANY .)
    POT             reduce using rule 103 (expresion -> RANY .)
    MOD             reduce using rule 103 (expresion -> RANY .)
    PTCOMA          reduce using rule 103 (expresion -> RANY .)
    RCONSOLE        reduce using rule 103 (expresion -> RANY .)
    RLET            reduce using rule 103 (expresion -> RANY .)
    RIF             reduce using rule 103 (expresion -> RANY .)
    RFOR            reduce using rule 103 (expresion -> RANY .)
    RFUNCTION       reduce using rule 103 (expresion -> RANY .)
    ID              reduce using rule 103 (expresion -> RANY .)
    RRETURN         reduce using rule 103 (expresion -> RANY .)
    RWHILE          reduce using rule 103 (expresion -> RANY .)
    RBREAK          reduce using rule 103 (expresion -> RANY .)
    RCONTINUE       reduce using rule 103 (expresion -> RANY .)
    RINTERFACE      reduce using rule 103 (expresion -> RANY .)
    $end            reduce using rule 103 (expresion -> RANY .)
    LLAVEDER        reduce using rule 103 (expresion -> RANY .)
    PARDER          reduce using rule 103 (expresion -> RANY .)
    COMA            reduce using rule 103 (expresion -> RANY .)
    CORDER          reduce using rule 103 (expresion -> RANY .)


state 61

    (104) expresion -> ENTERO .

    MAS             reduce using rule 104 (expresion -> ENTERO .)
    MENOS           reduce using rule 104 (expresion -> ENTERO .)
    POR             reduce using rule 104 (expresion -> ENTERO .)
    DIV             reduce using rule 104 (expresion -> ENTERO .)
    IGUALDAD        reduce using rule 104 (expresion -> ENTERO .)
    DESIGUALDAD     reduce using rule 104 (expresion -> ENTERO .)
    MAYORQ          reduce using rule 104 (expresion -> ENTERO .)
    MENORQ          reduce using rule 104 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 104 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 104 (expresion -> ENTERO .)
    AND             reduce using rule 104 (expresion -> ENTERO .)
    OR              reduce using rule 104 (expresion -> ENTERO .)
    POT             reduce using rule 104 (expresion -> ENTERO .)
    MOD             reduce using rule 104 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 104 (expresion -> ENTERO .)
    RCONSOLE        reduce using rule 104 (expresion -> ENTERO .)
    RLET            reduce using rule 104 (expresion -> ENTERO .)
    RIF             reduce using rule 104 (expresion -> ENTERO .)
    RFOR            reduce using rule 104 (expresion -> ENTERO .)
    RFUNCTION       reduce using rule 104 (expresion -> ENTERO .)
    ID              reduce using rule 104 (expresion -> ENTERO .)
    RRETURN         reduce using rule 104 (expresion -> ENTERO .)
    RWHILE          reduce using rule 104 (expresion -> ENTERO .)
    RBREAK          reduce using rule 104 (expresion -> ENTERO .)
    RCONTINUE       reduce using rule 104 (expresion -> ENTERO .)
    RINTERFACE      reduce using rule 104 (expresion -> ENTERO .)
    $end            reduce using rule 104 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 104 (expresion -> ENTERO .)
    PARDER          reduce using rule 104 (expresion -> ENTERO .)
    COMA            reduce using rule 104 (expresion -> ENTERO .)
    CORDER          reduce using rule 104 (expresion -> ENTERO .)


state 62

    (105) expresion -> DECIMAL .

    MAS             reduce using rule 105 (expresion -> DECIMAL .)
    MENOS           reduce using rule 105 (expresion -> DECIMAL .)
    POR             reduce using rule 105 (expresion -> DECIMAL .)
    DIV             reduce using rule 105 (expresion -> DECIMAL .)
    IGUALDAD        reduce using rule 105 (expresion -> DECIMAL .)
    DESIGUALDAD     reduce using rule 105 (expresion -> DECIMAL .)
    MAYORQ          reduce using rule 105 (expresion -> DECIMAL .)
    MENORQ          reduce using rule 105 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 105 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 105 (expresion -> DECIMAL .)
    AND             reduce using rule 105 (expresion -> DECIMAL .)
    OR              reduce using rule 105 (expresion -> DECIMAL .)
    POT             reduce using rule 105 (expresion -> DECIMAL .)
    MOD             reduce using rule 105 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 105 (expresion -> DECIMAL .)
    RCONSOLE        reduce using rule 105 (expresion -> DECIMAL .)
    RLET            reduce using rule 105 (expresion -> DECIMAL .)
    RIF             reduce using rule 105 (expresion -> DECIMAL .)
    RFOR            reduce using rule 105 (expresion -> DECIMAL .)
    RFUNCTION       reduce using rule 105 (expresion -> DECIMAL .)
    ID              reduce using rule 105 (expresion -> DECIMAL .)
    RRETURN         reduce using rule 105 (expresion -> DECIMAL .)
    RWHILE          reduce using rule 105 (expresion -> DECIMAL .)
    RBREAK          reduce using rule 105 (expresion -> DECIMAL .)
    RCONTINUE       reduce using rule 105 (expresion -> DECIMAL .)
    RINTERFACE      reduce using rule 105 (expresion -> DECIMAL .)
    $end            reduce using rule 105 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 105 (expresion -> DECIMAL .)
    PARDER          reduce using rule 105 (expresion -> DECIMAL .)
    COMA            reduce using rule 105 (expresion -> DECIMAL .)
    CORDER          reduce using rule 105 (expresion -> DECIMAL .)


state 63

    (106) expresion -> CADENA .

    MAS             reduce using rule 106 (expresion -> CADENA .)
    MENOS           reduce using rule 106 (expresion -> CADENA .)
    POR             reduce using rule 106 (expresion -> CADENA .)
    DIV             reduce using rule 106 (expresion -> CADENA .)
    IGUALDAD        reduce using rule 106 (expresion -> CADENA .)
    DESIGUALDAD     reduce using rule 106 (expresion -> CADENA .)
    MAYORQ          reduce using rule 106 (expresion -> CADENA .)
    MENORQ          reduce using rule 106 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 106 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 106 (expresion -> CADENA .)
    AND             reduce using rule 106 (expresion -> CADENA .)
    OR              reduce using rule 106 (expresion -> CADENA .)
    POT             reduce using rule 106 (expresion -> CADENA .)
    MOD             reduce using rule 106 (expresion -> CADENA .)
    PTCOMA          reduce using rule 106 (expresion -> CADENA .)
    RCONSOLE        reduce using rule 106 (expresion -> CADENA .)
    RLET            reduce using rule 106 (expresion -> CADENA .)
    RIF             reduce using rule 106 (expresion -> CADENA .)
    RFOR            reduce using rule 106 (expresion -> CADENA .)
    RFUNCTION       reduce using rule 106 (expresion -> CADENA .)
    ID              reduce using rule 106 (expresion -> CADENA .)
    RRETURN         reduce using rule 106 (expresion -> CADENA .)
    RWHILE          reduce using rule 106 (expresion -> CADENA .)
    RBREAK          reduce using rule 106 (expresion -> CADENA .)
    RCONTINUE       reduce using rule 106 (expresion -> CADENA .)
    RINTERFACE      reduce using rule 106 (expresion -> CADENA .)
    $end            reduce using rule 106 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 106 (expresion -> CADENA .)
    PARDER          reduce using rule 106 (expresion -> CADENA .)
    COMA            reduce using rule 106 (expresion -> CADENA .)
    CORDER          reduce using rule 106 (expresion -> CADENA .)


state 64

    (107) expresion -> RTRUE .

    MAS             reduce using rule 107 (expresion -> RTRUE .)
    MENOS           reduce using rule 107 (expresion -> RTRUE .)
    POR             reduce using rule 107 (expresion -> RTRUE .)
    DIV             reduce using rule 107 (expresion -> RTRUE .)
    IGUALDAD        reduce using rule 107 (expresion -> RTRUE .)
    DESIGUALDAD     reduce using rule 107 (expresion -> RTRUE .)
    MAYORQ          reduce using rule 107 (expresion -> RTRUE .)
    MENORQ          reduce using rule 107 (expresion -> RTRUE .)
    MAYORIGUAL      reduce using rule 107 (expresion -> RTRUE .)
    MENORIGUAL      reduce using rule 107 (expresion -> RTRUE .)
    AND             reduce using rule 107 (expresion -> RTRUE .)
    OR              reduce using rule 107 (expresion -> RTRUE .)
    POT             reduce using rule 107 (expresion -> RTRUE .)
    MOD             reduce using rule 107 (expresion -> RTRUE .)
    PTCOMA          reduce using rule 107 (expresion -> RTRUE .)
    RCONSOLE        reduce using rule 107 (expresion -> RTRUE .)
    RLET            reduce using rule 107 (expresion -> RTRUE .)
    RIF             reduce using rule 107 (expresion -> RTRUE .)
    RFOR            reduce using rule 107 (expresion -> RTRUE .)
    RFUNCTION       reduce using rule 107 (expresion -> RTRUE .)
    ID              reduce using rule 107 (expresion -> RTRUE .)
    RRETURN         reduce using rule 107 (expresion -> RTRUE .)
    RWHILE          reduce using rule 107 (expresion -> RTRUE .)
    RBREAK          reduce using rule 107 (expresion -> RTRUE .)
    RCONTINUE       reduce using rule 107 (expresion -> RTRUE .)
    RINTERFACE      reduce using rule 107 (expresion -> RTRUE .)
    $end            reduce using rule 107 (expresion -> RTRUE .)
    LLAVEDER        reduce using rule 107 (expresion -> RTRUE .)
    PARDER          reduce using rule 107 (expresion -> RTRUE .)
    COMA            reduce using rule 107 (expresion -> RTRUE .)
    CORDER          reduce using rule 107 (expresion -> RTRUE .)


state 65

    (108) expresion -> RFALSE .

    MAS             reduce using rule 108 (expresion -> RFALSE .)
    MENOS           reduce using rule 108 (expresion -> RFALSE .)
    POR             reduce using rule 108 (expresion -> RFALSE .)
    DIV             reduce using rule 108 (expresion -> RFALSE .)
    IGUALDAD        reduce using rule 108 (expresion -> RFALSE .)
    DESIGUALDAD     reduce using rule 108 (expresion -> RFALSE .)
    MAYORQ          reduce using rule 108 (expresion -> RFALSE .)
    MENORQ          reduce using rule 108 (expresion -> RFALSE .)
    MAYORIGUAL      reduce using rule 108 (expresion -> RFALSE .)
    MENORIGUAL      reduce using rule 108 (expresion -> RFALSE .)
    AND             reduce using rule 108 (expresion -> RFALSE .)
    OR              reduce using rule 108 (expresion -> RFALSE .)
    POT             reduce using rule 108 (expresion -> RFALSE .)
    MOD             reduce using rule 108 (expresion -> RFALSE .)
    PTCOMA          reduce using rule 108 (expresion -> RFALSE .)
    RCONSOLE        reduce using rule 108 (expresion -> RFALSE .)
    RLET            reduce using rule 108 (expresion -> RFALSE .)
    RIF             reduce using rule 108 (expresion -> RFALSE .)
    RFOR            reduce using rule 108 (expresion -> RFALSE .)
    RFUNCTION       reduce using rule 108 (expresion -> RFALSE .)
    ID              reduce using rule 108 (expresion -> RFALSE .)
    RRETURN         reduce using rule 108 (expresion -> RFALSE .)
    RWHILE          reduce using rule 108 (expresion -> RFALSE .)
    RBREAK          reduce using rule 108 (expresion -> RFALSE .)
    RCONTINUE       reduce using rule 108 (expresion -> RFALSE .)
    RINTERFACE      reduce using rule 108 (expresion -> RFALSE .)
    $end            reduce using rule 108 (expresion -> RFALSE .)
    LLAVEDER        reduce using rule 108 (expresion -> RFALSE .)
    PARDER          reduce using rule 108 (expresion -> RFALSE .)
    COMA            reduce using rule 108 (expresion -> RFALSE .)
    CORDER          reduce using rule 108 (expresion -> RFALSE .)


state 66

    (77) ciclo_while -> RWHILE PARIZQ . expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 101
    llamada_funcion                shift and go to state 54

state 67

    (38) struct -> RINTERFACE ID . LLAVEIZQ parametros_struct LLAVEDER

    LLAVEIZQ        shift and go to state 102


state 68

    (32) imprimir -> RCONSOLE PUNTO RLOG . PARIZQ parametros_llamada PARDER

    PARIZQ          shift and go to state 103


state 69

    (34) declaracion_normal -> RLET ID DOSPUNTOS . tipo IGUAL expresion
    (36) declaracion_normal -> RLET ID DOSPUNTOS . tipo
    (40) declaracion_array -> RLET ID DOSPUNTOS . tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> RLET ID DOSPUNTOS . tipo IGUAL CORIZQ CORDER
    (78) tipo -> . RSTRING
    (79) tipo -> . RNUMBER
    (80) tipo -> . RBOOLEAN

    RSTRING         shift and go to state 105
    RNUMBER         shift and go to state 106
    RBOOLEAN        shift and go to state 107

    tipo                           shift and go to state 104

state 70

    (37) declaracion_normal -> RLET ID IGUAL . expresion
    (42) declaracion_array -> RLET ID IGUAL . CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> RLET ID IGUAL . CORIZQ CORDER
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    CORIZQ          shift and go to state 109
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 108
    llamada_funcion                shift and go to state 54

state 71

    (48) llamada_funcion -> ID PARIZQ PARDER .

    PTCOMA          reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    RCONSOLE        reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    RLET            reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    RIF             reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    RFOR            reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    RFUNCTION       reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    ID              reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    RRETURN         reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    RWHILE          reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    RBREAK          reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    RCONTINUE       reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    RINTERFACE      reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    $end            reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    MAS             reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    POR             reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    DIV             reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    IGUALDAD        reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    DESIGUALDAD     reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    MAYORQ          reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    MENORQ          reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    AND             reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    OR              reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    POT             reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    MOD             reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    COMA            reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 48 (llamada_funcion -> ID PARIZQ PARDER .)


state 72

    (49) llamada_funcion -> ID PARIZQ parametros_llamada . PARDER
    (65) parametros_llamada -> parametros_llamada . COMA parametro_ll

    PARDER          shift and go to state 110
    COMA            shift and go to state 111


state 73

    (66) parametros_llamada -> parametro_ll .

    PARDER          reduce using rule 66 (parametros_llamada -> parametro_ll .)
    COMA            reduce using rule 66 (parametros_llamada -> parametro_ll .)
    CORDER          reduce using rule 66 (parametros_llamada -> parametro_ll .)


state 74

    (67) parametro_ll -> expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    PARDER          reduce using rule 67 (parametro_ll -> expresion .)
    COMA            reduce using rule 67 (parametro_ll -> expresion .)
    CORDER          reduce using rule 67 (parametro_ll -> expresion .)
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    IGUALDAD        shift and go to state 87
    DESIGUALDAD     shift and go to state 88
    MAYORQ          shift and go to state 89
    MENORQ          shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    MENORIGUAL      shift and go to state 92
    AND             shift and go to state 93
    OR              shift and go to state 94
    POT             shift and go to state 95
    MOD             shift and go to state 96


state 75

    (33) asignacion -> ID IGUAL expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    PTCOMA          reduce using rule 33 (asignacion -> ID IGUAL expresion .)
    RCONSOLE        reduce using rule 33 (asignacion -> ID IGUAL expresion .)
    RLET            reduce using rule 33 (asignacion -> ID IGUAL expresion .)
    RIF             reduce using rule 33 (asignacion -> ID IGUAL expresion .)
    RFOR            reduce using rule 33 (asignacion -> ID IGUAL expresion .)
    RFUNCTION       reduce using rule 33 (asignacion -> ID IGUAL expresion .)
    ID              reduce using rule 33 (asignacion -> ID IGUAL expresion .)
    RRETURN         reduce using rule 33 (asignacion -> ID IGUAL expresion .)
    RWHILE          reduce using rule 33 (asignacion -> ID IGUAL expresion .)
    RBREAK          reduce using rule 33 (asignacion -> ID IGUAL expresion .)
    RCONTINUE       reduce using rule 33 (asignacion -> ID IGUAL expresion .)
    RINTERFACE      reduce using rule 33 (asignacion -> ID IGUAL expresion .)
    $end            reduce using rule 33 (asignacion -> ID IGUAL expresion .)
    LLAVEDER        reduce using rule 33 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    IGUALDAD        shift and go to state 87
    DESIGUALDAD     shift and go to state 88
    MAYORQ          shift and go to state 89
    MENORQ          shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    MENORIGUAL      shift and go to state 92
    AND             shift and go to state 93
    OR              shift and go to state 94
    POT             shift and go to state 95
    MOD             shift and go to state 96


state 76

    (59) asignacion_struct_param -> ID .

    IGUAL           reduce using rule 59 (asignacion_struct_param -> ID .)
    PUNTO           reduce using rule 59 (asignacion_struct_param -> ID .)
    MAS             reduce using rule 59 (asignacion_struct_param -> ID .)
    MENOS           reduce using rule 59 (asignacion_struct_param -> ID .)
    POR             reduce using rule 59 (asignacion_struct_param -> ID .)
    DIV             reduce using rule 59 (asignacion_struct_param -> ID .)
    IGUALDAD        reduce using rule 59 (asignacion_struct_param -> ID .)
    DESIGUALDAD     reduce using rule 59 (asignacion_struct_param -> ID .)
    MAYORQ          reduce using rule 59 (asignacion_struct_param -> ID .)
    MENORQ          reduce using rule 59 (asignacion_struct_param -> ID .)
    MAYORIGUAL      reduce using rule 59 (asignacion_struct_param -> ID .)
    MENORIGUAL      reduce using rule 59 (asignacion_struct_param -> ID .)
    AND             reduce using rule 59 (asignacion_struct_param -> ID .)
    OR              reduce using rule 59 (asignacion_struct_param -> ID .)
    POT             reduce using rule 59 (asignacion_struct_param -> ID .)
    MOD             reduce using rule 59 (asignacion_struct_param -> ID .)
    PTCOMA          reduce using rule 59 (asignacion_struct_param -> ID .)
    RCONSOLE        reduce using rule 59 (asignacion_struct_param -> ID .)
    RLET            reduce using rule 59 (asignacion_struct_param -> ID .)
    RIF             reduce using rule 59 (asignacion_struct_param -> ID .)
    RFOR            reduce using rule 59 (asignacion_struct_param -> ID .)
    RFUNCTION       reduce using rule 59 (asignacion_struct_param -> ID .)
    ID              reduce using rule 59 (asignacion_struct_param -> ID .)
    RRETURN         reduce using rule 59 (asignacion_struct_param -> ID .)
    RWHILE          reduce using rule 59 (asignacion_struct_param -> ID .)
    RBREAK          reduce using rule 59 (asignacion_struct_param -> ID .)
    RCONTINUE       reduce using rule 59 (asignacion_struct_param -> ID .)
    RINTERFACE      reduce using rule 59 (asignacion_struct_param -> ID .)
    $end            reduce using rule 59 (asignacion_struct_param -> ID .)
    LLAVEDER        reduce using rule 59 (asignacion_struct_param -> ID .)
    PARDER          reduce using rule 59 (asignacion_struct_param -> ID .)
    COMA            reduce using rule 59 (asignacion_struct_param -> ID .)
    CORDER          reduce using rule 59 (asignacion_struct_param -> ID .)


state 77

    (39) asignacion_struct -> ID PUNTO parametros_asignacion_struct . IGUAL expresion
    (57) parametros_asignacion_struct -> parametros_asignacion_struct . PUNTO asignacion_struct_param

    IGUAL           shift and go to state 113
    PUNTO           shift and go to state 112


state 78

    (58) parametros_asignacion_struct -> asignacion_struct_param .

    IGUAL           reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    PUNTO           reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    MAS             reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    MENOS           reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    POR             reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    DIV             reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    IGUALDAD        reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    DESIGUALDAD     reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    MAYORQ          reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    MENORQ          reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    MAYORIGUAL      reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    MENORIGUAL      reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    AND             reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    OR              reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    POT             reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    MOD             reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    PTCOMA          reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    RCONSOLE        reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    RLET            reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    RIF             reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    RFOR            reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    RFUNCTION       reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    ID              reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    RRETURN         reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    RWHILE          reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    RBREAK          reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    RCONTINUE       reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    RINTERFACE      reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    $end            reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    LLAVEDER        reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    PARDER          reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    COMA            reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)
    CORDER          reduce using rule 58 (parametros_asignacion_struct -> asignacion_struct_param .)


state 79

    (73) condicional_if -> PARIZQ expresion . PARDER LLAVEIZQ instrucciones LLAVEDER
    (74) condicional_if -> PARIZQ expresion . PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (75) condicional_if -> PARIZQ expresion . PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    PARDER          shift and go to state 114
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    IGUALDAD        shift and go to state 87
    DESIGUALDAD     shift and go to state 88
    MAYORQ          shift and go to state 89
    MENORQ          shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    MENORIGUAL      shift and go to state 92
    AND             shift and go to state 93
    OR              shift and go to state 94
    POT             shift and go to state 95
    MOD             shift and go to state 96


state 80

    (76) ciclo_for -> RFOR PARIZQ declaracion_normal . PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    PTCOMA          shift and go to state 115


state 81

    (34) declaracion_normal -> RLET . ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> RLET . ID
    (36) declaracion_normal -> RLET . ID DOSPUNTOS tipo
    (37) declaracion_normal -> RLET . ID IGUAL expresion

    ID              shift and go to state 116


state 82

    (44) funcion -> RFUNCTION ID PARIZQ . PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> RFUNCTION ID PARIZQ . parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> RFUNCTION ID PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> RFUNCTION ID PARIZQ . parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (60) parametros -> . parametros COMA parametro
    (61) parametros -> . parametro
    (62) parametro -> . RLET ID DOSPUNTOS tipo
    (63) parametro -> . ID DOSPUNTOS tipo
    (64) parametro -> . ID

    PARDER          shift and go to state 118
    RLET            shift and go to state 121
    ID              shift and go to state 117

    parametros                     shift and go to state 119
    parametro                      shift and go to state 120

state 83

    (81) expresion -> expresion MAS . expresion
    (98) expresion -> expresion MAS . MAS
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MAS             shift and go to state 123
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 122
    llamada_funcion                shift and go to state 54

state 84

    (82) expresion -> expresion MENOS . expresion
    (99) expresion -> expresion MENOS . MENOS
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 125
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 124
    llamada_funcion                shift and go to state 54

state 85

    (83) expresion -> expresion POR . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 126
    llamada_funcion                shift and go to state 54

state 86

    (84) expresion -> expresion DIV . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 127
    llamada_funcion                shift and go to state 54

state 87

    (85) expresion -> expresion IGUALDAD . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 128
    llamada_funcion                shift and go to state 54

state 88

    (86) expresion -> expresion DESIGUALDAD . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 129
    llamada_funcion                shift and go to state 54

state 89

    (87) expresion -> expresion MAYORQ . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 130
    llamada_funcion                shift and go to state 54

state 90

    (88) expresion -> expresion MENORQ . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 131
    llamada_funcion                shift and go to state 54

state 91

    (89) expresion -> expresion MAYORIGUAL . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 132
    llamada_funcion                shift and go to state 54

state 92

    (90) expresion -> expresion MENORIGUAL . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 133
    llamada_funcion                shift and go to state 54

state 93

    (91) expresion -> expresion AND . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 134
    llamada_funcion                shift and go to state 54

state 94

    (92) expresion -> expresion OR . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 135
    llamada_funcion                shift and go to state 54

state 95

    (93) expresion -> expresion POT . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 136
    llamada_funcion                shift and go to state 54

state 96

    (94) expresion -> expresion MOD . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 137
    llamada_funcion                shift and go to state 54

state 97

    (95) expresion -> MENOS expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 95 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 95 (expresion -> MENOS expresion .)
    POR             reduce using rule 95 (expresion -> MENOS expresion .)
    DIV             reduce using rule 95 (expresion -> MENOS expresion .)
    IGUALDAD        reduce using rule 95 (expresion -> MENOS expresion .)
    DESIGUALDAD     reduce using rule 95 (expresion -> MENOS expresion .)
    MAYORQ          reduce using rule 95 (expresion -> MENOS expresion .)
    MENORQ          reduce using rule 95 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 95 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 95 (expresion -> MENOS expresion .)
    AND             reduce using rule 95 (expresion -> MENOS expresion .)
    OR              reduce using rule 95 (expresion -> MENOS expresion .)
    POT             reduce using rule 95 (expresion -> MENOS expresion .)
    MOD             reduce using rule 95 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 95 (expresion -> MENOS expresion .)
    RCONSOLE        reduce using rule 95 (expresion -> MENOS expresion .)
    RLET            reduce using rule 95 (expresion -> MENOS expresion .)
    RIF             reduce using rule 95 (expresion -> MENOS expresion .)
    RFOR            reduce using rule 95 (expresion -> MENOS expresion .)
    RFUNCTION       reduce using rule 95 (expresion -> MENOS expresion .)
    ID              reduce using rule 95 (expresion -> MENOS expresion .)
    RRETURN         reduce using rule 95 (expresion -> MENOS expresion .)
    RWHILE          reduce using rule 95 (expresion -> MENOS expresion .)
    RBREAK          reduce using rule 95 (expresion -> MENOS expresion .)
    RCONTINUE       reduce using rule 95 (expresion -> MENOS expresion .)
    RINTERFACE      reduce using rule 95 (expresion -> MENOS expresion .)
    $end            reduce using rule 95 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 95 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 95 (expresion -> MENOS expresion .)
    COMA            reduce using rule 95 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 95 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 83 ]
  ! MENOS           [ shift and go to state 84 ]
  ! POR             [ shift and go to state 85 ]
  ! DIV             [ shift and go to state 86 ]
  ! IGUALDAD        [ shift and go to state 87 ]
  ! DESIGUALDAD     [ shift and go to state 88 ]
  ! MAYORQ          [ shift and go to state 89 ]
  ! MENORQ          [ shift and go to state 90 ]
  ! MAYORIGUAL      [ shift and go to state 91 ]
  ! MENORIGUAL      [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! POT             [ shift and go to state 95 ]
  ! MOD             [ shift and go to state 96 ]


state 98

    (96) expresion -> NOT expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    AND             reduce using rule 96 (expresion -> NOT expresion .)
    OR              reduce using rule 96 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 96 (expresion -> NOT expresion .)
    RCONSOLE        reduce using rule 96 (expresion -> NOT expresion .)
    RLET            reduce using rule 96 (expresion -> NOT expresion .)
    RIF             reduce using rule 96 (expresion -> NOT expresion .)
    RFOR            reduce using rule 96 (expresion -> NOT expresion .)
    RFUNCTION       reduce using rule 96 (expresion -> NOT expresion .)
    ID              reduce using rule 96 (expresion -> NOT expresion .)
    RRETURN         reduce using rule 96 (expresion -> NOT expresion .)
    RWHILE          reduce using rule 96 (expresion -> NOT expresion .)
    RBREAK          reduce using rule 96 (expresion -> NOT expresion .)
    RCONTINUE       reduce using rule 96 (expresion -> NOT expresion .)
    RINTERFACE      reduce using rule 96 (expresion -> NOT expresion .)
    $end            reduce using rule 96 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 96 (expresion -> NOT expresion .)
    PARDER          reduce using rule 96 (expresion -> NOT expresion .)
    COMA            reduce using rule 96 (expresion -> NOT expresion .)
    CORDER          reduce using rule 96 (expresion -> NOT expresion .)
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    IGUALDAD        shift and go to state 87
    DESIGUALDAD     shift and go to state 88
    MAYORQ          shift and go to state 89
    MENORQ          shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    MENORIGUAL      shift and go to state 92
    POT             shift and go to state 95
    MOD             shift and go to state 96

  ! MAS             [ reduce using rule 96 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 96 (expresion -> NOT expresion .) ]
  ! POR             [ reduce using rule 96 (expresion -> NOT expresion .) ]
  ! DIV             [ reduce using rule 96 (expresion -> NOT expresion .) ]
  ! IGUALDAD        [ reduce using rule 96 (expresion -> NOT expresion .) ]
  ! DESIGUALDAD     [ reduce using rule 96 (expresion -> NOT expresion .) ]
  ! MAYORQ          [ reduce using rule 96 (expresion -> NOT expresion .) ]
  ! MENORQ          [ reduce using rule 96 (expresion -> NOT expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 96 (expresion -> NOT expresion .) ]
  ! MENORIGUAL      [ reduce using rule 96 (expresion -> NOT expresion .) ]
  ! POT             [ reduce using rule 96 (expresion -> NOT expresion .) ]
  ! MOD             [ reduce using rule 96 (expresion -> NOT expresion .) ]
  ! AND             [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]


state 99

    (97) expresion -> PARIZQ expresion . PARDER
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    PARDER          shift and go to state 138
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    IGUALDAD        shift and go to state 87
    DESIGUALDAD     shift and go to state 88
    MAYORQ          shift and go to state 89
    MENORQ          shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    MENORIGUAL      shift and go to state 92
    AND             shift and go to state 93
    OR              shift and go to state 94
    POT             shift and go to state 95
    MOD             shift and go to state 96


state 100

    (100) expresion -> ID PUNTO . parametros_asignacion_struct
    (57) parametros_asignacion_struct -> . parametros_asignacion_struct PUNTO asignacion_struct_param
    (58) parametros_asignacion_struct -> . asignacion_struct_param
    (59) asignacion_struct_param -> . ID

    ID              shift and go to state 76

    parametros_asignacion_struct   shift and go to state 139
    asignacion_struct_param        shift and go to state 78

state 101

    (77) ciclo_while -> RWHILE PARIZQ expresion . PARDER LLAVEIZQ instrucciones LLAVEDER
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    PARDER          shift and go to state 140
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    IGUALDAD        shift and go to state 87
    DESIGUALDAD     shift and go to state 88
    MAYORQ          shift and go to state 89
    MENORQ          shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    MENORIGUAL      shift and go to state 92
    AND             shift and go to state 93
    OR              shift and go to state 94
    POT             shift and go to state 95
    MOD             shift and go to state 96


state 102

    (38) struct -> RINTERFACE ID LLAVEIZQ . parametros_struct LLAVEDER
    (50) parametros_struct -> . parametros_struct params_struct
    (51) parametros_struct -> . params_struct
    (52) params_struct -> . declaracion_struct PTCOMA
    (53) declaracion_struct -> . ID DOSPUNTOS tipo IGUAL expresion
    (54) declaracion_struct -> . ID
    (55) declaracion_struct -> . ID DOSPUNTOS tipo
    (56) declaracion_struct -> . ID IGUAL expresion

    ID              shift and go to state 141

    parametros_struct              shift and go to state 142
    params_struct                  shift and go to state 143
    declaracion_struct             shift and go to state 144

state 103

    (32) imprimir -> RCONSOLE PUNTO RLOG PARIZQ . parametros_llamada PARDER
    (65) parametros_llamada -> . parametros_llamada COMA parametro_ll
    (66) parametros_llamada -> . parametro_ll
    (67) parametro_ll -> . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    parametros_llamada             shift and go to state 145
    parametro_ll                   shift and go to state 73
    expresion                      shift and go to state 74
    llamada_funcion                shift and go to state 54

state 104

    (34) declaracion_normal -> RLET ID DOSPUNTOS tipo . IGUAL expresion
    (36) declaracion_normal -> RLET ID DOSPUNTOS tipo .
    (40) declaracion_array -> RLET ID DOSPUNTOS tipo . IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> RLET ID DOSPUNTOS tipo . IGUAL CORIZQ CORDER

    IGUAL           shift and go to state 146
    PTCOMA          reduce using rule 36 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    RCONSOLE        reduce using rule 36 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    RLET            reduce using rule 36 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    RIF             reduce using rule 36 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    RFOR            reduce using rule 36 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    RFUNCTION       reduce using rule 36 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    ID              reduce using rule 36 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    RRETURN         reduce using rule 36 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    RWHILE          reduce using rule 36 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    RBREAK          reduce using rule 36 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    RCONTINUE       reduce using rule 36 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    RINTERFACE      reduce using rule 36 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    $end            reduce using rule 36 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    LLAVEDER        reduce using rule 36 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)


state 105

    (78) tipo -> RSTRING .

    IGUAL           reduce using rule 78 (tipo -> RSTRING .)
    PTCOMA          reduce using rule 78 (tipo -> RSTRING .)
    RCONSOLE        reduce using rule 78 (tipo -> RSTRING .)
    RLET            reduce using rule 78 (tipo -> RSTRING .)
    RIF             reduce using rule 78 (tipo -> RSTRING .)
    RFOR            reduce using rule 78 (tipo -> RSTRING .)
    RFUNCTION       reduce using rule 78 (tipo -> RSTRING .)
    ID              reduce using rule 78 (tipo -> RSTRING .)
    RRETURN         reduce using rule 78 (tipo -> RSTRING .)
    RWHILE          reduce using rule 78 (tipo -> RSTRING .)
    RBREAK          reduce using rule 78 (tipo -> RSTRING .)
    RCONTINUE       reduce using rule 78 (tipo -> RSTRING .)
    RINTERFACE      reduce using rule 78 (tipo -> RSTRING .)
    $end            reduce using rule 78 (tipo -> RSTRING .)
    LLAVEDER        reduce using rule 78 (tipo -> RSTRING .)
    PARDER          reduce using rule 78 (tipo -> RSTRING .)
    COMA            reduce using rule 78 (tipo -> RSTRING .)
    LLAVEIZQ        reduce using rule 78 (tipo -> RSTRING .)


state 106

    (79) tipo -> RNUMBER .

    IGUAL           reduce using rule 79 (tipo -> RNUMBER .)
    PTCOMA          reduce using rule 79 (tipo -> RNUMBER .)
    RCONSOLE        reduce using rule 79 (tipo -> RNUMBER .)
    RLET            reduce using rule 79 (tipo -> RNUMBER .)
    RIF             reduce using rule 79 (tipo -> RNUMBER .)
    RFOR            reduce using rule 79 (tipo -> RNUMBER .)
    RFUNCTION       reduce using rule 79 (tipo -> RNUMBER .)
    ID              reduce using rule 79 (tipo -> RNUMBER .)
    RRETURN         reduce using rule 79 (tipo -> RNUMBER .)
    RWHILE          reduce using rule 79 (tipo -> RNUMBER .)
    RBREAK          reduce using rule 79 (tipo -> RNUMBER .)
    RCONTINUE       reduce using rule 79 (tipo -> RNUMBER .)
    RINTERFACE      reduce using rule 79 (tipo -> RNUMBER .)
    $end            reduce using rule 79 (tipo -> RNUMBER .)
    LLAVEDER        reduce using rule 79 (tipo -> RNUMBER .)
    PARDER          reduce using rule 79 (tipo -> RNUMBER .)
    COMA            reduce using rule 79 (tipo -> RNUMBER .)
    LLAVEIZQ        reduce using rule 79 (tipo -> RNUMBER .)


state 107

    (80) tipo -> RBOOLEAN .

    IGUAL           reduce using rule 80 (tipo -> RBOOLEAN .)
    PTCOMA          reduce using rule 80 (tipo -> RBOOLEAN .)
    RCONSOLE        reduce using rule 80 (tipo -> RBOOLEAN .)
    RLET            reduce using rule 80 (tipo -> RBOOLEAN .)
    RIF             reduce using rule 80 (tipo -> RBOOLEAN .)
    RFOR            reduce using rule 80 (tipo -> RBOOLEAN .)
    RFUNCTION       reduce using rule 80 (tipo -> RBOOLEAN .)
    ID              reduce using rule 80 (tipo -> RBOOLEAN .)
    RRETURN         reduce using rule 80 (tipo -> RBOOLEAN .)
    RWHILE          reduce using rule 80 (tipo -> RBOOLEAN .)
    RBREAK          reduce using rule 80 (tipo -> RBOOLEAN .)
    RCONTINUE       reduce using rule 80 (tipo -> RBOOLEAN .)
    RINTERFACE      reduce using rule 80 (tipo -> RBOOLEAN .)
    $end            reduce using rule 80 (tipo -> RBOOLEAN .)
    LLAVEDER        reduce using rule 80 (tipo -> RBOOLEAN .)
    PARDER          reduce using rule 80 (tipo -> RBOOLEAN .)
    COMA            reduce using rule 80 (tipo -> RBOOLEAN .)
    LLAVEIZQ        reduce using rule 80 (tipo -> RBOOLEAN .)


state 108

    (37) declaracion_normal -> RLET ID IGUAL expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    PTCOMA          reduce using rule 37 (declaracion_normal -> RLET ID IGUAL expresion .)
    RCONSOLE        reduce using rule 37 (declaracion_normal -> RLET ID IGUAL expresion .)
    RLET            reduce using rule 37 (declaracion_normal -> RLET ID IGUAL expresion .)
    RIF             reduce using rule 37 (declaracion_normal -> RLET ID IGUAL expresion .)
    RFOR            reduce using rule 37 (declaracion_normal -> RLET ID IGUAL expresion .)
    RFUNCTION       reduce using rule 37 (declaracion_normal -> RLET ID IGUAL expresion .)
    ID              reduce using rule 37 (declaracion_normal -> RLET ID IGUAL expresion .)
    RRETURN         reduce using rule 37 (declaracion_normal -> RLET ID IGUAL expresion .)
    RWHILE          reduce using rule 37 (declaracion_normal -> RLET ID IGUAL expresion .)
    RBREAK          reduce using rule 37 (declaracion_normal -> RLET ID IGUAL expresion .)
    RCONTINUE       reduce using rule 37 (declaracion_normal -> RLET ID IGUAL expresion .)
    RINTERFACE      reduce using rule 37 (declaracion_normal -> RLET ID IGUAL expresion .)
    $end            reduce using rule 37 (declaracion_normal -> RLET ID IGUAL expresion .)
    LLAVEDER        reduce using rule 37 (declaracion_normal -> RLET ID IGUAL expresion .)
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    IGUALDAD        shift and go to state 87
    DESIGUALDAD     shift and go to state 88
    MAYORQ          shift and go to state 89
    MENORQ          shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    MENORIGUAL      shift and go to state 92
    AND             shift and go to state 93
    OR              shift and go to state 94
    POT             shift and go to state 95
    MOD             shift and go to state 96


state 109

    (42) declaracion_array -> RLET ID IGUAL CORIZQ . parametros_llamada CORDER
    (43) declaracion_array -> RLET ID IGUAL CORIZQ . CORDER
    (65) parametros_llamada -> . parametros_llamada COMA parametro_ll
    (66) parametros_llamada -> . parametro_ll
    (67) parametro_ll -> . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    CORDER          shift and go to state 148
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    parametros_llamada             shift and go to state 147
    parametro_ll                   shift and go to state 73
    expresion                      shift and go to state 74
    llamada_funcion                shift and go to state 54

state 110

    (49) llamada_funcion -> ID PARIZQ parametros_llamada PARDER .

    PTCOMA          reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    RCONSOLE        reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    RLET            reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    RIF             reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    RFOR            reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    RFUNCTION       reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    ID              reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    RRETURN         reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    RWHILE          reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    RBREAK          reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    RCONTINUE       reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    RINTERFACE      reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    $end            reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    MAS             reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    MENOS           reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    POR             reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    DIV             reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    IGUALDAD        reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    DESIGUALDAD     reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    MAYORQ          reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    MENORQ          reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    MAYORIGUAL      reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    MENORIGUAL      reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    AND             reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    OR              reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    POT             reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    MOD             reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    LLAVEDER        reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    PARDER          reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    COMA            reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    CORDER          reduce using rule 49 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)


state 111

    (65) parametros_llamada -> parametros_llamada COMA . parametro_ll
    (67) parametro_ll -> . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    parametro_ll                   shift and go to state 149
    expresion                      shift and go to state 74
    llamada_funcion                shift and go to state 54

state 112

    (57) parametros_asignacion_struct -> parametros_asignacion_struct PUNTO . asignacion_struct_param
    (59) asignacion_struct_param -> . ID

    ID              shift and go to state 76

    asignacion_struct_param        shift and go to state 150

state 113

    (39) asignacion_struct -> ID PUNTO parametros_asignacion_struct IGUAL . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 151
    llamada_funcion                shift and go to state 54

state 114

    (73) condicional_if -> PARIZQ expresion PARDER . LLAVEIZQ instrucciones LLAVEDER
    (74) condicional_if -> PARIZQ expresion PARDER . LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (75) condicional_if -> PARIZQ expresion PARDER . LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if

    LLAVEIZQ        shift and go to state 152


state 115

    (76) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA . expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 153
    llamada_funcion                shift and go to state 54

state 116

    (34) declaracion_normal -> RLET ID . DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> RLET ID .
    (36) declaracion_normal -> RLET ID . DOSPUNTOS tipo
    (37) declaracion_normal -> RLET ID . IGUAL expresion

    DOSPUNTOS       shift and go to state 154
    PTCOMA          reduce using rule 35 (declaracion_normal -> RLET ID .)
    IGUAL           shift and go to state 155


state 117

    (63) parametro -> ID . DOSPUNTOS tipo
    (64) parametro -> ID .

    DOSPUNTOS       shift and go to state 156
    PARDER          reduce using rule 64 (parametro -> ID .)
    COMA            reduce using rule 64 (parametro -> ID .)


state 118

    (44) funcion -> RFUNCTION ID PARIZQ PARDER . DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> RFUNCTION ID PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    DOSPUNTOS       shift and go to state 157
    LLAVEIZQ        shift and go to state 158


state 119

    (45) funcion -> RFUNCTION ID PARIZQ parametros . PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> RFUNCTION ID PARIZQ parametros . PARDER LLAVEIZQ instrucciones LLAVEDER
    (60) parametros -> parametros . COMA parametro

    PARDER          shift and go to state 159
    COMA            shift and go to state 160


state 120

    (61) parametros -> parametro .

    PARDER          reduce using rule 61 (parametros -> parametro .)
    COMA            reduce using rule 61 (parametros -> parametro .)


state 121

    (62) parametro -> RLET . ID DOSPUNTOS tipo

    ID              shift and go to state 161


state 122

    (81) expresion -> expresion MAS expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 81 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 81 (expresion -> expresion MAS expresion .)
    IGUALDAD        reduce using rule 81 (expresion -> expresion MAS expresion .)
    DESIGUALDAD     reduce using rule 81 (expresion -> expresion MAS expresion .)
    MAYORQ          reduce using rule 81 (expresion -> expresion MAS expresion .)
    MENORQ          reduce using rule 81 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 81 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 81 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 81 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 81 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 81 (expresion -> expresion MAS expresion .)
    RCONSOLE        reduce using rule 81 (expresion -> expresion MAS expresion .)
    RLET            reduce using rule 81 (expresion -> expresion MAS expresion .)
    RIF             reduce using rule 81 (expresion -> expresion MAS expresion .)
    RFOR            reduce using rule 81 (expresion -> expresion MAS expresion .)
    RFUNCTION       reduce using rule 81 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 81 (expresion -> expresion MAS expresion .)
    RRETURN         reduce using rule 81 (expresion -> expresion MAS expresion .)
    RWHILE          reduce using rule 81 (expresion -> expresion MAS expresion .)
    RBREAK          reduce using rule 81 (expresion -> expresion MAS expresion .)
    RCONTINUE       reduce using rule 81 (expresion -> expresion MAS expresion .)
    RINTERFACE      reduce using rule 81 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 81 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 81 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 81 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 81 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 81 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 95
    MOD             shift and go to state 96

  ! POR             [ reduce using rule 81 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 81 (expresion -> expresion MAS expresion .) ]
  ! POT             [ reduce using rule 81 (expresion -> expresion MAS expresion .) ]
  ! MOD             [ reduce using rule 81 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 83 ]
  ! MENOS           [ shift and go to state 84 ]
  ! IGUALDAD        [ shift and go to state 87 ]
  ! DESIGUALDAD     [ shift and go to state 88 ]
  ! MAYORQ          [ shift and go to state 89 ]
  ! MENORQ          [ shift and go to state 90 ]
  ! MAYORIGUAL      [ shift and go to state 91 ]
  ! MENORIGUAL      [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]


state 123

    (98) expresion -> expresion MAS MAS .

    MAS             reduce using rule 98 (expresion -> expresion MAS MAS .)
    MENOS           reduce using rule 98 (expresion -> expresion MAS MAS .)
    POR             reduce using rule 98 (expresion -> expresion MAS MAS .)
    DIV             reduce using rule 98 (expresion -> expresion MAS MAS .)
    IGUALDAD        reduce using rule 98 (expresion -> expresion MAS MAS .)
    DESIGUALDAD     reduce using rule 98 (expresion -> expresion MAS MAS .)
    MAYORQ          reduce using rule 98 (expresion -> expresion MAS MAS .)
    MENORQ          reduce using rule 98 (expresion -> expresion MAS MAS .)
    MAYORIGUAL      reduce using rule 98 (expresion -> expresion MAS MAS .)
    MENORIGUAL      reduce using rule 98 (expresion -> expresion MAS MAS .)
    AND             reduce using rule 98 (expresion -> expresion MAS MAS .)
    OR              reduce using rule 98 (expresion -> expresion MAS MAS .)
    POT             reduce using rule 98 (expresion -> expresion MAS MAS .)
    MOD             reduce using rule 98 (expresion -> expresion MAS MAS .)
    PTCOMA          reduce using rule 98 (expresion -> expresion MAS MAS .)
    RCONSOLE        reduce using rule 98 (expresion -> expresion MAS MAS .)
    RLET            reduce using rule 98 (expresion -> expresion MAS MAS .)
    RIF             reduce using rule 98 (expresion -> expresion MAS MAS .)
    RFOR            reduce using rule 98 (expresion -> expresion MAS MAS .)
    RFUNCTION       reduce using rule 98 (expresion -> expresion MAS MAS .)
    ID              reduce using rule 98 (expresion -> expresion MAS MAS .)
    RRETURN         reduce using rule 98 (expresion -> expresion MAS MAS .)
    RWHILE          reduce using rule 98 (expresion -> expresion MAS MAS .)
    RBREAK          reduce using rule 98 (expresion -> expresion MAS MAS .)
    RCONTINUE       reduce using rule 98 (expresion -> expresion MAS MAS .)
    RINTERFACE      reduce using rule 98 (expresion -> expresion MAS MAS .)
    $end            reduce using rule 98 (expresion -> expresion MAS MAS .)
    LLAVEDER        reduce using rule 98 (expresion -> expresion MAS MAS .)
    PARDER          reduce using rule 98 (expresion -> expresion MAS MAS .)
    COMA            reduce using rule 98 (expresion -> expresion MAS MAS .)
    CORDER          reduce using rule 98 (expresion -> expresion MAS MAS .)


state 124

    (82) expresion -> expresion MENOS expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 82 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 82 (expresion -> expresion MENOS expresion .)
    IGUALDAD        reduce using rule 82 (expresion -> expresion MENOS expresion .)
    DESIGUALDAD     reduce using rule 82 (expresion -> expresion MENOS expresion .)
    MAYORQ          reduce using rule 82 (expresion -> expresion MENOS expresion .)
    MENORQ          reduce using rule 82 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 82 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 82 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 82 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 82 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 82 (expresion -> expresion MENOS expresion .)
    RCONSOLE        reduce using rule 82 (expresion -> expresion MENOS expresion .)
    RLET            reduce using rule 82 (expresion -> expresion MENOS expresion .)
    RIF             reduce using rule 82 (expresion -> expresion MENOS expresion .)
    RFOR            reduce using rule 82 (expresion -> expresion MENOS expresion .)
    RFUNCTION       reduce using rule 82 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 82 (expresion -> expresion MENOS expresion .)
    RRETURN         reduce using rule 82 (expresion -> expresion MENOS expresion .)
    RWHILE          reduce using rule 82 (expresion -> expresion MENOS expresion .)
    RBREAK          reduce using rule 82 (expresion -> expresion MENOS expresion .)
    RCONTINUE       reduce using rule 82 (expresion -> expresion MENOS expresion .)
    RINTERFACE      reduce using rule 82 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 82 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 82 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 82 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 82 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 82 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 95
    MOD             shift and go to state 96

  ! POR             [ reduce using rule 82 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 82 (expresion -> expresion MENOS expresion .) ]
  ! POT             [ reduce using rule 82 (expresion -> expresion MENOS expresion .) ]
  ! MOD             [ reduce using rule 82 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 83 ]
  ! MENOS           [ shift and go to state 84 ]
  ! IGUALDAD        [ shift and go to state 87 ]
  ! DESIGUALDAD     [ shift and go to state 88 ]
  ! MAYORQ          [ shift and go to state 89 ]
  ! MENORQ          [ shift and go to state 90 ]
  ! MAYORIGUAL      [ shift and go to state 91 ]
  ! MENORIGUAL      [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]


state 125

    (99) expresion -> expresion MENOS MENOS .
    (95) expresion -> MENOS . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MAS             reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    MENOS           reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    POR             reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    DIV             reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    IGUALDAD        reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    DESIGUALDAD     reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    MAYORQ          reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    MENORQ          reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    MAYORIGUAL      reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    MENORIGUAL      reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    AND             reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    OR              reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    POT             reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    MOD             reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    PTCOMA          reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    RCONSOLE        reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    RLET            reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    RIF             reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    RFOR            reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    RFUNCTION       reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    ID              reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    RRETURN         reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    RWHILE          reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    RBREAK          reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    RCONTINUE       reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    RINTERFACE      reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    $end            reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    LLAVEDER        reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    PARDER          reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    COMA            reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    CORDER          reduce using rule 99 (expresion -> expresion MENOS MENOS .)
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

  ! MENOS           [ shift and go to state 55 ]
  ! ID              [ shift and go to state 58 ]

    expresion                      shift and go to state 97
    llamada_funcion                shift and go to state 54

state 126

    (83) expresion -> expresion POR expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 83 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 83 (expresion -> expresion POR expresion .)
    POR             reduce using rule 83 (expresion -> expresion POR expresion .)
    DIV             reduce using rule 83 (expresion -> expresion POR expresion .)
    IGUALDAD        reduce using rule 83 (expresion -> expresion POR expresion .)
    DESIGUALDAD     reduce using rule 83 (expresion -> expresion POR expresion .)
    MAYORQ          reduce using rule 83 (expresion -> expresion POR expresion .)
    MENORQ          reduce using rule 83 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 83 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 83 (expresion -> expresion POR expresion .)
    AND             reduce using rule 83 (expresion -> expresion POR expresion .)
    OR              reduce using rule 83 (expresion -> expresion POR expresion .)
    MOD             reduce using rule 83 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 83 (expresion -> expresion POR expresion .)
    RCONSOLE        reduce using rule 83 (expresion -> expresion POR expresion .)
    RLET            reduce using rule 83 (expresion -> expresion POR expresion .)
    RIF             reduce using rule 83 (expresion -> expresion POR expresion .)
    RFOR            reduce using rule 83 (expresion -> expresion POR expresion .)
    RFUNCTION       reduce using rule 83 (expresion -> expresion POR expresion .)
    ID              reduce using rule 83 (expresion -> expresion POR expresion .)
    RRETURN         reduce using rule 83 (expresion -> expresion POR expresion .)
    RWHILE          reduce using rule 83 (expresion -> expresion POR expresion .)
    RBREAK          reduce using rule 83 (expresion -> expresion POR expresion .)
    RCONTINUE       reduce using rule 83 (expresion -> expresion POR expresion .)
    RINTERFACE      reduce using rule 83 (expresion -> expresion POR expresion .)
    $end            reduce using rule 83 (expresion -> expresion POR expresion .)
    LLAVEDER        reduce using rule 83 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 83 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 83 (expresion -> expresion POR expresion .)
    CORDER          reduce using rule 83 (expresion -> expresion POR expresion .)
    POT             shift and go to state 95

  ! POT             [ reduce using rule 83 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 83 ]
  ! MENOS           [ shift and go to state 84 ]
  ! POR             [ shift and go to state 85 ]
  ! DIV             [ shift and go to state 86 ]
  ! IGUALDAD        [ shift and go to state 87 ]
  ! DESIGUALDAD     [ shift and go to state 88 ]
  ! MAYORQ          [ shift and go to state 89 ]
  ! MENORQ          [ shift and go to state 90 ]
  ! MAYORIGUAL      [ shift and go to state 91 ]
  ! MENORIGUAL      [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! MOD             [ shift and go to state 96 ]


state 127

    (84) expresion -> expresion DIV expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 84 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 84 (expresion -> expresion DIV expresion .)
    POR             reduce using rule 84 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 84 (expresion -> expresion DIV expresion .)
    IGUALDAD        reduce using rule 84 (expresion -> expresion DIV expresion .)
    DESIGUALDAD     reduce using rule 84 (expresion -> expresion DIV expresion .)
    MAYORQ          reduce using rule 84 (expresion -> expresion DIV expresion .)
    MENORQ          reduce using rule 84 (expresion -> expresion DIV expresion .)
    MAYORIGUAL      reduce using rule 84 (expresion -> expresion DIV expresion .)
    MENORIGUAL      reduce using rule 84 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 84 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 84 (expresion -> expresion DIV expresion .)
    MOD             reduce using rule 84 (expresion -> expresion DIV expresion .)
    PTCOMA          reduce using rule 84 (expresion -> expresion DIV expresion .)
    RCONSOLE        reduce using rule 84 (expresion -> expresion DIV expresion .)
    RLET            reduce using rule 84 (expresion -> expresion DIV expresion .)
    RIF             reduce using rule 84 (expresion -> expresion DIV expresion .)
    RFOR            reduce using rule 84 (expresion -> expresion DIV expresion .)
    RFUNCTION       reduce using rule 84 (expresion -> expresion DIV expresion .)
    ID              reduce using rule 84 (expresion -> expresion DIV expresion .)
    RRETURN         reduce using rule 84 (expresion -> expresion DIV expresion .)
    RWHILE          reduce using rule 84 (expresion -> expresion DIV expresion .)
    RBREAK          reduce using rule 84 (expresion -> expresion DIV expresion .)
    RCONTINUE       reduce using rule 84 (expresion -> expresion DIV expresion .)
    RINTERFACE      reduce using rule 84 (expresion -> expresion DIV expresion .)
    $end            reduce using rule 84 (expresion -> expresion DIV expresion .)
    LLAVEDER        reduce using rule 84 (expresion -> expresion DIV expresion .)
    PARDER          reduce using rule 84 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 84 (expresion -> expresion DIV expresion .)
    CORDER          reduce using rule 84 (expresion -> expresion DIV expresion .)
    POT             shift and go to state 95

  ! POT             [ reduce using rule 84 (expresion -> expresion DIV expresion .) ]
  ! MAS             [ shift and go to state 83 ]
  ! MENOS           [ shift and go to state 84 ]
  ! POR             [ shift and go to state 85 ]
  ! DIV             [ shift and go to state 86 ]
  ! IGUALDAD        [ shift and go to state 87 ]
  ! DESIGUALDAD     [ shift and go to state 88 ]
  ! MAYORQ          [ shift and go to state 89 ]
  ! MENORQ          [ shift and go to state 90 ]
  ! MAYORIGUAL      [ shift and go to state 91 ]
  ! MENORIGUAL      [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! MOD             [ shift and go to state 96 ]


state 128

    (85) expresion -> expresion IGUALDAD expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    IGUALDAD        reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    DESIGUALDAD     reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    AND             reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    OR              reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    PTCOMA          reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    RCONSOLE        reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    RLET            reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    RIF             reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    RFOR            reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    RFUNCTION       reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    ID              reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    RRETURN         reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    RWHILE          reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    RBREAK          reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    RCONTINUE       reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    RINTERFACE      reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    $end            reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    LLAVEDER        reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    PARDER          reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    COMA            reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    CORDER          reduce using rule 85 (expresion -> expresion IGUALDAD expresion .)
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    MAYORQ          shift and go to state 89
    MENORQ          shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    MENORIGUAL      shift and go to state 92
    POT             shift and go to state 95
    MOD             shift and go to state 96

  ! MAS             [ reduce using rule 85 (expresion -> expresion IGUALDAD expresion .) ]
  ! MENOS           [ reduce using rule 85 (expresion -> expresion IGUALDAD expresion .) ]
  ! POR             [ reduce using rule 85 (expresion -> expresion IGUALDAD expresion .) ]
  ! DIV             [ reduce using rule 85 (expresion -> expresion IGUALDAD expresion .) ]
  ! MAYORQ          [ reduce using rule 85 (expresion -> expresion IGUALDAD expresion .) ]
  ! MENORQ          [ reduce using rule 85 (expresion -> expresion IGUALDAD expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 85 (expresion -> expresion IGUALDAD expresion .) ]
  ! MENORIGUAL      [ reduce using rule 85 (expresion -> expresion IGUALDAD expresion .) ]
  ! POT             [ reduce using rule 85 (expresion -> expresion IGUALDAD expresion .) ]
  ! MOD             [ reduce using rule 85 (expresion -> expresion IGUALDAD expresion .) ]
  ! IGUALDAD        [ shift and go to state 87 ]
  ! DESIGUALDAD     [ shift and go to state 88 ]
  ! AND             [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]


state 129

    (86) expresion -> expresion DESIGUALDAD expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    IGUALDAD        reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    DESIGUALDAD     reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    AND             reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    OR              reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    PTCOMA          reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    RCONSOLE        reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    RLET            reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    RIF             reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    RFOR            reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    RFUNCTION       reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    ID              reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    RRETURN         reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    RWHILE          reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    RBREAK          reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    RCONTINUE       reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    RINTERFACE      reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    $end            reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    LLAVEDER        reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    PARDER          reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    COMA            reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    CORDER          reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .)
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    MAYORQ          shift and go to state 89
    MENORQ          shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    MENORIGUAL      shift and go to state 92
    POT             shift and go to state 95
    MOD             shift and go to state 96

  ! MAS             [ reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! MENOS           [ reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! POR             [ reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! DIV             [ reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! MAYORQ          [ reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! MENORQ          [ reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! POT             [ reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! MOD             [ reduce using rule 86 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! IGUALDAD        [ shift and go to state 87 ]
  ! DESIGUALDAD     [ shift and go to state 88 ]
  ! AND             [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]


state 130

    (87) expresion -> expresion MAYORQ expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    IGUALDAD        reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    DESIGUALDAD     reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    MAYORQ          reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    MENORQ          reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    MAYORIGUAL      reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    MENORIGUAL      reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    AND             reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    OR              reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    PTCOMA          reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    RCONSOLE        reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    RLET            reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    RIF             reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    RFOR            reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    RFUNCTION       reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    ID              reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    RRETURN         reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    RWHILE          reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    RBREAK          reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    RCONTINUE       reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    RINTERFACE      reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    $end            reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    LLAVEDER        reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    PARDER          reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    COMA            reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    CORDER          reduce using rule 87 (expresion -> expresion MAYORQ expresion .)
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 95
    MOD             shift and go to state 96

  ! MAS             [ reduce using rule 87 (expresion -> expresion MAYORQ expresion .) ]
  ! MENOS           [ reduce using rule 87 (expresion -> expresion MAYORQ expresion .) ]
  ! POR             [ reduce using rule 87 (expresion -> expresion MAYORQ expresion .) ]
  ! DIV             [ reduce using rule 87 (expresion -> expresion MAYORQ expresion .) ]
  ! POT             [ reduce using rule 87 (expresion -> expresion MAYORQ expresion .) ]
  ! MOD             [ reduce using rule 87 (expresion -> expresion MAYORQ expresion .) ]
  ! IGUALDAD        [ shift and go to state 87 ]
  ! DESIGUALDAD     [ shift and go to state 88 ]
  ! MAYORQ          [ shift and go to state 89 ]
  ! MENORQ          [ shift and go to state 90 ]
  ! MAYORIGUAL      [ shift and go to state 91 ]
  ! MENORIGUAL      [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]


state 131

    (88) expresion -> expresion MENORQ expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    IGUALDAD        reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    DESIGUALDAD     reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    MAYORQ          reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    MENORQ          reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    MAYORIGUAL      reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    MENORIGUAL      reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    AND             reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    OR              reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    PTCOMA          reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    RCONSOLE        reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    RLET            reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    RIF             reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    RFOR            reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    RFUNCTION       reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    ID              reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    RRETURN         reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    RWHILE          reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    RBREAK          reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    RCONTINUE       reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    RINTERFACE      reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    $end            reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    LLAVEDER        reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    PARDER          reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    COMA            reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    CORDER          reduce using rule 88 (expresion -> expresion MENORQ expresion .)
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 95
    MOD             shift and go to state 96

  ! MAS             [ reduce using rule 88 (expresion -> expresion MENORQ expresion .) ]
  ! MENOS           [ reduce using rule 88 (expresion -> expresion MENORQ expresion .) ]
  ! POR             [ reduce using rule 88 (expresion -> expresion MENORQ expresion .) ]
  ! DIV             [ reduce using rule 88 (expresion -> expresion MENORQ expresion .) ]
  ! POT             [ reduce using rule 88 (expresion -> expresion MENORQ expresion .) ]
  ! MOD             [ reduce using rule 88 (expresion -> expresion MENORQ expresion .) ]
  ! IGUALDAD        [ shift and go to state 87 ]
  ! DESIGUALDAD     [ shift and go to state 88 ]
  ! MAYORQ          [ shift and go to state 89 ]
  ! MENORQ          [ shift and go to state 90 ]
  ! MAYORIGUAL      [ shift and go to state 91 ]
  ! MENORIGUAL      [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]


state 132

    (89) expresion -> expresion MAYORIGUAL expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    IGUALDAD        reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    DESIGUALDAD     reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORQ          reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    MENORQ          reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    PTCOMA          reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    RCONSOLE        reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    RLET            reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    RIF             reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    RFOR            reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    RFUNCTION       reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    ID              reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    RRETURN         reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    RWHILE          reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    RBREAK          reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    RCONTINUE       reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    RINTERFACE      reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    $end            reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    LLAVEDER        reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    PARDER          reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    CORDER          reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 95
    MOD             shift and go to state 96

  ! MAS             [ reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POT             [ reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MOD             [ reduce using rule 89 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! IGUALDAD        [ shift and go to state 87 ]
  ! DESIGUALDAD     [ shift and go to state 88 ]
  ! MAYORQ          [ shift and go to state 89 ]
  ! MENORQ          [ shift and go to state 90 ]
  ! MAYORIGUAL      [ shift and go to state 91 ]
  ! MENORIGUAL      [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]


state 133

    (90) expresion -> expresion MENORIGUAL expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    IGUALDAD        reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    DESIGUALDAD     reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    MAYORQ          reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    MENORQ          reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    PTCOMA          reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    RCONSOLE        reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    RLET            reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    RIF             reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    RFOR            reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    RFUNCTION       reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    ID              reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    RRETURN         reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    RWHILE          reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    RBREAK          reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    RCONTINUE       reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    RINTERFACE      reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    $end            reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    LLAVEDER        reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    PARDER          reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    CORDER          reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 95
    MOD             shift and go to state 96

  ! MAS             [ reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POT             [ reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MOD             [ reduce using rule 90 (expresion -> expresion MENORIGUAL expresion .) ]
  ! IGUALDAD        [ shift and go to state 87 ]
  ! DESIGUALDAD     [ shift and go to state 88 ]
  ! MAYORQ          [ shift and go to state 89 ]
  ! MENORQ          [ shift and go to state 90 ]
  ! MAYORIGUAL      [ shift and go to state 91 ]
  ! MENORIGUAL      [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]


state 134

    (91) expresion -> expresion AND expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    AND             reduce using rule 91 (expresion -> expresion AND expresion .)
    OR              reduce using rule 91 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 91 (expresion -> expresion AND expresion .)
    RCONSOLE        reduce using rule 91 (expresion -> expresion AND expresion .)
    RLET            reduce using rule 91 (expresion -> expresion AND expresion .)
    RIF             reduce using rule 91 (expresion -> expresion AND expresion .)
    RFOR            reduce using rule 91 (expresion -> expresion AND expresion .)
    RFUNCTION       reduce using rule 91 (expresion -> expresion AND expresion .)
    ID              reduce using rule 91 (expresion -> expresion AND expresion .)
    RRETURN         reduce using rule 91 (expresion -> expresion AND expresion .)
    RWHILE          reduce using rule 91 (expresion -> expresion AND expresion .)
    RBREAK          reduce using rule 91 (expresion -> expresion AND expresion .)
    RCONTINUE       reduce using rule 91 (expresion -> expresion AND expresion .)
    RINTERFACE      reduce using rule 91 (expresion -> expresion AND expresion .)
    $end            reduce using rule 91 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 91 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 91 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 91 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 91 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    IGUALDAD        shift and go to state 87
    DESIGUALDAD     shift and go to state 88
    MAYORQ          shift and go to state 89
    MENORQ          shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    MENORIGUAL      shift and go to state 92
    POT             shift and go to state 95
    MOD             shift and go to state 96

  ! MAS             [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! IGUALDAD        [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! DESIGUALDAD     [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! MAYORQ          [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! MENORQ          [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! POT             [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! MOD             [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]


state 135

    (92) expresion -> expresion OR expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    OR              reduce using rule 92 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 92 (expresion -> expresion OR expresion .)
    RCONSOLE        reduce using rule 92 (expresion -> expresion OR expresion .)
    RLET            reduce using rule 92 (expresion -> expresion OR expresion .)
    RIF             reduce using rule 92 (expresion -> expresion OR expresion .)
    RFOR            reduce using rule 92 (expresion -> expresion OR expresion .)
    RFUNCTION       reduce using rule 92 (expresion -> expresion OR expresion .)
    ID              reduce using rule 92 (expresion -> expresion OR expresion .)
    RRETURN         reduce using rule 92 (expresion -> expresion OR expresion .)
    RWHILE          reduce using rule 92 (expresion -> expresion OR expresion .)
    RBREAK          reduce using rule 92 (expresion -> expresion OR expresion .)
    RCONTINUE       reduce using rule 92 (expresion -> expresion OR expresion .)
    RINTERFACE      reduce using rule 92 (expresion -> expresion OR expresion .)
    $end            reduce using rule 92 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 92 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 92 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 92 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 92 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    IGUALDAD        shift and go to state 87
    DESIGUALDAD     shift and go to state 88
    MAYORQ          shift and go to state 89
    MENORQ          shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    MENORIGUAL      shift and go to state 92
    AND             shift and go to state 93
    POT             shift and go to state 95
    MOD             shift and go to state 96

  ! MAS             [ reduce using rule 92 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 92 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 92 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 92 (expresion -> expresion OR expresion .) ]
  ! IGUALDAD        [ reduce using rule 92 (expresion -> expresion OR expresion .) ]
  ! DESIGUALDAD     [ reduce using rule 92 (expresion -> expresion OR expresion .) ]
  ! MAYORQ          [ reduce using rule 92 (expresion -> expresion OR expresion .) ]
  ! MENORQ          [ reduce using rule 92 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 92 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 92 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 92 (expresion -> expresion OR expresion .) ]
  ! POT             [ reduce using rule 92 (expresion -> expresion OR expresion .) ]
  ! MOD             [ reduce using rule 92 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 94 ]


state 136

    (93) expresion -> expresion POT expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 93 (expresion -> expresion POT expresion .)
    MENOS           reduce using rule 93 (expresion -> expresion POT expresion .)
    POR             reduce using rule 93 (expresion -> expresion POT expresion .)
    DIV             reduce using rule 93 (expresion -> expresion POT expresion .)
    IGUALDAD        reduce using rule 93 (expresion -> expresion POT expresion .)
    DESIGUALDAD     reduce using rule 93 (expresion -> expresion POT expresion .)
    MAYORQ          reduce using rule 93 (expresion -> expresion POT expresion .)
    MENORQ          reduce using rule 93 (expresion -> expresion POT expresion .)
    MAYORIGUAL      reduce using rule 93 (expresion -> expresion POT expresion .)
    MENORIGUAL      reduce using rule 93 (expresion -> expresion POT expresion .)
    AND             reduce using rule 93 (expresion -> expresion POT expresion .)
    OR              reduce using rule 93 (expresion -> expresion POT expresion .)
    POT             reduce using rule 93 (expresion -> expresion POT expresion .)
    MOD             reduce using rule 93 (expresion -> expresion POT expresion .)
    PTCOMA          reduce using rule 93 (expresion -> expresion POT expresion .)
    RCONSOLE        reduce using rule 93 (expresion -> expresion POT expresion .)
    RLET            reduce using rule 93 (expresion -> expresion POT expresion .)
    RIF             reduce using rule 93 (expresion -> expresion POT expresion .)
    RFOR            reduce using rule 93 (expresion -> expresion POT expresion .)
    RFUNCTION       reduce using rule 93 (expresion -> expresion POT expresion .)
    ID              reduce using rule 93 (expresion -> expresion POT expresion .)
    RRETURN         reduce using rule 93 (expresion -> expresion POT expresion .)
    RWHILE          reduce using rule 93 (expresion -> expresion POT expresion .)
    RBREAK          reduce using rule 93 (expresion -> expresion POT expresion .)
    RCONTINUE       reduce using rule 93 (expresion -> expresion POT expresion .)
    RINTERFACE      reduce using rule 93 (expresion -> expresion POT expresion .)
    $end            reduce using rule 93 (expresion -> expresion POT expresion .)
    LLAVEDER        reduce using rule 93 (expresion -> expresion POT expresion .)
    PARDER          reduce using rule 93 (expresion -> expresion POT expresion .)
    COMA            reduce using rule 93 (expresion -> expresion POT expresion .)
    CORDER          reduce using rule 93 (expresion -> expresion POT expresion .)

  ! MAS             [ shift and go to state 83 ]
  ! MENOS           [ shift and go to state 84 ]
  ! POR             [ shift and go to state 85 ]
  ! DIV             [ shift and go to state 86 ]
  ! IGUALDAD        [ shift and go to state 87 ]
  ! DESIGUALDAD     [ shift and go to state 88 ]
  ! MAYORQ          [ shift and go to state 89 ]
  ! MENORQ          [ shift and go to state 90 ]
  ! MAYORIGUAL      [ shift and go to state 91 ]
  ! MENORIGUAL      [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! POT             [ shift and go to state 95 ]
  ! MOD             [ shift and go to state 96 ]


state 137

    (94) expresion -> expresion MOD expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 94 (expresion -> expresion MOD expresion .)
    MENOS           reduce using rule 94 (expresion -> expresion MOD expresion .)
    POR             reduce using rule 94 (expresion -> expresion MOD expresion .)
    DIV             reduce using rule 94 (expresion -> expresion MOD expresion .)
    IGUALDAD        reduce using rule 94 (expresion -> expresion MOD expresion .)
    DESIGUALDAD     reduce using rule 94 (expresion -> expresion MOD expresion .)
    MAYORQ          reduce using rule 94 (expresion -> expresion MOD expresion .)
    MENORQ          reduce using rule 94 (expresion -> expresion MOD expresion .)
    MAYORIGUAL      reduce using rule 94 (expresion -> expresion MOD expresion .)
    MENORIGUAL      reduce using rule 94 (expresion -> expresion MOD expresion .)
    AND             reduce using rule 94 (expresion -> expresion MOD expresion .)
    OR              reduce using rule 94 (expresion -> expresion MOD expresion .)
    MOD             reduce using rule 94 (expresion -> expresion MOD expresion .)
    PTCOMA          reduce using rule 94 (expresion -> expresion MOD expresion .)
    RCONSOLE        reduce using rule 94 (expresion -> expresion MOD expresion .)
    RLET            reduce using rule 94 (expresion -> expresion MOD expresion .)
    RIF             reduce using rule 94 (expresion -> expresion MOD expresion .)
    RFOR            reduce using rule 94 (expresion -> expresion MOD expresion .)
    RFUNCTION       reduce using rule 94 (expresion -> expresion MOD expresion .)
    ID              reduce using rule 94 (expresion -> expresion MOD expresion .)
    RRETURN         reduce using rule 94 (expresion -> expresion MOD expresion .)
    RWHILE          reduce using rule 94 (expresion -> expresion MOD expresion .)
    RBREAK          reduce using rule 94 (expresion -> expresion MOD expresion .)
    RCONTINUE       reduce using rule 94 (expresion -> expresion MOD expresion .)
    RINTERFACE      reduce using rule 94 (expresion -> expresion MOD expresion .)
    $end            reduce using rule 94 (expresion -> expresion MOD expresion .)
    LLAVEDER        reduce using rule 94 (expresion -> expresion MOD expresion .)
    PARDER          reduce using rule 94 (expresion -> expresion MOD expresion .)
    COMA            reduce using rule 94 (expresion -> expresion MOD expresion .)
    CORDER          reduce using rule 94 (expresion -> expresion MOD expresion .)
    POT             shift and go to state 95

  ! POT             [ reduce using rule 94 (expresion -> expresion MOD expresion .) ]
  ! MAS             [ shift and go to state 83 ]
  ! MENOS           [ shift and go to state 84 ]
  ! POR             [ shift and go to state 85 ]
  ! DIV             [ shift and go to state 86 ]
  ! IGUALDAD        [ shift and go to state 87 ]
  ! DESIGUALDAD     [ shift and go to state 88 ]
  ! MAYORQ          [ shift and go to state 89 ]
  ! MENORQ          [ shift and go to state 90 ]
  ! MAYORIGUAL      [ shift and go to state 91 ]
  ! MENORIGUAL      [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! MOD             [ shift and go to state 96 ]


state 138

    (97) expresion -> PARIZQ expresion PARDER .

    MAS             reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    DIV             reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    IGUALDAD        reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    DESIGUALDAD     reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    MAYORQ          reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    MENORQ          reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    POT             reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    MOD             reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    RCONSOLE        reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    RLET            reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    RIF             reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    RFOR            reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    RFUNCTION       reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    ID              reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    RRETURN         reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    RWHILE          reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    RBREAK          reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    RCONTINUE       reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    RINTERFACE      reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    $end            reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 97 (expresion -> PARIZQ expresion PARDER .)


state 139

    (100) expresion -> ID PUNTO parametros_asignacion_struct .
    (57) parametros_asignacion_struct -> parametros_asignacion_struct . PUNTO asignacion_struct_param

    MAS             reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    MENOS           reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    POR             reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    DIV             reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    IGUALDAD        reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    DESIGUALDAD     reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    MAYORQ          reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    MENORQ          reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    MAYORIGUAL      reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    MENORIGUAL      reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    AND             reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    OR              reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    POT             reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    MOD             reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    PTCOMA          reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    RCONSOLE        reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    RLET            reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    RIF             reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    RFOR            reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    RFUNCTION       reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    ID              reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    RRETURN         reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    RWHILE          reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    RBREAK          reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    RCONTINUE       reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    RINTERFACE      reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    $end            reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    LLAVEDER        reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    PARDER          reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    COMA            reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    CORDER          reduce using rule 100 (expresion -> ID PUNTO parametros_asignacion_struct .)
    PUNTO           shift and go to state 112


state 140

    (77) ciclo_while -> RWHILE PARIZQ expresion PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 162


state 141

    (53) declaracion_struct -> ID . DOSPUNTOS tipo IGUAL expresion
    (54) declaracion_struct -> ID .
    (55) declaracion_struct -> ID . DOSPUNTOS tipo
    (56) declaracion_struct -> ID . IGUAL expresion

    DOSPUNTOS       shift and go to state 163
    PTCOMA          reduce using rule 54 (declaracion_struct -> ID .)
    IGUAL           shift and go to state 164


state 142

    (38) struct -> RINTERFACE ID LLAVEIZQ parametros_struct . LLAVEDER
    (50) parametros_struct -> parametros_struct . params_struct
    (52) params_struct -> . declaracion_struct PTCOMA
    (53) declaracion_struct -> . ID DOSPUNTOS tipo IGUAL expresion
    (54) declaracion_struct -> . ID
    (55) declaracion_struct -> . ID DOSPUNTOS tipo
    (56) declaracion_struct -> . ID IGUAL expresion

    LLAVEDER        shift and go to state 165
    ID              shift and go to state 141

    params_struct                  shift and go to state 166
    declaracion_struct             shift and go to state 144

state 143

    (51) parametros_struct -> params_struct .

    LLAVEDER        reduce using rule 51 (parametros_struct -> params_struct .)
    ID              reduce using rule 51 (parametros_struct -> params_struct .)


state 144

    (52) params_struct -> declaracion_struct . PTCOMA

    PTCOMA          shift and go to state 167


state 145

    (32) imprimir -> RCONSOLE PUNTO RLOG PARIZQ parametros_llamada . PARDER
    (65) parametros_llamada -> parametros_llamada . COMA parametro_ll

    PARDER          shift and go to state 168
    COMA            shift and go to state 111


state 146

    (34) declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL . expresion
    (40) declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL . CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL . CORIZQ CORDER
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    CORIZQ          shift and go to state 170
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 169
    llamada_funcion                shift and go to state 54

state 147

    (42) declaracion_array -> RLET ID IGUAL CORIZQ parametros_llamada . CORDER
    (65) parametros_llamada -> parametros_llamada . COMA parametro_ll

    CORDER          shift and go to state 171
    COMA            shift and go to state 111


state 148

    (43) declaracion_array -> RLET ID IGUAL CORIZQ CORDER .

    PTCOMA          reduce using rule 43 (declaracion_array -> RLET ID IGUAL CORIZQ CORDER .)
    RCONSOLE        reduce using rule 43 (declaracion_array -> RLET ID IGUAL CORIZQ CORDER .)
    RLET            reduce using rule 43 (declaracion_array -> RLET ID IGUAL CORIZQ CORDER .)
    RIF             reduce using rule 43 (declaracion_array -> RLET ID IGUAL CORIZQ CORDER .)
    RFOR            reduce using rule 43 (declaracion_array -> RLET ID IGUAL CORIZQ CORDER .)
    RFUNCTION       reduce using rule 43 (declaracion_array -> RLET ID IGUAL CORIZQ CORDER .)
    ID              reduce using rule 43 (declaracion_array -> RLET ID IGUAL CORIZQ CORDER .)
    RRETURN         reduce using rule 43 (declaracion_array -> RLET ID IGUAL CORIZQ CORDER .)
    RWHILE          reduce using rule 43 (declaracion_array -> RLET ID IGUAL CORIZQ CORDER .)
    RBREAK          reduce using rule 43 (declaracion_array -> RLET ID IGUAL CORIZQ CORDER .)
    RCONTINUE       reduce using rule 43 (declaracion_array -> RLET ID IGUAL CORIZQ CORDER .)
    RINTERFACE      reduce using rule 43 (declaracion_array -> RLET ID IGUAL CORIZQ CORDER .)
    $end            reduce using rule 43 (declaracion_array -> RLET ID IGUAL CORIZQ CORDER .)
    LLAVEDER        reduce using rule 43 (declaracion_array -> RLET ID IGUAL CORIZQ CORDER .)


state 149

    (65) parametros_llamada -> parametros_llamada COMA parametro_ll .

    PARDER          reduce using rule 65 (parametros_llamada -> parametros_llamada COMA parametro_ll .)
    COMA            reduce using rule 65 (parametros_llamada -> parametros_llamada COMA parametro_ll .)
    CORDER          reduce using rule 65 (parametros_llamada -> parametros_llamada COMA parametro_ll .)


state 150

    (57) parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .

    IGUAL           reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    PUNTO           reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    MAS             reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    MENOS           reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    POR             reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    DIV             reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    IGUALDAD        reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    DESIGUALDAD     reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    MAYORQ          reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    MENORQ          reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    MAYORIGUAL      reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    MENORIGUAL      reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    AND             reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    OR              reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    POT             reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    MOD             reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    PTCOMA          reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    RCONSOLE        reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    RLET            reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    RIF             reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    RFOR            reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    RFUNCTION       reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    ID              reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    RRETURN         reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    RWHILE          reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    RBREAK          reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    RCONTINUE       reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    RINTERFACE      reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    $end            reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    LLAVEDER        reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    PARDER          reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    COMA            reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)
    CORDER          reduce using rule 57 (parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param .)


state 151

    (39) asignacion_struct -> ID PUNTO parametros_asignacion_struct IGUAL expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    PTCOMA          reduce using rule 39 (asignacion_struct -> ID PUNTO parametros_asignacion_struct IGUAL expresion .)
    RCONSOLE        reduce using rule 39 (asignacion_struct -> ID PUNTO parametros_asignacion_struct IGUAL expresion .)
    RLET            reduce using rule 39 (asignacion_struct -> ID PUNTO parametros_asignacion_struct IGUAL expresion .)
    RIF             reduce using rule 39 (asignacion_struct -> ID PUNTO parametros_asignacion_struct IGUAL expresion .)
    RFOR            reduce using rule 39 (asignacion_struct -> ID PUNTO parametros_asignacion_struct IGUAL expresion .)
    RFUNCTION       reduce using rule 39 (asignacion_struct -> ID PUNTO parametros_asignacion_struct IGUAL expresion .)
    ID              reduce using rule 39 (asignacion_struct -> ID PUNTO parametros_asignacion_struct IGUAL expresion .)
    RRETURN         reduce using rule 39 (asignacion_struct -> ID PUNTO parametros_asignacion_struct IGUAL expresion .)
    RWHILE          reduce using rule 39 (asignacion_struct -> ID PUNTO parametros_asignacion_struct IGUAL expresion .)
    RBREAK          reduce using rule 39 (asignacion_struct -> ID PUNTO parametros_asignacion_struct IGUAL expresion .)
    RCONTINUE       reduce using rule 39 (asignacion_struct -> ID PUNTO parametros_asignacion_struct IGUAL expresion .)
    RINTERFACE      reduce using rule 39 (asignacion_struct -> ID PUNTO parametros_asignacion_struct IGUAL expresion .)
    $end            reduce using rule 39 (asignacion_struct -> ID PUNTO parametros_asignacion_struct IGUAL expresion .)
    LLAVEDER        reduce using rule 39 (asignacion_struct -> ID PUNTO parametros_asignacion_struct IGUAL expresion .)
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    IGUALDAD        shift and go to state 87
    DESIGUALDAD     shift and go to state 88
    MAYORQ          shift and go to state 89
    MENORQ          shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    MENORIGUAL      shift and go to state 92
    AND             shift and go to state 93
    OR              shift and go to state 94
    POT             shift and go to state 95
    MOD             shift and go to state 96


state 152

    (73) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ . instrucciones LLAVEDER
    (74) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ . instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (75) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ . instrucciones LLAVEDER RELSE RIF condicional_if
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . r_break PTCOMA
    (14) instruccion -> . r_continue PTCOMA
    (15) instruccion -> . struct PTCOMA
    (16) instruccion -> . asignacion_struct PTCOMA
    (17) instruccion -> . declaracion_array PTCOMA
    (18) instruccion -> . imprimir
    (19) instruccion -> . declaracion_normal
    (20) instruccion -> . condicional_ifs
    (21) instruccion -> . ciclo_for
    (22) instruccion -> . funcion
    (23) instruccion -> . llamada_funcion
    (24) instruccion -> . r_return
    (25) instruccion -> . asignacion
    (26) instruccion -> . ciclo_while
    (27) instruccion -> . r_break
    (28) instruccion -> . r_continue
    (29) instruccion -> . struct
    (30) instruccion -> . asignacion_struct
    (31) instruccion -> . declaracion_array
    (32) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER
    (34) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> . RLET ID
    (36) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (37) declaracion_normal -> . RLET ID IGUAL expresion
    (72) condicional_ifs -> . RIF condicional_if
    (76) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funcion -> . RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> . RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (69) r_return -> . RRETURN expresion
    (33) asignacion -> . ID IGUAL expresion
    (77) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (70) r_break -> . RBREAK
    (71) r_continue -> . RCONTINUE
    (38) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (39) asignacion_struct -> . ID PUNTO parametros_asignacion_struct IGUAL expresion
    (40) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER
    (42) declaracion_array -> . RLET ID IGUAL CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> . RLET ID IGUAL CORIZQ CORDER

    RCONSOLE        shift and go to state 18
    RLET            shift and go to state 19
    RIF             shift and go to state 21
    RFOR            shift and go to state 22
    RFUNCTION       shift and go to state 23
    ID              shift and go to state 20
    RRETURN         shift and go to state 24
    RWHILE          shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27
    RINTERFACE      shift and go to state 28

    instrucciones                  shift and go to state 172
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12
    r_break                        shift and go to state 13
    r_continue                     shift and go to state 14
    struct                         shift and go to state 15
    asignacion_struct              shift and go to state 16
    declaracion_array              shift and go to state 17

state 153

    (76) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion . PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    PTCOMA          shift and go to state 173
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    IGUALDAD        shift and go to state 87
    DESIGUALDAD     shift and go to state 88
    MAYORQ          shift and go to state 89
    MENORQ          shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    MENORIGUAL      shift and go to state 92
    AND             shift and go to state 93
    OR              shift and go to state 94
    POT             shift and go to state 95
    MOD             shift and go to state 96


state 154

    (34) declaracion_normal -> RLET ID DOSPUNTOS . tipo IGUAL expresion
    (36) declaracion_normal -> RLET ID DOSPUNTOS . tipo
    (78) tipo -> . RSTRING
    (79) tipo -> . RNUMBER
    (80) tipo -> . RBOOLEAN

    RSTRING         shift and go to state 105
    RNUMBER         shift and go to state 106
    RBOOLEAN        shift and go to state 107

    tipo                           shift and go to state 174

state 155

    (37) declaracion_normal -> RLET ID IGUAL . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 108
    llamada_funcion                shift and go to state 54

state 156

    (63) parametro -> ID DOSPUNTOS . tipo
    (78) tipo -> . RSTRING
    (79) tipo -> . RNUMBER
    (80) tipo -> . RBOOLEAN

    RSTRING         shift and go to state 105
    RNUMBER         shift and go to state 106
    RBOOLEAN        shift and go to state 107

    tipo                           shift and go to state 175

state 157

    (44) funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS . tipo LLAVEIZQ instrucciones LLAVEDER
    (78) tipo -> . RSTRING
    (79) tipo -> . RNUMBER
    (80) tipo -> . RBOOLEAN

    RSTRING         shift and go to state 105
    RNUMBER         shift and go to state 106
    RBOOLEAN        shift and go to state 107

    tipo                           shift and go to state 176

state 158

    (46) funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . r_break PTCOMA
    (14) instruccion -> . r_continue PTCOMA
    (15) instruccion -> . struct PTCOMA
    (16) instruccion -> . asignacion_struct PTCOMA
    (17) instruccion -> . declaracion_array PTCOMA
    (18) instruccion -> . imprimir
    (19) instruccion -> . declaracion_normal
    (20) instruccion -> . condicional_ifs
    (21) instruccion -> . ciclo_for
    (22) instruccion -> . funcion
    (23) instruccion -> . llamada_funcion
    (24) instruccion -> . r_return
    (25) instruccion -> . asignacion
    (26) instruccion -> . ciclo_while
    (27) instruccion -> . r_break
    (28) instruccion -> . r_continue
    (29) instruccion -> . struct
    (30) instruccion -> . asignacion_struct
    (31) instruccion -> . declaracion_array
    (32) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER
    (34) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> . RLET ID
    (36) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (37) declaracion_normal -> . RLET ID IGUAL expresion
    (72) condicional_ifs -> . RIF condicional_if
    (76) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funcion -> . RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> . RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (69) r_return -> . RRETURN expresion
    (33) asignacion -> . ID IGUAL expresion
    (77) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (70) r_break -> . RBREAK
    (71) r_continue -> . RCONTINUE
    (38) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (39) asignacion_struct -> . ID PUNTO parametros_asignacion_struct IGUAL expresion
    (40) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER
    (42) declaracion_array -> . RLET ID IGUAL CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> . RLET ID IGUAL CORIZQ CORDER

    RCONSOLE        shift and go to state 18
    RLET            shift and go to state 19
    RIF             shift and go to state 21
    RFOR            shift and go to state 22
    RFUNCTION       shift and go to state 23
    ID              shift and go to state 20
    RRETURN         shift and go to state 24
    RWHILE          shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27
    RINTERFACE      shift and go to state 28

    instrucciones                  shift and go to state 177
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12
    r_break                        shift and go to state 13
    r_continue                     shift and go to state 14
    struct                         shift and go to state 15
    asignacion_struct              shift and go to state 16
    declaracion_array              shift and go to state 17

state 159

    (45) funcion -> RFUNCTION ID PARIZQ parametros PARDER . DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> RFUNCTION ID PARIZQ parametros PARDER . LLAVEIZQ instrucciones LLAVEDER

    DOSPUNTOS       shift and go to state 178
    LLAVEIZQ        shift and go to state 179


state 160

    (60) parametros -> parametros COMA . parametro
    (62) parametro -> . RLET ID DOSPUNTOS tipo
    (63) parametro -> . ID DOSPUNTOS tipo
    (64) parametro -> . ID

    RLET            shift and go to state 121
    ID              shift and go to state 117

    parametro                      shift and go to state 180

state 161

    (62) parametro -> RLET ID . DOSPUNTOS tipo

    DOSPUNTOS       shift and go to state 181


state 162

    (77) ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . r_break PTCOMA
    (14) instruccion -> . r_continue PTCOMA
    (15) instruccion -> . struct PTCOMA
    (16) instruccion -> . asignacion_struct PTCOMA
    (17) instruccion -> . declaracion_array PTCOMA
    (18) instruccion -> . imprimir
    (19) instruccion -> . declaracion_normal
    (20) instruccion -> . condicional_ifs
    (21) instruccion -> . ciclo_for
    (22) instruccion -> . funcion
    (23) instruccion -> . llamada_funcion
    (24) instruccion -> . r_return
    (25) instruccion -> . asignacion
    (26) instruccion -> . ciclo_while
    (27) instruccion -> . r_break
    (28) instruccion -> . r_continue
    (29) instruccion -> . struct
    (30) instruccion -> . asignacion_struct
    (31) instruccion -> . declaracion_array
    (32) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER
    (34) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> . RLET ID
    (36) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (37) declaracion_normal -> . RLET ID IGUAL expresion
    (72) condicional_ifs -> . RIF condicional_if
    (76) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funcion -> . RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> . RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (69) r_return -> . RRETURN expresion
    (33) asignacion -> . ID IGUAL expresion
    (77) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (70) r_break -> . RBREAK
    (71) r_continue -> . RCONTINUE
    (38) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (39) asignacion_struct -> . ID PUNTO parametros_asignacion_struct IGUAL expresion
    (40) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER
    (42) declaracion_array -> . RLET ID IGUAL CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> . RLET ID IGUAL CORIZQ CORDER

    RCONSOLE        shift and go to state 18
    RLET            shift and go to state 19
    RIF             shift and go to state 21
    RFOR            shift and go to state 22
    RFUNCTION       shift and go to state 23
    ID              shift and go to state 20
    RRETURN         shift and go to state 24
    RWHILE          shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27
    RINTERFACE      shift and go to state 28

    instrucciones                  shift and go to state 182
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12
    r_break                        shift and go to state 13
    r_continue                     shift and go to state 14
    struct                         shift and go to state 15
    asignacion_struct              shift and go to state 16
    declaracion_array              shift and go to state 17

state 163

    (53) declaracion_struct -> ID DOSPUNTOS . tipo IGUAL expresion
    (55) declaracion_struct -> ID DOSPUNTOS . tipo
    (78) tipo -> . RSTRING
    (79) tipo -> . RNUMBER
    (80) tipo -> . RBOOLEAN

    RSTRING         shift and go to state 105
    RNUMBER         shift and go to state 106
    RBOOLEAN        shift and go to state 107

    tipo                           shift and go to state 183

state 164

    (56) declaracion_struct -> ID IGUAL . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 184
    llamada_funcion                shift and go to state 54

state 165

    (38) struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER .

    PTCOMA          reduce using rule 38 (struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER .)
    RCONSOLE        reduce using rule 38 (struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER .)
    RLET            reduce using rule 38 (struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER .)
    RIF             reduce using rule 38 (struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER .)
    RFOR            reduce using rule 38 (struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER .)
    RFUNCTION       reduce using rule 38 (struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER .)
    ID              reduce using rule 38 (struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER .)
    RRETURN         reduce using rule 38 (struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER .)
    RWHILE          reduce using rule 38 (struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER .)
    RBREAK          reduce using rule 38 (struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER .)
    RCONTINUE       reduce using rule 38 (struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER .)
    RINTERFACE      reduce using rule 38 (struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER .)
    $end            reduce using rule 38 (struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER .)
    LLAVEDER        reduce using rule 38 (struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER .)


state 166

    (50) parametros_struct -> parametros_struct params_struct .

    LLAVEDER        reduce using rule 50 (parametros_struct -> parametros_struct params_struct .)
    ID              reduce using rule 50 (parametros_struct -> parametros_struct params_struct .)


state 167

    (52) params_struct -> declaracion_struct PTCOMA .

    LLAVEDER        reduce using rule 52 (params_struct -> declaracion_struct PTCOMA .)
    ID              reduce using rule 52 (params_struct -> declaracion_struct PTCOMA .)


state 168

    (32) imprimir -> RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER .

    PTCOMA          reduce using rule 32 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER .)
    RCONSOLE        reduce using rule 32 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER .)
    RLET            reduce using rule 32 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER .)
    RIF             reduce using rule 32 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER .)
    RFOR            reduce using rule 32 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER .)
    RFUNCTION       reduce using rule 32 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER .)
    ID              reduce using rule 32 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER .)
    RRETURN         reduce using rule 32 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER .)
    RWHILE          reduce using rule 32 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER .)
    RBREAK          reduce using rule 32 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER .)
    RCONTINUE       reduce using rule 32 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER .)
    RINTERFACE      reduce using rule 32 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER .)
    $end            reduce using rule 32 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER .)
    LLAVEDER        reduce using rule 32 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER .)


state 169

    (34) declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    PTCOMA          reduce using rule 34 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RCONSOLE        reduce using rule 34 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RLET            reduce using rule 34 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RIF             reduce using rule 34 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RFOR            reduce using rule 34 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RFUNCTION       reduce using rule 34 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    ID              reduce using rule 34 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RRETURN         reduce using rule 34 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RWHILE          reduce using rule 34 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RBREAK          reduce using rule 34 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RCONTINUE       reduce using rule 34 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RINTERFACE      reduce using rule 34 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    $end            reduce using rule 34 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    LLAVEDER        reduce using rule 34 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    IGUALDAD        shift and go to state 87
    DESIGUALDAD     shift and go to state 88
    MAYORQ          shift and go to state 89
    MENORQ          shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    MENORIGUAL      shift and go to state 92
    AND             shift and go to state 93
    OR              shift and go to state 94
    POT             shift and go to state 95
    MOD             shift and go to state 96


state 170

    (40) declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ . parametros_llamada CORDER
    (41) declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ . CORDER
    (65) parametros_llamada -> . parametros_llamada COMA parametro_ll
    (66) parametros_llamada -> . parametro_ll
    (67) parametro_ll -> . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    CORDER          shift and go to state 186
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    parametros_llamada             shift and go to state 185
    parametro_ll                   shift and go to state 73
    expresion                      shift and go to state 74
    llamada_funcion                shift and go to state 54

state 171

    (42) declaracion_array -> RLET ID IGUAL CORIZQ parametros_llamada CORDER .

    PTCOMA          reduce using rule 42 (declaracion_array -> RLET ID IGUAL CORIZQ parametros_llamada CORDER .)
    RCONSOLE        reduce using rule 42 (declaracion_array -> RLET ID IGUAL CORIZQ parametros_llamada CORDER .)
    RLET            reduce using rule 42 (declaracion_array -> RLET ID IGUAL CORIZQ parametros_llamada CORDER .)
    RIF             reduce using rule 42 (declaracion_array -> RLET ID IGUAL CORIZQ parametros_llamada CORDER .)
    RFOR            reduce using rule 42 (declaracion_array -> RLET ID IGUAL CORIZQ parametros_llamada CORDER .)
    RFUNCTION       reduce using rule 42 (declaracion_array -> RLET ID IGUAL CORIZQ parametros_llamada CORDER .)
    ID              reduce using rule 42 (declaracion_array -> RLET ID IGUAL CORIZQ parametros_llamada CORDER .)
    RRETURN         reduce using rule 42 (declaracion_array -> RLET ID IGUAL CORIZQ parametros_llamada CORDER .)
    RWHILE          reduce using rule 42 (declaracion_array -> RLET ID IGUAL CORIZQ parametros_llamada CORDER .)
    RBREAK          reduce using rule 42 (declaracion_array -> RLET ID IGUAL CORIZQ parametros_llamada CORDER .)
    RCONTINUE       reduce using rule 42 (declaracion_array -> RLET ID IGUAL CORIZQ parametros_llamada CORDER .)
    RINTERFACE      reduce using rule 42 (declaracion_array -> RLET ID IGUAL CORIZQ parametros_llamada CORDER .)
    $end            reduce using rule 42 (declaracion_array -> RLET ID IGUAL CORIZQ parametros_llamada CORDER .)
    LLAVEDER        reduce using rule 42 (declaracion_array -> RLET ID IGUAL CORIZQ parametros_llamada CORDER .)


state 172

    (73) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones . LLAVEDER
    (74) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones . LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (75) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones . LLAVEDER RELSE RIF condicional_if
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . r_break PTCOMA
    (14) instruccion -> . r_continue PTCOMA
    (15) instruccion -> . struct PTCOMA
    (16) instruccion -> . asignacion_struct PTCOMA
    (17) instruccion -> . declaracion_array PTCOMA
    (18) instruccion -> . imprimir
    (19) instruccion -> . declaracion_normal
    (20) instruccion -> . condicional_ifs
    (21) instruccion -> . ciclo_for
    (22) instruccion -> . funcion
    (23) instruccion -> . llamada_funcion
    (24) instruccion -> . r_return
    (25) instruccion -> . asignacion
    (26) instruccion -> . ciclo_while
    (27) instruccion -> . r_break
    (28) instruccion -> . r_continue
    (29) instruccion -> . struct
    (30) instruccion -> . asignacion_struct
    (31) instruccion -> . declaracion_array
    (32) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER
    (34) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> . RLET ID
    (36) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (37) declaracion_normal -> . RLET ID IGUAL expresion
    (72) condicional_ifs -> . RIF condicional_if
    (76) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funcion -> . RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> . RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (69) r_return -> . RRETURN expresion
    (33) asignacion -> . ID IGUAL expresion
    (77) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (70) r_break -> . RBREAK
    (71) r_continue -> . RCONTINUE
    (38) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (39) asignacion_struct -> . ID PUNTO parametros_asignacion_struct IGUAL expresion
    (40) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER
    (42) declaracion_array -> . RLET ID IGUAL CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> . RLET ID IGUAL CORIZQ CORDER

    LLAVEDER        shift and go to state 187
    RCONSOLE        shift and go to state 18
    RLET            shift and go to state 19
    RIF             shift and go to state 21
    RFOR            shift and go to state 22
    RFUNCTION       shift and go to state 23
    ID              shift and go to state 20
    RRETURN         shift and go to state 24
    RWHILE          shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27
    RINTERFACE      shift and go to state 28

    instruccion                    shift and go to state 29
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12
    r_break                        shift and go to state 13
    r_continue                     shift and go to state 14
    struct                         shift and go to state 15
    asignacion_struct              shift and go to state 16
    declaracion_array              shift and go to state 17

state 173

    (76) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA . expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 188
    llamada_funcion                shift and go to state 54

state 174

    (34) declaracion_normal -> RLET ID DOSPUNTOS tipo . IGUAL expresion
    (36) declaracion_normal -> RLET ID DOSPUNTOS tipo .

    IGUAL           shift and go to state 189
    PTCOMA          reduce using rule 36 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)


state 175

    (63) parametro -> ID DOSPUNTOS tipo .

    PARDER          reduce using rule 63 (parametro -> ID DOSPUNTOS tipo .)
    COMA            reduce using rule 63 (parametro -> ID DOSPUNTOS tipo .)


state 176

    (44) funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 190


state 177

    (46) funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . r_break PTCOMA
    (14) instruccion -> . r_continue PTCOMA
    (15) instruccion -> . struct PTCOMA
    (16) instruccion -> . asignacion_struct PTCOMA
    (17) instruccion -> . declaracion_array PTCOMA
    (18) instruccion -> . imprimir
    (19) instruccion -> . declaracion_normal
    (20) instruccion -> . condicional_ifs
    (21) instruccion -> . ciclo_for
    (22) instruccion -> . funcion
    (23) instruccion -> . llamada_funcion
    (24) instruccion -> . r_return
    (25) instruccion -> . asignacion
    (26) instruccion -> . ciclo_while
    (27) instruccion -> . r_break
    (28) instruccion -> . r_continue
    (29) instruccion -> . struct
    (30) instruccion -> . asignacion_struct
    (31) instruccion -> . declaracion_array
    (32) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER
    (34) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> . RLET ID
    (36) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (37) declaracion_normal -> . RLET ID IGUAL expresion
    (72) condicional_ifs -> . RIF condicional_if
    (76) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funcion -> . RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> . RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (69) r_return -> . RRETURN expresion
    (33) asignacion -> . ID IGUAL expresion
    (77) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (70) r_break -> . RBREAK
    (71) r_continue -> . RCONTINUE
    (38) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (39) asignacion_struct -> . ID PUNTO parametros_asignacion_struct IGUAL expresion
    (40) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER
    (42) declaracion_array -> . RLET ID IGUAL CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> . RLET ID IGUAL CORIZQ CORDER

    LLAVEDER        shift and go to state 191
    RCONSOLE        shift and go to state 18
    RLET            shift and go to state 19
    RIF             shift and go to state 21
    RFOR            shift and go to state 22
    RFUNCTION       shift and go to state 23
    ID              shift and go to state 20
    RRETURN         shift and go to state 24
    RWHILE          shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27
    RINTERFACE      shift and go to state 28

    instruccion                    shift and go to state 29
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12
    r_break                        shift and go to state 13
    r_continue                     shift and go to state 14
    struct                         shift and go to state 15
    asignacion_struct              shift and go to state 16
    declaracion_array              shift and go to state 17

state 178

    (45) funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS . tipo LLAVEIZQ instrucciones LLAVEDER
    (78) tipo -> . RSTRING
    (79) tipo -> . RNUMBER
    (80) tipo -> . RBOOLEAN

    RSTRING         shift and go to state 105
    RNUMBER         shift and go to state 106
    RBOOLEAN        shift and go to state 107

    tipo                           shift and go to state 192

state 179

    (47) funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . r_break PTCOMA
    (14) instruccion -> . r_continue PTCOMA
    (15) instruccion -> . struct PTCOMA
    (16) instruccion -> . asignacion_struct PTCOMA
    (17) instruccion -> . declaracion_array PTCOMA
    (18) instruccion -> . imprimir
    (19) instruccion -> . declaracion_normal
    (20) instruccion -> . condicional_ifs
    (21) instruccion -> . ciclo_for
    (22) instruccion -> . funcion
    (23) instruccion -> . llamada_funcion
    (24) instruccion -> . r_return
    (25) instruccion -> . asignacion
    (26) instruccion -> . ciclo_while
    (27) instruccion -> . r_break
    (28) instruccion -> . r_continue
    (29) instruccion -> . struct
    (30) instruccion -> . asignacion_struct
    (31) instruccion -> . declaracion_array
    (32) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER
    (34) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> . RLET ID
    (36) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (37) declaracion_normal -> . RLET ID IGUAL expresion
    (72) condicional_ifs -> . RIF condicional_if
    (76) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funcion -> . RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> . RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (69) r_return -> . RRETURN expresion
    (33) asignacion -> . ID IGUAL expresion
    (77) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (70) r_break -> . RBREAK
    (71) r_continue -> . RCONTINUE
    (38) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (39) asignacion_struct -> . ID PUNTO parametros_asignacion_struct IGUAL expresion
    (40) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER
    (42) declaracion_array -> . RLET ID IGUAL CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> . RLET ID IGUAL CORIZQ CORDER

    RCONSOLE        shift and go to state 18
    RLET            shift and go to state 19
    RIF             shift and go to state 21
    RFOR            shift and go to state 22
    RFUNCTION       shift and go to state 23
    ID              shift and go to state 20
    RRETURN         shift and go to state 24
    RWHILE          shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27
    RINTERFACE      shift and go to state 28

    instrucciones                  shift and go to state 193
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12
    r_break                        shift and go to state 13
    r_continue                     shift and go to state 14
    struct                         shift and go to state 15
    asignacion_struct              shift and go to state 16
    declaracion_array              shift and go to state 17

state 180

    (60) parametros -> parametros COMA parametro .

    PARDER          reduce using rule 60 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 60 (parametros -> parametros COMA parametro .)


state 181

    (62) parametro -> RLET ID DOSPUNTOS . tipo
    (78) tipo -> . RSTRING
    (79) tipo -> . RNUMBER
    (80) tipo -> . RBOOLEAN

    RSTRING         shift and go to state 105
    RNUMBER         shift and go to state 106
    RBOOLEAN        shift and go to state 107

    tipo                           shift and go to state 194

state 182

    (77) ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . r_break PTCOMA
    (14) instruccion -> . r_continue PTCOMA
    (15) instruccion -> . struct PTCOMA
    (16) instruccion -> . asignacion_struct PTCOMA
    (17) instruccion -> . declaracion_array PTCOMA
    (18) instruccion -> . imprimir
    (19) instruccion -> . declaracion_normal
    (20) instruccion -> . condicional_ifs
    (21) instruccion -> . ciclo_for
    (22) instruccion -> . funcion
    (23) instruccion -> . llamada_funcion
    (24) instruccion -> . r_return
    (25) instruccion -> . asignacion
    (26) instruccion -> . ciclo_while
    (27) instruccion -> . r_break
    (28) instruccion -> . r_continue
    (29) instruccion -> . struct
    (30) instruccion -> . asignacion_struct
    (31) instruccion -> . declaracion_array
    (32) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER
    (34) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> . RLET ID
    (36) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (37) declaracion_normal -> . RLET ID IGUAL expresion
    (72) condicional_ifs -> . RIF condicional_if
    (76) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funcion -> . RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> . RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (69) r_return -> . RRETURN expresion
    (33) asignacion -> . ID IGUAL expresion
    (77) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (70) r_break -> . RBREAK
    (71) r_continue -> . RCONTINUE
    (38) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (39) asignacion_struct -> . ID PUNTO parametros_asignacion_struct IGUAL expresion
    (40) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER
    (42) declaracion_array -> . RLET ID IGUAL CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> . RLET ID IGUAL CORIZQ CORDER

    LLAVEDER        shift and go to state 195
    RCONSOLE        shift and go to state 18
    RLET            shift and go to state 19
    RIF             shift and go to state 21
    RFOR            shift and go to state 22
    RFUNCTION       shift and go to state 23
    ID              shift and go to state 20
    RRETURN         shift and go to state 24
    RWHILE          shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27
    RINTERFACE      shift and go to state 28

    instruccion                    shift and go to state 29
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12
    r_break                        shift and go to state 13
    r_continue                     shift and go to state 14
    struct                         shift and go to state 15
    asignacion_struct              shift and go to state 16
    declaracion_array              shift and go to state 17

state 183

    (53) declaracion_struct -> ID DOSPUNTOS tipo . IGUAL expresion
    (55) declaracion_struct -> ID DOSPUNTOS tipo .

    IGUAL           shift and go to state 196
    PTCOMA          reduce using rule 55 (declaracion_struct -> ID DOSPUNTOS tipo .)


state 184

    (56) declaracion_struct -> ID IGUAL expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    PTCOMA          reduce using rule 56 (declaracion_struct -> ID IGUAL expresion .)
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    IGUALDAD        shift and go to state 87
    DESIGUALDAD     shift and go to state 88
    MAYORQ          shift and go to state 89
    MENORQ          shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    MENORIGUAL      shift and go to state 92
    AND             shift and go to state 93
    OR              shift and go to state 94
    POT             shift and go to state 95
    MOD             shift and go to state 96


state 185

    (40) declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada . CORDER
    (65) parametros_llamada -> parametros_llamada . COMA parametro_ll

    CORDER          shift and go to state 197
    COMA            shift and go to state 111


state 186

    (41) declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER .

    PTCOMA          reduce using rule 41 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER .)
    RCONSOLE        reduce using rule 41 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER .)
    RLET            reduce using rule 41 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER .)
    RIF             reduce using rule 41 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER .)
    RFOR            reduce using rule 41 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER .)
    RFUNCTION       reduce using rule 41 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER .)
    ID              reduce using rule 41 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER .)
    RRETURN         reduce using rule 41 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER .)
    RWHILE          reduce using rule 41 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER .)
    RBREAK          reduce using rule 41 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER .)
    RCONTINUE       reduce using rule 41 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER .)
    RINTERFACE      reduce using rule 41 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER .)
    $end            reduce using rule 41 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER .)
    LLAVEDER        reduce using rule 41 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER .)


state 187

    (73) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .
    (74) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER . RELSE LLAVEIZQ instrucciones LLAVEDER
    (75) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER . RELSE RIF condicional_if

    PTCOMA          reduce using rule 73 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RCONSOLE        reduce using rule 73 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RLET            reduce using rule 73 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RIF             reduce using rule 73 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFOR            reduce using rule 73 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFUNCTION       reduce using rule 73 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 73 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RRETURN         reduce using rule 73 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RWHILE          reduce using rule 73 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RBREAK          reduce using rule 73 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RCONTINUE       reduce using rule 73 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RINTERFACE      reduce using rule 73 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 73 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 73 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RELSE           shift and go to state 198


state 188

    (76) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion . PARDER LLAVEIZQ instrucciones LLAVEDER
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    PARDER          shift and go to state 199
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    IGUALDAD        shift and go to state 87
    DESIGUALDAD     shift and go to state 88
    MAYORQ          shift and go to state 89
    MENORQ          shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    MENORIGUAL      shift and go to state 92
    AND             shift and go to state 93
    OR              shift and go to state 94
    POT             shift and go to state 95
    MOD             shift and go to state 96


state 189

    (34) declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 169
    llamada_funcion                shift and go to state 54

state 190

    (44) funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . r_break PTCOMA
    (14) instruccion -> . r_continue PTCOMA
    (15) instruccion -> . struct PTCOMA
    (16) instruccion -> . asignacion_struct PTCOMA
    (17) instruccion -> . declaracion_array PTCOMA
    (18) instruccion -> . imprimir
    (19) instruccion -> . declaracion_normal
    (20) instruccion -> . condicional_ifs
    (21) instruccion -> . ciclo_for
    (22) instruccion -> . funcion
    (23) instruccion -> . llamada_funcion
    (24) instruccion -> . r_return
    (25) instruccion -> . asignacion
    (26) instruccion -> . ciclo_while
    (27) instruccion -> . r_break
    (28) instruccion -> . r_continue
    (29) instruccion -> . struct
    (30) instruccion -> . asignacion_struct
    (31) instruccion -> . declaracion_array
    (32) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER
    (34) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> . RLET ID
    (36) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (37) declaracion_normal -> . RLET ID IGUAL expresion
    (72) condicional_ifs -> . RIF condicional_if
    (76) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funcion -> . RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> . RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (69) r_return -> . RRETURN expresion
    (33) asignacion -> . ID IGUAL expresion
    (77) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (70) r_break -> . RBREAK
    (71) r_continue -> . RCONTINUE
    (38) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (39) asignacion_struct -> . ID PUNTO parametros_asignacion_struct IGUAL expresion
    (40) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER
    (42) declaracion_array -> . RLET ID IGUAL CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> . RLET ID IGUAL CORIZQ CORDER

    RCONSOLE        shift and go to state 18
    RLET            shift and go to state 19
    RIF             shift and go to state 21
    RFOR            shift and go to state 22
    RFUNCTION       shift and go to state 23
    ID              shift and go to state 20
    RRETURN         shift and go to state 24
    RWHILE          shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27
    RINTERFACE      shift and go to state 28

    instrucciones                  shift and go to state 200
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12
    r_break                        shift and go to state 13
    r_continue                     shift and go to state 14
    struct                         shift and go to state 15
    asignacion_struct              shift and go to state 16
    declaracion_array              shift and go to state 17

state 191

    (46) funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    PTCOMA          reduce using rule 46 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RCONSOLE        reduce using rule 46 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RLET            reduce using rule 46 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RIF             reduce using rule 46 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFOR            reduce using rule 46 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFUNCTION       reduce using rule 46 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 46 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RRETURN         reduce using rule 46 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RWHILE          reduce using rule 46 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RBREAK          reduce using rule 46 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RCONTINUE       reduce using rule 46 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RINTERFACE      reduce using rule 46 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 46 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 46 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 192

    (45) funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 201


state 193

    (47) funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . r_break PTCOMA
    (14) instruccion -> . r_continue PTCOMA
    (15) instruccion -> . struct PTCOMA
    (16) instruccion -> . asignacion_struct PTCOMA
    (17) instruccion -> . declaracion_array PTCOMA
    (18) instruccion -> . imprimir
    (19) instruccion -> . declaracion_normal
    (20) instruccion -> . condicional_ifs
    (21) instruccion -> . ciclo_for
    (22) instruccion -> . funcion
    (23) instruccion -> . llamada_funcion
    (24) instruccion -> . r_return
    (25) instruccion -> . asignacion
    (26) instruccion -> . ciclo_while
    (27) instruccion -> . r_break
    (28) instruccion -> . r_continue
    (29) instruccion -> . struct
    (30) instruccion -> . asignacion_struct
    (31) instruccion -> . declaracion_array
    (32) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER
    (34) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> . RLET ID
    (36) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (37) declaracion_normal -> . RLET ID IGUAL expresion
    (72) condicional_ifs -> . RIF condicional_if
    (76) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funcion -> . RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> . RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (69) r_return -> . RRETURN expresion
    (33) asignacion -> . ID IGUAL expresion
    (77) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (70) r_break -> . RBREAK
    (71) r_continue -> . RCONTINUE
    (38) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (39) asignacion_struct -> . ID PUNTO parametros_asignacion_struct IGUAL expresion
    (40) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER
    (42) declaracion_array -> . RLET ID IGUAL CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> . RLET ID IGUAL CORIZQ CORDER

    LLAVEDER        shift and go to state 202
    RCONSOLE        shift and go to state 18
    RLET            shift and go to state 19
    RIF             shift and go to state 21
    RFOR            shift and go to state 22
    RFUNCTION       shift and go to state 23
    ID              shift and go to state 20
    RRETURN         shift and go to state 24
    RWHILE          shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27
    RINTERFACE      shift and go to state 28

    instruccion                    shift and go to state 29
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12
    r_break                        shift and go to state 13
    r_continue                     shift and go to state 14
    struct                         shift and go to state 15
    asignacion_struct              shift and go to state 16
    declaracion_array              shift and go to state 17

state 194

    (62) parametro -> RLET ID DOSPUNTOS tipo .

    PARDER          reduce using rule 62 (parametro -> RLET ID DOSPUNTOS tipo .)
    COMA            reduce using rule 62 (parametro -> RLET ID DOSPUNTOS tipo .)


state 195

    (77) ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .

    PTCOMA          reduce using rule 77 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RCONSOLE        reduce using rule 77 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RLET            reduce using rule 77 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RIF             reduce using rule 77 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFOR            reduce using rule 77 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFUNCTION       reduce using rule 77 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 77 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RRETURN         reduce using rule 77 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RWHILE          reduce using rule 77 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RBREAK          reduce using rule 77 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RCONTINUE       reduce using rule 77 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RINTERFACE      reduce using rule 77 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 77 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 77 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 196

    (53) declaracion_struct -> ID DOSPUNTOS tipo IGUAL . expresion
    (68) expresion -> . llamada_funcion
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIV expresion
    (85) expresion -> . expresion IGUALDAD expresion
    (86) expresion -> . expresion DESIGUALDAD expresion
    (87) expresion -> . expresion MAYORQ expresion
    (88) expresion -> . expresion MENORQ expresion
    (89) expresion -> . expresion MAYORIGUAL expresion
    (90) expresion -> . expresion MENORIGUAL expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . expresion OR expresion
    (93) expresion -> . expresion POT expresion
    (94) expresion -> . expresion MOD expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . NOT expresion
    (97) expresion -> . PARIZQ expresion PARDER
    (98) expresion -> . expresion MAS MAS
    (99) expresion -> . expresion MENOS MENOS
    (100) expresion -> . ID PUNTO parametros_asignacion_struct
    (101) expresion -> . ID
    (102) expresion -> . RNULL
    (103) expresion -> . RANY
    (104) expresion -> . ENTERO
    (105) expresion -> . DECIMAL
    (106) expresion -> . CADENA
    (107) expresion -> . RTRUE
    (108) expresion -> . RFALSE
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 57
    ID              shift and go to state 58
    RNULL           shift and go to state 59
    RANY            shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    RTRUE           shift and go to state 64
    RFALSE          shift and go to state 65

    expresion                      shift and go to state 203
    llamada_funcion                shift and go to state 54

state 197

    (40) declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER .

    PTCOMA          reduce using rule 40 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER .)
    RCONSOLE        reduce using rule 40 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER .)
    RLET            reduce using rule 40 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER .)
    RIF             reduce using rule 40 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER .)
    RFOR            reduce using rule 40 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER .)
    RFUNCTION       reduce using rule 40 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER .)
    ID              reduce using rule 40 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER .)
    RRETURN         reduce using rule 40 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER .)
    RWHILE          reduce using rule 40 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER .)
    RBREAK          reduce using rule 40 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER .)
    RCONTINUE       reduce using rule 40 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER .)
    RINTERFACE      reduce using rule 40 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER .)
    $end            reduce using rule 40 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER .)
    LLAVEDER        reduce using rule 40 (declaracion_array -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER .)


state 198

    (74) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE . LLAVEIZQ instrucciones LLAVEDER
    (75) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE . RIF condicional_if

    LLAVEIZQ        shift and go to state 204
    RIF             shift and go to state 205


state 199

    (76) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 206


state 200

    (44) funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . r_break PTCOMA
    (14) instruccion -> . r_continue PTCOMA
    (15) instruccion -> . struct PTCOMA
    (16) instruccion -> . asignacion_struct PTCOMA
    (17) instruccion -> . declaracion_array PTCOMA
    (18) instruccion -> . imprimir
    (19) instruccion -> . declaracion_normal
    (20) instruccion -> . condicional_ifs
    (21) instruccion -> . ciclo_for
    (22) instruccion -> . funcion
    (23) instruccion -> . llamada_funcion
    (24) instruccion -> . r_return
    (25) instruccion -> . asignacion
    (26) instruccion -> . ciclo_while
    (27) instruccion -> . r_break
    (28) instruccion -> . r_continue
    (29) instruccion -> . struct
    (30) instruccion -> . asignacion_struct
    (31) instruccion -> . declaracion_array
    (32) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER
    (34) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> . RLET ID
    (36) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (37) declaracion_normal -> . RLET ID IGUAL expresion
    (72) condicional_ifs -> . RIF condicional_if
    (76) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funcion -> . RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> . RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (69) r_return -> . RRETURN expresion
    (33) asignacion -> . ID IGUAL expresion
    (77) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (70) r_break -> . RBREAK
    (71) r_continue -> . RCONTINUE
    (38) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (39) asignacion_struct -> . ID PUNTO parametros_asignacion_struct IGUAL expresion
    (40) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER
    (42) declaracion_array -> . RLET ID IGUAL CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> . RLET ID IGUAL CORIZQ CORDER

    LLAVEDER        shift and go to state 207
    RCONSOLE        shift and go to state 18
    RLET            shift and go to state 19
    RIF             shift and go to state 21
    RFOR            shift and go to state 22
    RFUNCTION       shift and go to state 23
    ID              shift and go to state 20
    RRETURN         shift and go to state 24
    RWHILE          shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27
    RINTERFACE      shift and go to state 28

    instruccion                    shift and go to state 29
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12
    r_break                        shift and go to state 13
    r_continue                     shift and go to state 14
    struct                         shift and go to state 15
    asignacion_struct              shift and go to state 16
    declaracion_array              shift and go to state 17

state 201

    (45) funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . r_break PTCOMA
    (14) instruccion -> . r_continue PTCOMA
    (15) instruccion -> . struct PTCOMA
    (16) instruccion -> . asignacion_struct PTCOMA
    (17) instruccion -> . declaracion_array PTCOMA
    (18) instruccion -> . imprimir
    (19) instruccion -> . declaracion_normal
    (20) instruccion -> . condicional_ifs
    (21) instruccion -> . ciclo_for
    (22) instruccion -> . funcion
    (23) instruccion -> . llamada_funcion
    (24) instruccion -> . r_return
    (25) instruccion -> . asignacion
    (26) instruccion -> . ciclo_while
    (27) instruccion -> . r_break
    (28) instruccion -> . r_continue
    (29) instruccion -> . struct
    (30) instruccion -> . asignacion_struct
    (31) instruccion -> . declaracion_array
    (32) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER
    (34) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> . RLET ID
    (36) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (37) declaracion_normal -> . RLET ID IGUAL expresion
    (72) condicional_ifs -> . RIF condicional_if
    (76) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funcion -> . RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> . RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (69) r_return -> . RRETURN expresion
    (33) asignacion -> . ID IGUAL expresion
    (77) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (70) r_break -> . RBREAK
    (71) r_continue -> . RCONTINUE
    (38) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (39) asignacion_struct -> . ID PUNTO parametros_asignacion_struct IGUAL expresion
    (40) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER
    (42) declaracion_array -> . RLET ID IGUAL CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> . RLET ID IGUAL CORIZQ CORDER

    RCONSOLE        shift and go to state 18
    RLET            shift and go to state 19
    RIF             shift and go to state 21
    RFOR            shift and go to state 22
    RFUNCTION       shift and go to state 23
    ID              shift and go to state 20
    RRETURN         shift and go to state 24
    RWHILE          shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27
    RINTERFACE      shift and go to state 28

    instrucciones                  shift and go to state 208
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12
    r_break                        shift and go to state 13
    r_continue                     shift and go to state 14
    struct                         shift and go to state 15
    asignacion_struct              shift and go to state 16
    declaracion_array              shift and go to state 17

state 202

    (47) funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .

    PTCOMA          reduce using rule 47 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RCONSOLE        reduce using rule 47 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RLET            reduce using rule 47 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RIF             reduce using rule 47 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFOR            reduce using rule 47 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFUNCTION       reduce using rule 47 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 47 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RRETURN         reduce using rule 47 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RWHILE          reduce using rule 47 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RBREAK          reduce using rule 47 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RCONTINUE       reduce using rule 47 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RINTERFACE      reduce using rule 47 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 47 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 47 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 203

    (53) declaracion_struct -> ID DOSPUNTOS tipo IGUAL expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIV expresion
    (85) expresion -> expresion . IGUALDAD expresion
    (86) expresion -> expresion . DESIGUALDAD expresion
    (87) expresion -> expresion . MAYORQ expresion
    (88) expresion -> expresion . MENORQ expresion
    (89) expresion -> expresion . MAYORIGUAL expresion
    (90) expresion -> expresion . MENORIGUAL expresion
    (91) expresion -> expresion . AND expresion
    (92) expresion -> expresion . OR expresion
    (93) expresion -> expresion . POT expresion
    (94) expresion -> expresion . MOD expresion
    (98) expresion -> expresion . MAS MAS
    (99) expresion -> expresion . MENOS MENOS

    PTCOMA          reduce using rule 53 (declaracion_struct -> ID DOSPUNTOS tipo IGUAL expresion .)
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIV             shift and go to state 86
    IGUALDAD        shift and go to state 87
    DESIGUALDAD     shift and go to state 88
    MAYORQ          shift and go to state 89
    MENORQ          shift and go to state 90
    MAYORIGUAL      shift and go to state 91
    MENORIGUAL      shift and go to state 92
    AND             shift and go to state 93
    OR              shift and go to state 94
    POT             shift and go to state 95
    MOD             shift and go to state 96


state 204

    (74) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . r_break PTCOMA
    (14) instruccion -> . r_continue PTCOMA
    (15) instruccion -> . struct PTCOMA
    (16) instruccion -> . asignacion_struct PTCOMA
    (17) instruccion -> . declaracion_array PTCOMA
    (18) instruccion -> . imprimir
    (19) instruccion -> . declaracion_normal
    (20) instruccion -> . condicional_ifs
    (21) instruccion -> . ciclo_for
    (22) instruccion -> . funcion
    (23) instruccion -> . llamada_funcion
    (24) instruccion -> . r_return
    (25) instruccion -> . asignacion
    (26) instruccion -> . ciclo_while
    (27) instruccion -> . r_break
    (28) instruccion -> . r_continue
    (29) instruccion -> . struct
    (30) instruccion -> . asignacion_struct
    (31) instruccion -> . declaracion_array
    (32) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER
    (34) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> . RLET ID
    (36) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (37) declaracion_normal -> . RLET ID IGUAL expresion
    (72) condicional_ifs -> . RIF condicional_if
    (76) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funcion -> . RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> . RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (69) r_return -> . RRETURN expresion
    (33) asignacion -> . ID IGUAL expresion
    (77) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (70) r_break -> . RBREAK
    (71) r_continue -> . RCONTINUE
    (38) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (39) asignacion_struct -> . ID PUNTO parametros_asignacion_struct IGUAL expresion
    (40) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER
    (42) declaracion_array -> . RLET ID IGUAL CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> . RLET ID IGUAL CORIZQ CORDER

    RCONSOLE        shift and go to state 18
    RLET            shift and go to state 19
    RIF             shift and go to state 21
    RFOR            shift and go to state 22
    RFUNCTION       shift and go to state 23
    ID              shift and go to state 20
    RRETURN         shift and go to state 24
    RWHILE          shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27
    RINTERFACE      shift and go to state 28

    instrucciones                  shift and go to state 209
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12
    r_break                        shift and go to state 13
    r_continue                     shift and go to state 14
    struct                         shift and go to state 15
    asignacion_struct              shift and go to state 16
    declaracion_array              shift and go to state 17

state 205

    (75) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF . condicional_if
    (73) condicional_if -> . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (74) condicional_if -> . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (75) condicional_if -> . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if

    PARIZQ          shift and go to state 50

    condicional_if                 shift and go to state 210

state 206

    (76) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . r_break PTCOMA
    (14) instruccion -> . r_continue PTCOMA
    (15) instruccion -> . struct PTCOMA
    (16) instruccion -> . asignacion_struct PTCOMA
    (17) instruccion -> . declaracion_array PTCOMA
    (18) instruccion -> . imprimir
    (19) instruccion -> . declaracion_normal
    (20) instruccion -> . condicional_ifs
    (21) instruccion -> . ciclo_for
    (22) instruccion -> . funcion
    (23) instruccion -> . llamada_funcion
    (24) instruccion -> . r_return
    (25) instruccion -> . asignacion
    (26) instruccion -> . ciclo_while
    (27) instruccion -> . r_break
    (28) instruccion -> . r_continue
    (29) instruccion -> . struct
    (30) instruccion -> . asignacion_struct
    (31) instruccion -> . declaracion_array
    (32) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER
    (34) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> . RLET ID
    (36) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (37) declaracion_normal -> . RLET ID IGUAL expresion
    (72) condicional_ifs -> . RIF condicional_if
    (76) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funcion -> . RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> . RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (69) r_return -> . RRETURN expresion
    (33) asignacion -> . ID IGUAL expresion
    (77) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (70) r_break -> . RBREAK
    (71) r_continue -> . RCONTINUE
    (38) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (39) asignacion_struct -> . ID PUNTO parametros_asignacion_struct IGUAL expresion
    (40) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER
    (42) declaracion_array -> . RLET ID IGUAL CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> . RLET ID IGUAL CORIZQ CORDER

    RCONSOLE        shift and go to state 18
    RLET            shift and go to state 19
    RIF             shift and go to state 21
    RFOR            shift and go to state 22
    RFUNCTION       shift and go to state 23
    ID              shift and go to state 20
    RRETURN         shift and go to state 24
    RWHILE          shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27
    RINTERFACE      shift and go to state 28

    declaracion_normal             shift and go to state 5
    instrucciones                  shift and go to state 211
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12
    r_break                        shift and go to state 13
    r_continue                     shift and go to state 14
    struct                         shift and go to state 15
    asignacion_struct              shift and go to state 16
    declaracion_array              shift and go to state 17

state 207

    (44) funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .

    PTCOMA          reduce using rule 44 (funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    RCONSOLE        reduce using rule 44 (funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    RLET            reduce using rule 44 (funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    RIF             reduce using rule 44 (funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    RFOR            reduce using rule 44 (funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    RFUNCTION       reduce using rule 44 (funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 44 (funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    RRETURN         reduce using rule 44 (funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    RWHILE          reduce using rule 44 (funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    RBREAK          reduce using rule 44 (funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    RCONTINUE       reduce using rule 44 (funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    RINTERFACE      reduce using rule 44 (funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 44 (funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 44 (funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)


state 208

    (45) funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . r_break PTCOMA
    (14) instruccion -> . r_continue PTCOMA
    (15) instruccion -> . struct PTCOMA
    (16) instruccion -> . asignacion_struct PTCOMA
    (17) instruccion -> . declaracion_array PTCOMA
    (18) instruccion -> . imprimir
    (19) instruccion -> . declaracion_normal
    (20) instruccion -> . condicional_ifs
    (21) instruccion -> . ciclo_for
    (22) instruccion -> . funcion
    (23) instruccion -> . llamada_funcion
    (24) instruccion -> . r_return
    (25) instruccion -> . asignacion
    (26) instruccion -> . ciclo_while
    (27) instruccion -> . r_break
    (28) instruccion -> . r_continue
    (29) instruccion -> . struct
    (30) instruccion -> . asignacion_struct
    (31) instruccion -> . declaracion_array
    (32) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER
    (34) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> . RLET ID
    (36) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (37) declaracion_normal -> . RLET ID IGUAL expresion
    (72) condicional_ifs -> . RIF condicional_if
    (76) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funcion -> . RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> . RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (69) r_return -> . RRETURN expresion
    (33) asignacion -> . ID IGUAL expresion
    (77) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (70) r_break -> . RBREAK
    (71) r_continue -> . RCONTINUE
    (38) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (39) asignacion_struct -> . ID PUNTO parametros_asignacion_struct IGUAL expresion
    (40) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER
    (42) declaracion_array -> . RLET ID IGUAL CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> . RLET ID IGUAL CORIZQ CORDER

    LLAVEDER        shift and go to state 212
    RCONSOLE        shift and go to state 18
    RLET            shift and go to state 19
    RIF             shift and go to state 21
    RFOR            shift and go to state 22
    RFUNCTION       shift and go to state 23
    ID              shift and go to state 20
    RRETURN         shift and go to state 24
    RWHILE          shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27
    RINTERFACE      shift and go to state 28

    instruccion                    shift and go to state 29
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12
    r_break                        shift and go to state 13
    r_continue                     shift and go to state 14
    struct                         shift and go to state 15
    asignacion_struct              shift and go to state 16
    declaracion_array              shift and go to state 17

state 209

    (74) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . r_break PTCOMA
    (14) instruccion -> . r_continue PTCOMA
    (15) instruccion -> . struct PTCOMA
    (16) instruccion -> . asignacion_struct PTCOMA
    (17) instruccion -> . declaracion_array PTCOMA
    (18) instruccion -> . imprimir
    (19) instruccion -> . declaracion_normal
    (20) instruccion -> . condicional_ifs
    (21) instruccion -> . ciclo_for
    (22) instruccion -> . funcion
    (23) instruccion -> . llamada_funcion
    (24) instruccion -> . r_return
    (25) instruccion -> . asignacion
    (26) instruccion -> . ciclo_while
    (27) instruccion -> . r_break
    (28) instruccion -> . r_continue
    (29) instruccion -> . struct
    (30) instruccion -> . asignacion_struct
    (31) instruccion -> . declaracion_array
    (32) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER
    (34) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> . RLET ID
    (36) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (37) declaracion_normal -> . RLET ID IGUAL expresion
    (72) condicional_ifs -> . RIF condicional_if
    (76) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funcion -> . RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> . RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (69) r_return -> . RRETURN expresion
    (33) asignacion -> . ID IGUAL expresion
    (77) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (70) r_break -> . RBREAK
    (71) r_continue -> . RCONTINUE
    (38) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (39) asignacion_struct -> . ID PUNTO parametros_asignacion_struct IGUAL expresion
    (40) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER
    (42) declaracion_array -> . RLET ID IGUAL CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> . RLET ID IGUAL CORIZQ CORDER

    LLAVEDER        shift and go to state 213
    RCONSOLE        shift and go to state 18
    RLET            shift and go to state 19
    RIF             shift and go to state 21
    RFOR            shift and go to state 22
    RFUNCTION       shift and go to state 23
    ID              shift and go to state 20
    RRETURN         shift and go to state 24
    RWHILE          shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27
    RINTERFACE      shift and go to state 28

    instruccion                    shift and go to state 29
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12
    r_break                        shift and go to state 13
    r_continue                     shift and go to state 14
    struct                         shift and go to state 15
    asignacion_struct              shift and go to state 16
    declaracion_array              shift and go to state 17

state 210

    (75) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .

    PTCOMA          reduce using rule 75 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RCONSOLE        reduce using rule 75 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RLET            reduce using rule 75 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RIF             reduce using rule 75 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RFOR            reduce using rule 75 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RFUNCTION       reduce using rule 75 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    ID              reduce using rule 75 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RRETURN         reduce using rule 75 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RWHILE          reduce using rule 75 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RBREAK          reduce using rule 75 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RCONTINUE       reduce using rule 75 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RINTERFACE      reduce using rule 75 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    $end            reduce using rule 75 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    LLAVEDER        reduce using rule 75 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)


state 211

    (76) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . r_break PTCOMA
    (14) instruccion -> . r_continue PTCOMA
    (15) instruccion -> . struct PTCOMA
    (16) instruccion -> . asignacion_struct PTCOMA
    (17) instruccion -> . declaracion_array PTCOMA
    (18) instruccion -> . imprimir
    (19) instruccion -> . declaracion_normal
    (20) instruccion -> . condicional_ifs
    (21) instruccion -> . ciclo_for
    (22) instruccion -> . funcion
    (23) instruccion -> . llamada_funcion
    (24) instruccion -> . r_return
    (25) instruccion -> . asignacion
    (26) instruccion -> . ciclo_while
    (27) instruccion -> . r_break
    (28) instruccion -> . r_continue
    (29) instruccion -> . struct
    (30) instruccion -> . asignacion_struct
    (31) instruccion -> . declaracion_array
    (32) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER
    (34) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) declaracion_normal -> . RLET ID
    (36) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (37) declaracion_normal -> . RLET ID IGUAL expresion
    (72) condicional_ifs -> . RIF condicional_if
    (76) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funcion -> . RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (45) funcion -> . RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER
    (46) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funcion -> . ID PARIZQ PARDER
    (49) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (69) r_return -> . RRETURN expresion
    (33) asignacion -> . ID IGUAL expresion
    (77) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (70) r_break -> . RBREAK
    (71) r_continue -> . RCONTINUE
    (38) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (39) asignacion_struct -> . ID PUNTO parametros_asignacion_struct IGUAL expresion
    (40) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER
    (41) declaracion_array -> . RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER
    (42) declaracion_array -> . RLET ID IGUAL CORIZQ parametros_llamada CORDER
    (43) declaracion_array -> . RLET ID IGUAL CORIZQ CORDER

    LLAVEDER        shift and go to state 214
    RCONSOLE        shift and go to state 18
    RLET            shift and go to state 19
    RIF             shift and go to state 21
    RFOR            shift and go to state 22
    RFUNCTION       shift and go to state 23
    ID              shift and go to state 20
    RRETURN         shift and go to state 24
    RWHILE          shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27
    RINTERFACE      shift and go to state 28

    declaracion_normal             shift and go to state 5
    instruccion                    shift and go to state 29
    imprimir                       shift and go to state 4
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12
    r_break                        shift and go to state 13
    r_continue                     shift and go to state 14
    struct                         shift and go to state 15
    asignacion_struct              shift and go to state 16
    declaracion_array              shift and go to state 17

state 212

    (45) funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .

    PTCOMA          reduce using rule 45 (funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    RCONSOLE        reduce using rule 45 (funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    RLET            reduce using rule 45 (funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    RIF             reduce using rule 45 (funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    RFOR            reduce using rule 45 (funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    RFUNCTION       reduce using rule 45 (funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 45 (funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    RRETURN         reduce using rule 45 (funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    RWHILE          reduce using rule 45 (funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    RBREAK          reduce using rule 45 (funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    RCONTINUE       reduce using rule 45 (funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    RINTERFACE      reduce using rule 45 (funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 45 (funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 45 (funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER .)


state 213

    (74) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .

    PTCOMA          reduce using rule 74 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RCONSOLE        reduce using rule 74 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RLET            reduce using rule 74 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RIF             reduce using rule 74 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RFOR            reduce using rule 74 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RFUNCTION       reduce using rule 74 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 74 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RRETURN         reduce using rule 74 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RWHILE          reduce using rule 74 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RBREAK          reduce using rule 74 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RCONTINUE       reduce using rule 74 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RINTERFACE      reduce using rule 74 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 74 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 74 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)


state 214

    (76) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .

    PTCOMA          reduce using rule 76 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RCONSOLE        reduce using rule 76 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RLET            reduce using rule 76 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RIF             reduce using rule 76 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFOR            reduce using rule 76 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFUNCTION       reduce using rule 76 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 76 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RRETURN         reduce using rule 76 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RWHILE          reduce using rule 76 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RBREAK          reduce using rule 76 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RCONTINUE       reduce using rule 76 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RINTERFACE      reduce using rule 76 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 76 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 76 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)

