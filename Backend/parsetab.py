
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightUNOTleftIGUALDADDESIGUALDADleftMAYORQMENORQMAYORIGUALMENORIGUALleftMASMENOSCOMAleftPORDIVMODleftPOTleftPARIZQPARDERrightUMENOSAND CADENA COMA CORDER CORIZQ DECIMAL DESIGUALDAD DIV DOSPUNTOS ENTERO ID IGUAL IGUALDAD LLAVEDER LLAVEIZQ MAS MAYORIGUAL MAYORQ MENORIGUAL MENORQ MENOS MOD NOT OR PARDER PARIZQ POR POT PTCOMA PUNTO RANY RBOOLEAN RBREAK RCONCAT RCONSOLE RCONTINUE RELSE RFALSE RFOR RFUNCTION RIF RINTERFACE RLET RLOG RNULL RNUMBER ROF RRETURN RSPLIT RSTRING RTRUE RVOID RWHILEinit : instruccionesinstrucciones    : instrucciones instruccioninstrucciones : instruccioninstruccion : imprimir PTCOMA\n                    | declaracion_normal PTCOMA\n                    | condicional_ifs PTCOMA\n                    | ciclo_for PTCOMA\n                    | funcion PTCOMA\n                    | llamada_funcion PTCOMA\n                    | r_return PTCOMA\n                    | asignacion PTCOMA\n                    | ciclo_while PTCOMA\n                    | r_break PTCOMA\n                    | r_continue PTCOMA\n                    | struct PTCOMA\n                    | asignacion_struct PTCOMA\n                    | asignacion_array PTCOMA\n                    instruccion : imprimir\n                    | declaracion_normal\n                    | condicional_ifs\n                    | ciclo_for\n                    | funcion\n                    | llamada_funcion\n                    | r_return\n                    | asignacion\n                    | ciclo_while\n                    | r_break\n                    | r_continue\n                    | struct\n                    | asignacion_struct\n                    | asignacion_array\n                    imprimir : RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDERasignacion : ID IGUAL expresiondeclaracion_normal : RLET ID DOSPUNTOS tipo IGUAL expresion\n                            | RLET ID\n                            | RLET ID DOSPUNTOS tipo\n                            | RLET ID IGUAL expresion\n                            struct : RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDERasignacion_struct : ID PUNTO parametros_asignacion_struct IGUAL expresiondeclaracion_normal : RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER\n                            | RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER\n                            | RLET ID IGUAL CORIZQ parametros_llamada CORDER\n                            | RLET ID IGUAL CORIZQ CORDER\n                            asignacion_array : ID parametros_array IGUAL expresionfuncion : RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER\n               | RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER\n               | RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER\n               | RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER\n               llamada_funcion : ID PARIZQ PARDER\n                       | ID PARIZQ parametros_llamada PARDERparametros_array : parametros_array CORIZQ arrays_1 CORDERparametros_array : CORIZQ arrays_1 CORDERarrays_1 : expresionexpresion : ID parametros_arrayexpresion : CORIZQ DOSPUNTOS CORDERexpresion : CORIZQ parametros_llamada CORDERexpresion : CORIZQ expresion DOSPUNTOS expresion CORDERparametros_struct : parametros_struct params_structparametros_struct : params_structparams_struct : declaracion_struct PTCOMAdeclaracion_struct : ID DOSPUNTOS tipo IGUAL expresion\n                       | ID \n                       | ID DOSPUNTOS tipo\n                       | ID IGUAL expresion\n                       parametros_asignacion_struct : parametros_asignacion_struct PUNTO asignacion_struct_paramparametros_asignacion_struct : asignacion_struct_paramasignacion_struct_param : IDparametros : parametros COMA parametroparametros : parametroparametro : RLET ID DOSPUNTOS tipo  \n                | ID DOSPUNTOS tipo\n                | ID\n                | RLET ID DOSPUNTOS tipo CORIZQ CORDER\n                | ID DOSPUNTOS tipo CORIZQ CORDER\n                parametros_llamada : parametros_llamada COMA parametro_llparametros_llamada : parametro_llparametro_ll : expresionexpresion : llamada_funcionr_return : RRETURN expresionr_break : RBREAKr_continue : RCONTINUEcondicional_ifs : RIF condicional_ifcondicional_if : PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDERcondicional_if : PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDERcondicional_if : PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_ifciclo_for : RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER\n                | RFOR PARIZQ declaracion_normal ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER    \n    ciclo_while : RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDERtipo : RSTRING\n            | RNUMBER\n            | RBOOLEAN\n            | RANY\n            expresion : expresion MAS expresion\n                | expresion MENOS expresion\n                | expresion POR expresion\n                | expresion DIV expresion\n                | expresion IGUALDAD expresion\n                | expresion DESIGUALDAD expresion\n                | expresion MAYORQ expresion\n                | expresion MENORQ expresion\n                | expresion MAYORIGUAL expresion\n                | expresion MENORIGUAL expresion\n                | expresion AND expresion\n                | expresion OR expresion\n                | expresion POT expresion\n                | expresion MOD expresion\n                expresion : MENOS expresion %prec UMENOS\n                | NOT expresion %prec UNOTexpresion : PARIZQ expresion PARDERexpresion : expresion MAS MAS\n                | expresion MENOS MENOSexpresion : ID PUNTO parametros_asignacion_structexpresion : IDexpresion : RNULLexpresion : RANYexpresion : ENTEROexpresion : DECIMALexpresion : CADENAexpresion : RTRUE\n                | RFALSE'
    
_lr_action_items = {'RCONSOLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,51,55,56,58,62,63,64,65,66,67,68,74,78,79,81,103,108,109,114,115,116,117,118,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,165,167,168,169,170,175,180,183,186,187,189,190,195,197,200,201,205,206,208,210,211,213,215,217,220,222,223,224,227,229,230,231,232,234,235,236,237,238,239,],[18,18,-3,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-80,-81,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-35,-82,-79,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,-33,-67,-66,-54,-107,-108,-36,-89,-90,-91,-92,-37,-50,-44,-52,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-112,-55,-56,-109,-43,-65,-39,-51,18,18,18,-38,-32,-34,-42,18,18,18,-57,18,-41,-83,18,18,-47,18,-88,-40,18,18,18,-48,18,18,-87,-45,18,18,-85,18,-46,-84,-86,]),'RLET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,51,53,55,56,58,62,63,64,65,66,67,68,74,78,79,81,88,103,108,109,114,115,116,117,118,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,165,167,168,169,170,175,177,180,183,186,187,189,190,195,197,200,201,205,206,208,210,211,213,215,217,220,222,223,224,227,229,230,231,232,234,235,236,237,238,239,],[19,19,-3,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-80,-81,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-35,-82,19,-79,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,-33,-67,-66,135,-54,-107,-108,-36,-89,-90,-91,-92,-37,-50,-44,-52,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-112,-55,-56,-109,-43,-65,-39,-51,19,19,135,19,-38,-32,-34,-42,19,19,19,-57,19,-41,-83,19,19,-47,19,-88,-40,19,19,19,-48,19,19,-87,-45,19,19,-85,19,-46,-84,-86,]),'RIF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,51,55,56,58,62,63,64,65,66,67,68,74,78,79,81,103,108,109,114,115,116,117,118,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,165,167,168,169,170,175,180,183,186,187,189,190,195,197,200,201,205,206,208,210,211,213,215,217,218,220,222,223,224,227,229,230,231,232,234,235,236,237,238,239,],[21,21,-3,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-80,-81,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-35,-82,-79,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,-33,-67,-66,-54,-107,-108,-36,-89,-90,-91,-92,-37,-50,-44,-52,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-112,-55,-56,-109,-43,-65,-39,-51,21,21,21,-38,-32,-34,-42,21,21,21,-57,21,-41,-83,21,21,-47,21,-88,-40,228,21,21,21,-48,21,21,-87,-45,21,21,-85,21,-46,-84,-86,]),'RFOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,51,55,56,58,62,63,64,65,66,67,68,74,78,79,81,103,108,109,114,115,116,117,118,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,165,167,168,169,170,175,180,183,186,187,189,190,195,197,200,201,205,206,208,210,211,213,215,217,220,222,223,224,227,229,230,231,232,234,235,236,237,238,239,],[22,22,-3,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-80,-81,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-35,-82,-79,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,-33,-67,-66,-54,-107,-108,-36,-89,-90,-91,-92,-37,-50,-44,-52,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-112,-55,-56,-109,-43,-65,-39,-51,22,22,22,-38,-32,-34,-42,22,22,22,-57,22,-41,-83,22,22,-47,22,-88,-40,22,22,22,-48,22,22,-87,-45,22,22,-85,22,-46,-84,-86,]),'RFUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,51,55,56,58,62,63,64,65,66,67,68,74,78,79,81,103,108,109,114,115,116,117,118,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,165,167,168,169,170,175,180,183,186,187,189,190,195,197,200,201,205,206,208,210,211,213,215,217,220,222,223,224,227,229,230,231,232,234,235,236,237,238,239,],[23,23,-3,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-80,-81,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-35,-82,-79,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,-33,-67,-66,-54,-107,-108,-36,-89,-90,-91,-92,-37,-50,-44,-52,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-112,-55,-56,-109,-43,-65,-39,-51,23,23,23,-38,-32,-34,-42,23,23,23,-57,23,-41,-83,23,23,-47,23,-88,-40,23,23,23,-48,23,23,-87,-45,23,23,-85,23,-46,-84,-86,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,50,51,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,78,79,81,82,83,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,130,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,160,163,165,167,168,169,170,175,177,180,182,183,184,185,186,187,188,189,190,191,195,197,200,201,205,206,208,210,211,213,215,216,217,220,222,223,224,227,229,230,231,232,234,235,236,237,238,239,],[20,20,-3,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,45,54,56,-80,-81,70,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-35,56,56,79,56,-82,56,-79,-113,56,-78,56,56,56,-114,-115,-116,-117,-118,-119,-120,56,56,-49,-33,-67,-66,56,56,131,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-54,79,-107,-108,158,56,-36,-89,-90,-91,-92,-37,56,-50,56,79,56,-44,-52,56,56,178,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-112,-55,-56,56,-109,158,-59,56,-43,-65,-39,-51,20,20,131,20,56,-38,-58,-60,-32,-34,56,-42,20,56,20,20,-57,20,-41,-83,20,20,-47,20,-88,56,-40,20,20,20,-48,20,20,-87,-45,20,20,-85,20,-46,-84,-86,]),'RRETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,51,55,56,58,62,63,64,65,66,67,68,74,78,79,81,103,108,109,114,115,116,117,118,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,165,167,168,169,170,175,180,183,186,187,189,190,195,197,200,201,205,206,208,210,211,213,215,217,220,222,223,224,227,229,230,231,232,234,235,236,237,238,239,],[24,24,-3,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-80,-81,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-35,-82,-79,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,-33,-67,-66,-54,-107,-108,-36,-89,-90,-91,-92,-37,-50,-44,-52,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-112,-55,-56,-109,-43,-65,-39,-51,24,24,24,-38,-32,-34,-42,24,24,24,-57,24,-41,-83,24,24,-47,24,-88,-40,24,24,24,-48,24,24,-87,-45,24,24,-85,24,-46,-84,-86,]),'RWHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,51,55,56,58,62,63,64,65,66,67,68,74,78,79,81,103,108,109,114,115,116,117,118,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,165,167,168,169,170,175,180,183,186,187,189,190,195,197,200,201,205,206,208,210,211,213,215,217,220,222,223,224,227,229,230,231,232,234,235,236,237,238,239,],[25,25,-3,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-80,-81,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-35,-82,-79,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,-33,-67,-66,-54,-107,-108,-36,-89,-90,-91,-92,-37,-50,-44,-52,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-112,-55,-56,-109,-43,-65,-39,-51,25,25,25,-38,-32,-34,-42,25,25,25,-57,25,-41,-83,25,25,-47,25,-88,-40,25,25,25,-48,25,25,-87,-45,25,25,-85,25,-46,-84,-86,]),'RBREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,51,55,56,58,62,63,64,65,66,67,68,74,78,79,81,103,108,109,114,115,116,117,118,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,165,167,168,169,170,175,180,183,186,187,189,190,195,197,200,201,205,206,208,210,211,213,215,217,220,222,223,224,227,229,230,231,232,234,235,236,237,238,239,],[26,26,-3,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-80,-81,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-35,-82,-79,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,-33,-67,-66,-54,-107,-108,-36,-89,-90,-91,-92,-37,-50,-44,-52,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-112,-55,-56,-109,-43,-65,-39,-51,26,26,26,-38,-32,-34,-42,26,26,26,-57,26,-41,-83,26,26,-47,26,-88,-40,26,26,26,-48,26,26,-87,-45,26,26,-85,26,-46,-84,-86,]),'RCONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,51,55,56,58,62,63,64,65,66,67,68,74,78,79,81,103,108,109,114,115,116,117,118,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,165,167,168,169,170,175,180,183,186,187,189,190,195,197,200,201,205,206,208,210,211,213,215,217,220,222,223,224,227,229,230,231,232,234,235,236,237,238,239,],[27,27,-3,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-80,-81,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-35,-82,-79,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,-33,-67,-66,-54,-107,-108,-36,-89,-90,-91,-92,-37,-50,-44,-52,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-112,-55,-56,-109,-43,-65,-39,-51,27,27,27,-38,-32,-34,-42,27,27,27,-57,27,-41,-83,27,27,-47,27,-88,-40,27,27,27,-48,27,27,-87,-45,27,27,-85,27,-46,-84,-86,]),'RINTERFACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,51,55,56,58,62,63,64,65,66,67,68,74,78,79,81,103,108,109,114,115,116,117,118,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,165,167,168,169,170,175,180,183,186,187,189,190,195,197,200,201,205,206,208,210,211,213,215,217,220,222,223,224,227,229,230,231,232,234,235,236,237,238,239,],[28,28,-3,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-80,-81,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-35,-82,-79,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,-33,-67,-66,-54,-107,-108,-36,-89,-90,-91,-92,-37,-50,-44,-52,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-112,-55,-56,-109,-43,-65,-39,-51,28,28,28,-38,-32,-34,-42,28,28,28,-57,28,-41,-83,28,28,-47,28,-88,-40,28,28,28,-48,28,28,-87,-45,28,28,-85,28,-46,-84,-86,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,51,55,56,58,62,63,64,65,66,67,68,74,78,79,81,103,108,109,114,115,116,117,118,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,165,167,168,169,183,186,187,189,200,205,206,211,215,217,224,230,231,235,237,238,239,],[0,-1,-3,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-80,-81,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-35,-82,-79,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,-33,-67,-66,-54,-107,-108,-36,-89,-90,-91,-92,-37,-50,-44,-52,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-112,-55,-56,-109,-43,-65,-39,-51,-38,-32,-34,-42,-57,-41,-83,-47,-88,-40,-48,-87,-45,-85,-46,-84,-86,]),'LLAVEDER':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,51,55,56,58,62,63,64,65,66,67,68,74,78,79,81,103,108,109,114,115,116,117,118,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,159,160,165,167,168,169,183,184,185,186,187,189,190,195,200,201,205,206,211,213,215,217,220,222,224,230,231,232,234,235,236,237,238,239,],[-3,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-80,-81,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-35,-82,-79,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,-33,-67,-66,-54,-107,-108,-36,-89,-90,-91,-92,-37,-50,-44,-52,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-112,-55,-56,-109,183,-59,-43,-65,-39,-51,-38,-58,-60,-32,-34,-42,206,211,-57,215,-41,-83,-47,224,-88,-40,230,231,-48,-87,-45,237,238,-85,239,-46,-84,-86,]),'PTCOMA':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,45,51,55,56,58,62,63,64,65,66,67,68,74,78,79,81,87,103,108,109,114,115,116,117,118,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,158,161,165,167,168,169,171,183,186,187,189,200,202,203,205,206,211,215,217,224,226,230,231,235,237,238,239,],[30,31,32,33,34,35,36,37,38,39,40,41,42,43,-80,-81,-35,-82,-79,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,-33,-67,-66,129,-54,-107,-108,-36,-89,-90,-91,-92,-37,-50,-44,-52,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-112,-55,-56,-109,-62,185,-43,-65,-39,-51,191,-38,-32,-34,-42,-57,-63,-64,-41,-83,-47,-88,-40,-48,-61,-87,-45,-85,-46,-84,-86,]),'PUNTO':([18,20,56,79,80,81,152,167,],[44,48,104,-67,123,-66,123,-65,]),'PARIZQ':([20,21,22,24,25,46,47,50,52,54,56,57,59,60,61,69,71,73,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,113,120,122,124,129,130,139,155,163,182,188,191,216,228,],[46,52,53,61,69,61,61,61,61,88,46,61,61,61,61,61,113,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,52,]),'IGUAL':([20,45,49,79,80,81,114,115,116,117,118,127,158,167,169,202,],[47,73,82,-67,124,-66,163,-89,-90,-91,-92,-52,182,-65,-51,216,]),'CORIZQ':([20,24,46,47,49,50,52,56,57,59,60,61,69,73,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,115,116,117,118,120,122,124,127,129,130,139,155,163,169,182,188,191,193,214,216,],[50,57,57,57,83,57,57,50,57,57,57,57,57,120,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,83,57,-89,-90,-91,-92,57,57,57,-52,57,57,57,57,188,-51,57,57,57,209,225,57,]),'MENOS':([24,46,47,50,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,77,78,79,81,82,83,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,108,109,110,111,113,119,120,121,122,124,125,127,129,130,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,163,167,168,169,171,172,179,182,187,188,189,191,200,203,207,216,217,226,],[59,59,59,59,59,90,-113,59,-78,59,59,59,-114,-115,-116,-117,-118,-119,-120,59,59,-49,90,90,-67,-66,59,59,90,90,59,139,59,59,59,59,59,59,59,59,59,59,59,59,-54,90,-107,90,90,90,59,90,59,-50,59,59,90,-52,59,59,-93,-110,-94,-111,-95,-96,90,90,90,90,90,90,90,90,-105,-106,-112,-55,-56,59,-109,59,-65,90,-51,90,90,90,59,90,59,-56,59,-57,90,90,59,-56,90,]),'NOT':([24,46,47,50,52,57,59,60,61,69,73,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,113,120,122,124,129,130,139,155,163,182,188,191,216,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'RNULL':([24,46,47,50,52,57,59,60,61,69,73,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,113,120,122,124,129,130,139,155,163,182,188,191,216,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'RANY':([24,46,47,50,52,57,59,60,61,69,72,73,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,113,120,122,124,129,130,139,155,163,173,174,181,182,188,191,196,199,216,],[63,63,63,63,63,63,63,63,63,63,118,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,118,118,118,63,63,63,118,118,63,]),'ENTERO':([24,46,47,50,52,57,59,60,61,69,73,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,113,120,122,124,129,130,139,155,163,182,188,191,216,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'DECIMAL':([24,46,47,50,52,57,59,60,61,69,73,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,113,120,122,124,129,130,139,155,163,182,188,191,216,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'CADENA':([24,46,47,50,52,57,59,60,61,69,73,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,113,120,122,124,129,130,139,155,163,182,188,191,216,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'RTRUE':([24,46,47,50,52,57,59,60,61,69,73,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,113,120,122,124,129,130,139,155,163,182,188,191,216,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'RFALSE':([24,46,47,50,52,57,59,60,61,69,73,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,113,120,122,124,129,130,139,155,163,182,188,191,216,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'RLOG':([44,],[71,]),'DOSPUNTOS':([45,56,57,58,62,63,64,65,66,67,68,74,79,81,103,107,108,109,120,121,127,131,132,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,158,167,169,176,178,188,200,],[72,-113,105,-78,-114,-115,-116,-117,-118,-119,-120,-49,-67,-66,-54,155,-107,-108,105,-50,-52,173,174,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-112,-55,-56,-109,181,-65,-51,196,199,105,-57,]),'ROF':([45,56,58,62,63,64,65,66,67,68,74,79,81,87,103,108,109,114,115,116,117,118,119,121,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,165,167,169,187,189,200,205,217,],[-35,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,-67,-66,130,-54,-107,-108,-36,-89,-90,-91,-92,-37,-50,-52,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-112,-55,-56,-109,-43,-65,-51,-34,-42,-57,-41,-40,]),'PARDER':([46,56,58,62,63,64,65,66,67,68,74,75,76,77,79,81,86,88,103,108,109,110,111,115,116,117,118,121,127,131,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,162,166,167,169,172,193,198,200,207,214,221,233,],[74,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,121,-76,-77,-67,-66,128,132,-54,-107,-108,156,157,-89,-90,-91,-92,-50,-52,-72,176,-69,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-112,-55,-56,-109,186,-75,-65,-51,192,-71,-68,-57,219,-70,-74,-73,]),'MAS':([55,56,58,62,63,64,65,66,67,68,74,77,78,79,81,85,86,89,103,107,108,109,110,111,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,168,169,171,172,179,187,189,200,203,207,217,226,],[89,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,89,89,-67,-66,89,89,137,-54,89,-107,89,89,89,89,-50,89,-52,-93,-110,-94,-111,-95,-96,89,89,89,89,89,89,89,89,-105,-106,-112,-55,-56,-109,-65,89,-51,89,89,89,89,-56,-57,89,89,-56,89,]),'POR':([55,56,58,62,63,64,65,66,67,68,74,77,78,79,81,85,86,103,107,108,109,110,111,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,168,169,171,172,179,187,189,200,203,207,217,226,],[91,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,91,91,-67,-66,91,91,-54,91,-107,91,91,91,91,-50,91,-52,91,-110,91,-111,-95,-96,91,91,91,91,91,91,91,91,-105,-106,-112,-55,-56,-109,-65,91,-51,91,91,91,91,-56,-57,91,91,-56,91,]),'DIV':([55,56,58,62,63,64,65,66,67,68,74,77,78,79,81,85,86,103,107,108,109,110,111,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,168,169,171,172,179,187,189,200,203,207,217,226,],[92,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,92,92,-67,-66,92,92,-54,92,-107,92,92,92,92,-50,92,-52,92,-110,92,-111,-95,-96,92,92,92,92,92,92,92,92,-105,-106,-112,-55,-56,-109,-65,92,-51,92,92,92,92,-56,-57,92,92,-56,92,]),'IGUALDAD':([55,56,58,62,63,64,65,66,67,68,74,77,78,79,81,85,86,103,107,108,109,110,111,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,168,169,171,172,179,187,189,200,203,207,217,226,],[93,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,93,93,-67,-66,93,93,-54,93,-107,93,93,93,93,-50,93,-52,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,93,93,-105,-106,-112,-55,-56,-109,-65,93,-51,93,93,93,93,-56,-57,93,93,-56,93,]),'DESIGUALDAD':([55,56,58,62,63,64,65,66,67,68,74,77,78,79,81,85,86,103,107,108,109,110,111,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,168,169,171,172,179,187,189,200,203,207,217,226,],[94,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,94,94,-67,-66,94,94,-54,94,-107,94,94,94,94,-50,94,-52,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,94,94,-105,-106,-112,-55,-56,-109,-65,94,-51,94,94,94,94,-56,-57,94,94,-56,94,]),'MAYORQ':([55,56,58,62,63,64,65,66,67,68,74,77,78,79,81,85,86,103,107,108,109,110,111,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,168,169,171,172,179,187,189,200,203,207,217,226,],[95,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,95,95,-67,-66,95,95,-54,95,-107,95,95,95,95,-50,95,-52,-93,-110,-94,-111,-95,-96,95,95,-99,-100,-101,-102,95,95,-105,-106,-112,-55,-56,-109,-65,95,-51,95,95,95,95,-56,-57,95,95,-56,95,]),'MENORQ':([55,56,58,62,63,64,65,66,67,68,74,77,78,79,81,85,86,103,107,108,109,110,111,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,168,169,171,172,179,187,189,200,203,207,217,226,],[96,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,96,96,-67,-66,96,96,-54,96,-107,96,96,96,96,-50,96,-52,-93,-110,-94,-111,-95,-96,96,96,-99,-100,-101,-102,96,96,-105,-106,-112,-55,-56,-109,-65,96,-51,96,96,96,96,-56,-57,96,96,-56,96,]),'MAYORIGUAL':([55,56,58,62,63,64,65,66,67,68,74,77,78,79,81,85,86,103,107,108,109,110,111,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,168,169,171,172,179,187,189,200,203,207,217,226,],[97,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,97,97,-67,-66,97,97,-54,97,-107,97,97,97,97,-50,97,-52,-93,-110,-94,-111,-95,-96,97,97,-99,-100,-101,-102,97,97,-105,-106,-112,-55,-56,-109,-65,97,-51,97,97,97,97,-56,-57,97,97,-56,97,]),'MENORIGUAL':([55,56,58,62,63,64,65,66,67,68,74,77,78,79,81,85,86,103,107,108,109,110,111,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,168,169,171,172,179,187,189,200,203,207,217,226,],[98,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,98,98,-67,-66,98,98,-54,98,-107,98,98,98,98,-50,98,-52,-93,-110,-94,-111,-95,-96,98,98,-99,-100,-101,-102,98,98,-105,-106,-112,-55,-56,-109,-65,98,-51,98,98,98,98,-56,-57,98,98,-56,98,]),'AND':([55,56,58,62,63,64,65,66,67,68,74,77,78,79,81,85,86,103,107,108,109,110,111,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,168,169,171,172,179,187,189,200,203,207,217,226,],[99,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,99,99,-67,-66,99,99,-54,99,-107,-108,99,99,99,-50,99,-52,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,99,-105,-106,-112,-55,-56,-109,-65,99,-51,99,99,99,99,-56,-57,99,99,-56,99,]),'OR':([55,56,58,62,63,64,65,66,67,68,74,77,78,79,81,85,86,103,107,108,109,110,111,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,168,169,171,172,179,187,189,200,203,207,217,226,],[100,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,100,100,-67,-66,100,100,-54,100,-107,-108,100,100,100,-50,100,-52,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-112,-55,-56,-109,-65,100,-51,100,100,100,100,-56,-57,100,100,-56,100,]),'POT':([55,56,58,62,63,64,65,66,67,68,74,77,78,79,81,85,86,103,107,108,109,110,111,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,168,169,171,172,179,187,189,200,203,207,217,226,],[101,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,101,101,-67,-66,101,101,-54,101,-107,101,101,101,101,-50,101,-52,101,-110,101,-111,101,101,101,101,101,101,101,101,101,101,-105,101,-112,-55,-56,-109,-65,101,-51,101,101,101,101,-56,-57,101,101,-56,101,]),'MOD':([55,56,58,62,63,64,65,66,67,68,74,77,78,79,81,85,86,103,107,108,109,110,111,119,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,168,169,171,172,179,187,189,200,203,207,217,226,],[102,-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,102,102,-67,-66,102,102,-54,102,-107,102,102,102,102,-50,102,-52,102,-110,102,-111,-95,-96,102,102,102,102,102,102,102,102,-105,-106,-112,-55,-56,-109,-65,102,-51,102,102,102,102,-56,-57,102,102,-56,102,]),'COMA':([56,58,62,63,64,65,66,67,68,74,75,76,77,79,81,103,106,107,108,109,115,116,117,118,121,127,131,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,162,164,166,167,169,193,198,200,204,214,221,233,],[-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,122,-76,-77,-67,-66,-54,122,-77,-107,-108,-89,-90,-91,-92,-50,-52,-72,177,-69,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-112,-55,-56,-109,122,122,-75,-65,-51,-71,-68,-57,122,-70,-74,-73,]),'CORDER':([56,58,62,63,64,65,66,67,68,74,76,77,79,81,84,85,103,105,106,107,108,109,120,121,126,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,164,166,167,169,179,188,200,204,209,225,],[-113,-78,-114,-115,-116,-117,-118,-119,-120,-49,-76,-77,-67,-66,127,-53,-54,153,154,-77,-107,-108,165,-50,169,-52,-93,-110,-94,-111,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-112,-55,-56,-109,189,-75,-65,-51,200,205,-57,217,221,233,]),'LLAVEIZQ':([70,115,116,117,118,128,132,157,176,192,194,212,218,219,],[112,-89,-90,-91,-92,170,175,180,197,208,210,223,227,229,]),'RSTRING':([72,173,174,181,196,199,],[115,115,115,115,115,115,]),'RNUMBER':([72,173,174,181,196,199,],[116,116,116,116,116,116,]),'RBOOLEAN':([72,173,174,181,196,199,],[117,117,117,117,117,117,]),'RELSE':([206,],[218,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,170,175,180,197,208,210,223,227,229,],[2,190,195,201,213,220,222,232,234,236,]),'instruccion':([0,2,170,175,180,190,195,197,201,208,210,213,220,222,223,227,229,232,234,236,],[3,29,3,3,3,29,29,3,29,3,3,29,29,29,3,3,3,29,29,29,]),'imprimir':([0,2,170,175,180,190,195,197,201,208,210,213,220,222,223,227,229,232,234,236,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'declaracion_normal':([0,2,53,170,175,180,190,195,197,201,208,210,213,220,222,223,227,229,232,234,236,],[5,5,87,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'condicional_ifs':([0,2,170,175,180,190,195,197,201,208,210,213,220,222,223,227,229,232,234,236,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'ciclo_for':([0,2,170,175,180,190,195,197,201,208,210,213,220,222,223,227,229,232,234,236,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'funcion':([0,2,170,175,180,190,195,197,201,208,210,213,220,222,223,227,229,232,234,236,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'llamada_funcion':([0,2,24,46,47,50,52,57,59,60,61,69,73,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,113,120,122,124,129,130,139,155,163,170,175,180,182,188,190,191,195,197,201,208,210,213,216,220,222,223,227,229,232,234,236,],[9,9,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,9,9,9,58,58,9,58,9,9,9,9,9,9,58,9,9,9,9,9,9,9,9,]),'r_return':([0,2,170,175,180,190,195,197,201,208,210,213,220,222,223,227,229,232,234,236,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'asignacion':([0,2,170,175,180,190,195,197,201,208,210,213,220,222,223,227,229,232,234,236,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'ciclo_while':([0,2,170,175,180,190,195,197,201,208,210,213,220,222,223,227,229,232,234,236,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'r_break':([0,2,170,175,180,190,195,197,201,208,210,213,220,222,223,227,229,232,234,236,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'r_continue':([0,2,170,175,180,190,195,197,201,208,210,213,220,222,223,227,229,232,234,236,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'struct':([0,2,170,175,180,190,195,197,201,208,210,213,220,222,223,227,229,232,234,236,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'asignacion_struct':([0,2,170,175,180,190,195,197,201,208,210,213,220,222,223,227,229,232,234,236,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'asignacion_array':([0,2,170,175,180,190,195,197,201,208,210,213,220,222,223,227,229,232,234,236,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'parametros_array':([20,56,],[49,103,]),'condicional_if':([21,228,],[51,235,]),'expresion':([24,46,47,50,52,57,59,60,61,69,73,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,113,120,122,124,129,130,139,155,163,182,188,191,216,],[55,77,78,85,86,107,108,109,110,111,119,125,85,136,138,140,141,142,143,144,145,146,147,148,149,150,151,77,107,77,168,171,172,108,179,187,203,107,207,226,]),'parametros_llamada':([46,57,113,120,188,],[75,106,162,164,204,]),'parametro_ll':([46,57,113,120,122,188,],[76,76,76,76,166,76,]),'parametros_asignacion_struct':([48,104,],[80,152,]),'asignacion_struct_param':([48,104,123,],[81,81,167,]),'arrays_1':([50,83,],[84,126,]),'tipo':([72,173,174,181,196,199,],[114,193,194,202,212,214,]),'parametros':([88,],[133,]),'parametro':([88,177,],[134,198,]),'parametros_struct':([112,],[159,]),'params_struct':([112,159,],[160,184,]),'declaracion_struct':([112,159,],[161,161,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','AnalizadorSintactico.py',53),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','AnalizadorSintactico.py',57),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_2','AnalizadorSintactico.py',63),
  ('instruccion -> imprimir PTCOMA','instruccion',2,'p_instrucciones_evaluar','AnalizadorSintactico.py',70),
  ('instruccion -> declaracion_normal PTCOMA','instruccion',2,'p_instrucciones_evaluar','AnalizadorSintactico.py',71),
  ('instruccion -> condicional_ifs PTCOMA','instruccion',2,'p_instrucciones_evaluar','AnalizadorSintactico.py',72),
  ('instruccion -> ciclo_for PTCOMA','instruccion',2,'p_instrucciones_evaluar','AnalizadorSintactico.py',73),
  ('instruccion -> funcion PTCOMA','instruccion',2,'p_instrucciones_evaluar','AnalizadorSintactico.py',74),
  ('instruccion -> llamada_funcion PTCOMA','instruccion',2,'p_instrucciones_evaluar','AnalizadorSintactico.py',75),
  ('instruccion -> r_return PTCOMA','instruccion',2,'p_instrucciones_evaluar','AnalizadorSintactico.py',76),
  ('instruccion -> asignacion PTCOMA','instruccion',2,'p_instrucciones_evaluar','AnalizadorSintactico.py',77),
  ('instruccion -> ciclo_while PTCOMA','instruccion',2,'p_instrucciones_evaluar','AnalizadorSintactico.py',78),
  ('instruccion -> r_break PTCOMA','instruccion',2,'p_instrucciones_evaluar','AnalizadorSintactico.py',79),
  ('instruccion -> r_continue PTCOMA','instruccion',2,'p_instrucciones_evaluar','AnalizadorSintactico.py',80),
  ('instruccion -> struct PTCOMA','instruccion',2,'p_instrucciones_evaluar','AnalizadorSintactico.py',81),
  ('instruccion -> asignacion_struct PTCOMA','instruccion',2,'p_instrucciones_evaluar','AnalizadorSintactico.py',82),
  ('instruccion -> asignacion_array PTCOMA','instruccion',2,'p_instrucciones_evaluar','AnalizadorSintactico.py',83),
  ('instruccion -> imprimir','instruccion',1,'p_instrucciones_evaluar_1','AnalizadorSintactico.py',88),
  ('instruccion -> declaracion_normal','instruccion',1,'p_instrucciones_evaluar_1','AnalizadorSintactico.py',89),
  ('instruccion -> condicional_ifs','instruccion',1,'p_instrucciones_evaluar_1','AnalizadorSintactico.py',90),
  ('instruccion -> ciclo_for','instruccion',1,'p_instrucciones_evaluar_1','AnalizadorSintactico.py',91),
  ('instruccion -> funcion','instruccion',1,'p_instrucciones_evaluar_1','AnalizadorSintactico.py',92),
  ('instruccion -> llamada_funcion','instruccion',1,'p_instrucciones_evaluar_1','AnalizadorSintactico.py',93),
  ('instruccion -> r_return','instruccion',1,'p_instrucciones_evaluar_1','AnalizadorSintactico.py',94),
  ('instruccion -> asignacion','instruccion',1,'p_instrucciones_evaluar_1','AnalizadorSintactico.py',95),
  ('instruccion -> ciclo_while','instruccion',1,'p_instrucciones_evaluar_1','AnalizadorSintactico.py',96),
  ('instruccion -> r_break','instruccion',1,'p_instrucciones_evaluar_1','AnalizadorSintactico.py',97),
  ('instruccion -> r_continue','instruccion',1,'p_instrucciones_evaluar_1','AnalizadorSintactico.py',98),
  ('instruccion -> struct','instruccion',1,'p_instrucciones_evaluar_1','AnalizadorSintactico.py',99),
  ('instruccion -> asignacion_struct','instruccion',1,'p_instrucciones_evaluar_1','AnalizadorSintactico.py',100),
  ('instruccion -> asignacion_array','instruccion',1,'p_instrucciones_evaluar_1','AnalizadorSintactico.py',101),
  ('imprimir -> RCONSOLE PUNTO RLOG PARIZQ parametros_llamada PARDER','imprimir',6,'p_imprimir','AnalizadorSintactico.py',106),
  ('asignacion -> ID IGUAL expresion','asignacion',3,'p_asignacion','AnalizadorSintactico.py',110),
  ('declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion','declaracion_normal',6,'p_declaracion_normal','AnalizadorSintactico.py',114),
  ('declaracion_normal -> RLET ID','declaracion_normal',2,'p_declaracion_normal','AnalizadorSintactico.py',115),
  ('declaracion_normal -> RLET ID DOSPUNTOS tipo','declaracion_normal',4,'p_declaracion_normal','AnalizadorSintactico.py',116),
  ('declaracion_normal -> RLET ID IGUAL expresion','declaracion_normal',4,'p_declaracion_normal','AnalizadorSintactico.py',117),
  ('struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER','struct',5,'p_struct','AnalizadorSintactico.py',130),
  ('asignacion_struct -> ID PUNTO parametros_asignacion_struct IGUAL expresion','asignacion_struct',5,'p_asignacion_struct','AnalizadorSintactico.py',134),
  ('declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ parametros_llamada CORDER','declaracion_normal',8,'p_declaracion_array','AnalizadorSintactico.py',138),
  ('declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL CORIZQ CORDER','declaracion_normal',7,'p_declaracion_array','AnalizadorSintactico.py',139),
  ('declaracion_normal -> RLET ID IGUAL CORIZQ parametros_llamada CORDER','declaracion_normal',6,'p_declaracion_array','AnalizadorSintactico.py',140),
  ('declaracion_normal -> RLET ID IGUAL CORIZQ CORDER','declaracion_normal',5,'p_declaracion_array','AnalizadorSintactico.py',141),
  ('asignacion_array -> ID parametros_array IGUAL expresion','asignacion_array',4,'p_asignacion_array','AnalizadorSintactico.py',153),
  ('funcion -> RFUNCTION ID PARIZQ PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER','funcion',9,'p_funcion','AnalizadorSintactico.py',157),
  ('funcion -> RFUNCTION ID PARIZQ parametros PARDER DOSPUNTOS tipo LLAVEIZQ instrucciones LLAVEDER','funcion',10,'p_funcion','AnalizadorSintactico.py',158),
  ('funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER','funcion',7,'p_funcion','AnalizadorSintactico.py',159),
  ('funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER','funcion',8,'p_funcion','AnalizadorSintactico.py',160),
  ('llamada_funcion -> ID PARIZQ PARDER','llamada_funcion',3,'p_llamada_funcion','AnalizadorSintactico.py',174),
  ('llamada_funcion -> ID PARIZQ parametros_llamada PARDER','llamada_funcion',4,'p_llamada_funcion','AnalizadorSintactico.py',175),
  ('parametros_array -> parametros_array CORIZQ arrays_1 CORDER','parametros_array',4,'p_parametros_array','AnalizadorSintactico.py',182),
  ('parametros_array -> CORIZQ arrays_1 CORDER','parametros_array',3,'p_parametros_array_2','AnalizadorSintactico.py',187),
  ('arrays_1 -> expresion','arrays_1',1,'p_arrays_1','AnalizadorSintactico.py',191),
  ('expresion -> ID parametros_array','expresion',2,'p_expresion_array','AnalizadorSintactico.py',195),
  ('expresion -> CORIZQ DOSPUNTOS CORDER','expresion',3,'p_expresion_array_2','AnalizadorSintactico.py',199),
  ('expresion -> CORIZQ parametros_llamada CORDER','expresion',3,'p_expresion_array_3','AnalizadorSintactico.py',203),
  ('expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER','expresion',5,'p_expresion_array_4','AnalizadorSintactico.py',207),
  ('parametros_struct -> parametros_struct params_struct','parametros_struct',2,'p_parametros_struct','AnalizadorSintactico.py',211),
  ('parametros_struct -> params_struct','parametros_struct',1,'p_parametros_struct_2','AnalizadorSintactico.py',216),
  ('params_struct -> declaracion_struct PTCOMA','params_struct',2,'p_params_struct','AnalizadorSintactico.py',220),
  ('declaracion_struct -> ID DOSPUNTOS tipo IGUAL expresion','declaracion_struct',5,'p_declaracion_struct','AnalizadorSintactico.py',224),
  ('declaracion_struct -> ID','declaracion_struct',1,'p_declaracion_struct','AnalizadorSintactico.py',225),
  ('declaracion_struct -> ID DOSPUNTOS tipo','declaracion_struct',3,'p_declaracion_struct','AnalizadorSintactico.py',226),
  ('declaracion_struct -> ID IGUAL expresion','declaracion_struct',3,'p_declaracion_struct','AnalizadorSintactico.py',227),
  ('parametros_asignacion_struct -> parametros_asignacion_struct PUNTO asignacion_struct_param','parametros_asignacion_struct',3,'p_parametros_asignacion_struct','AnalizadorSintactico.py',240),
  ('parametros_asignacion_struct -> asignacion_struct_param','parametros_asignacion_struct',1,'p_parametros_asignacion_struct_2','AnalizadorSintactico.py',245),
  ('asignacion_struct_param -> ID','asignacion_struct_param',1,'p_asignacion_struct_param','AnalizadorSintactico.py',249),
  ('parametros -> parametros COMA parametro','parametros',3,'p_parametros','AnalizadorSintactico.py',253),
  ('parametros -> parametro','parametros',1,'p_parametros_2','AnalizadorSintactico.py',258),
  ('parametro -> RLET ID DOSPUNTOS tipo','parametro',4,'p_parametro','AnalizadorSintactico.py',264),
  ('parametro -> ID DOSPUNTOS tipo','parametro',3,'p_parametro','AnalizadorSintactico.py',265),
  ('parametro -> ID','parametro',1,'p_parametro','AnalizadorSintactico.py',266),
  ('parametro -> RLET ID DOSPUNTOS tipo CORIZQ CORDER','parametro',6,'p_parametro','AnalizadorSintactico.py',267),
  ('parametro -> ID DOSPUNTOS tipo CORIZQ CORDER','parametro',5,'p_parametro','AnalizadorSintactico.py',268),
  ('parametros_llamada -> parametros_llamada COMA parametro_ll','parametros_llamada',3,'p_parametros_llamada','AnalizadorSintactico.py',282),
  ('parametros_llamada -> parametro_ll','parametros_llamada',1,'p_parametros_ll_2','AnalizadorSintactico.py',287),
  ('parametro_ll -> expresion','parametro_ll',1,'p_parametro_ll','AnalizadorSintactico.py',291),
  ('expresion -> llamada_funcion','expresion',1,'p_expresion_funcion','AnalizadorSintactico.py',295),
  ('r_return -> RRETURN expresion','r_return',2,'p_return','AnalizadorSintactico.py',299),
  ('r_break -> RBREAK','r_break',1,'p_break','AnalizadorSintactico.py',303),
  ('r_continue -> RCONTINUE','r_continue',1,'p_continue','AnalizadorSintactico.py',307),
  ('condicional_ifs -> RIF condicional_if','condicional_ifs',2,'p_condicional_ifs','AnalizadorSintactico.py',312),
  ('condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER','condicional_if',6,'p_condicional_if','AnalizadorSintactico.py',316),
  ('condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER','condicional_if',10,'p_condicional_if_else','AnalizadorSintactico.py',320),
  ('condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if','condicional_if',9,'p_condicional_if_else_if','AnalizadorSintactico.py',324),
  ('ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER','ciclo_for',11,'p_ciclo_for','AnalizadorSintactico.py',328),
  ('ciclo_for -> RFOR PARIZQ declaracion_normal ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER','ciclo_for',9,'p_ciclo_for','AnalizadorSintactico.py',329),
  ('ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER','ciclo_while',7,'p_ciclo_while','AnalizadorSintactico.py',341),
  ('tipo -> RSTRING','tipo',1,'p_tipo','AnalizadorSintactico.py',379),
  ('tipo -> RNUMBER','tipo',1,'p_tipo','AnalizadorSintactico.py',380),
  ('tipo -> RBOOLEAN','tipo',1,'p_tipo','AnalizadorSintactico.py',381),
  ('tipo -> RANY','tipo',1,'p_tipo','AnalizadorSintactico.py',382),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',389),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',390),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',391),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',392),
  ('expresion -> expresion IGUALDAD expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',393),
  ('expresion -> expresion DESIGUALDAD expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',394),
  ('expresion -> expresion MAYORQ expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',395),
  ('expresion -> expresion MENORQ expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',396),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',397),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',398),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',399),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',400),
  ('expresion -> expresion POT expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',401),
  ('expresion -> expresion MOD expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',402),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','AnalizadorSintactico.py',435),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_unaria','AnalizadorSintactico.py',436),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_expresionParentizada','AnalizadorSintactico.py',443),
  ('expresion -> expresion MAS MAS','expresion',3,'p_expresion_incrementable','AnalizadorSintactico.py',447),
  ('expresion -> expresion MENOS MENOS','expresion',3,'p_expresion_incrementable','AnalizadorSintactico.py',448),
  ('expresion -> ID PUNTO parametros_asignacion_struct','expresion',3,'p_expresion_stuct','AnalizadorSintactico.py',457),
  ('expresion -> ID','expresion',1,'p_identificador','AnalizadorSintactico.py',462),
  ('expresion -> RNULL','expresion',1,'p_nulo','AnalizadorSintactico.py',466),
  ('expresion -> RANY','expresion',1,'p_any','AnalizadorSintactico.py',470),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','AnalizadorSintactico.py',475),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_decimal','AnalizadorSintactico.py',479),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','AnalizadorSintactico.py',483),
  ('expresion -> RTRUE','expresion',1,'p_expresion_boolean','AnalizadorSintactico.py',488),
  ('expresion -> RFALSE','expresion',1,'p_expresion_boolean','AnalizadorSintactico.py',489),
]
