
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightUNOTleftIGUALDADDESIGUALDADleftMAYORQMENORQMAYORIGUALMENORIGUALleftMASMENOSleftPORDIVleftPARIZQPARDERrightUMENOSAND CADENA CORDER CORIZQ DECIMAL DESIGUALDAD DIV DOSPUNTOS ENTERO ID IGUAL IGUALDAD LLAVEDER LLAVEIZQ MAS MAYORIGUAL MAYORQ MENORIGUAL MENORQ MENOS MOD NOT OR PARDER PARIZQ POR POT PTCOMA PUNTO RANY RBOOLEAN RBREAK RCONCAT RCONSOLE RCONTINUE RELSE RFALSE RFOR RFUNCTION RIF RINTERFACE RLET RLOG RNULL RNUMBER RRETURN RSPLIT RSTRING RTOEXPONENTIAL RTOFIXED RTOLOWERCASE RTOSTRING RTRUE RTUPPERCASE RWHILEinit : instruccionesinstrucciones    : instrucciones instruccioninstrucciones : instruccioninstruccion : imprimir PTCOMA\n                    | declaracion_normal PTCOMA\n                    | condicional_ifs PTCOMA\n                    | ciclo_for PTCOMA\n                    instruccion : imprimir\n                    | declaracion_normal\n                    | condicional_ifs\n                    | ciclo_forimprimir : RCONSOLE PUNTO RLOG PARIZQ expresion PARDERdeclaracion_normal : RLET ID DOSPUNTOS tipo IGUAL expresion\n                            | RLET ID IGUAL expresioncondicional_ifs : RIF condicional_ifcondicional_if : PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDERcondicional_if : PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDERcondicional_if : PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_ifciclo_for : RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDERtipo : RSTRING\n            | RNUMBER\n            | RBOOLEANexpresion : expresion MAS expresion\n                | expresion MENOS expresion\n                | expresion POR expresion\n                | expresion DIV expresion\n                | expresion IGUALDAD expresion\n                | expresion DESIGUALDAD expresion\n                | expresion MAYORQ expresion\n                | expresion MENORQ expresion\n                | expresion MAYORIGUAL expresion\n                | expresion MENORIGUAL expresion\n                | expresion AND expresion\n                | expresion OR expresion\n                expresion : MENOS expresion %prec UMENOS\n                | NOT expresion %prec UNOTexpresion : expresion MAS MAS\n                | expresion MENOS MENOSexpresion : IDexpresion : RNULLexpresion : RANYexpresion : ENTEROexpresion : DECIMALexpresion : CADENAexpresion : RTRUE\n                | RFALSE'
    
_lr_action_items = {'RCONSOLE':([0,2,3,4,5,6,7,12,13,14,15,16,19,28,29,30,31,32,33,34,35,42,56,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,85,87,88,89,90,91,92,],[8,8,-3,-8,-9,-10,-11,-2,-4,-5,-6,-7,-15,-39,-40,-41,-42,-43,-44,-45,-46,-14,-35,-36,8,-23,-37,-24,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-12,-13,8,-16,8,8,8,-18,8,-17,-19,]),'RLET':([0,2,3,4,5,6,7,12,13,14,15,16,19,21,28,29,30,31,32,33,34,35,42,56,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,85,87,88,89,90,91,92,],[9,9,-3,-8,-9,-10,-11,-2,-4,-5,-6,-7,-15,9,-39,-40,-41,-42,-43,-44,-45,-46,-14,-35,-36,9,-23,-37,-24,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-12,-13,9,-16,9,9,9,-18,9,-17,-19,]),'RIF':([0,2,3,4,5,6,7,12,13,14,15,16,19,28,29,30,31,32,33,34,35,42,56,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,83,85,87,88,89,90,91,92,],[10,10,-3,-8,-9,-10,-11,-2,-4,-5,-6,-7,-15,-39,-40,-41,-42,-43,-44,-45,-46,-14,-35,-36,10,-23,-37,-24,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-12,-13,10,-16,86,10,10,10,-18,10,-17,-19,]),'RFOR':([0,2,3,4,5,6,7,12,13,14,15,16,19,28,29,30,31,32,33,34,35,42,56,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,85,87,88,89,90,91,92,],[11,11,-3,-8,-9,-10,-11,-2,-4,-5,-6,-7,-15,-39,-40,-41,-42,-43,-44,-45,-46,-14,-35,-36,11,-23,-37,-24,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-12,-13,11,-16,11,11,11,-18,11,-17,-19,]),'$end':([1,2,3,4,5,6,7,12,13,14,15,16,19,28,29,30,31,32,33,34,35,42,56,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,81,89,91,92,],[0,-1,-3,-8,-9,-10,-11,-2,-4,-5,-6,-7,-15,-39,-40,-41,-42,-43,-44,-45,-46,-14,-35,-36,-23,-37,-24,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-12,-13,-16,-18,-17,-19,]),'LLAVEDER':([3,4,5,6,7,12,13,14,15,16,19,28,29,30,31,32,33,34,35,42,56,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,88,89,90,91,92,],[-3,-8,-9,-10,-11,-2,-4,-5,-6,-7,-15,-39,-40,-41,-42,-43,-44,-45,-46,-14,-35,-36,-23,-37,-24,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-12,-13,81,-16,91,-18,92,-17,-19,]),'PTCOMA':([4,5,6,7,19,28,29,30,31,32,33,34,35,36,42,56,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,89,91,92,],[13,14,15,16,-15,-39,-40,-41,-42,-43,-44,-45,-46,58,-14,-35,-36,-23,-37,-24,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,80,-12,-13,-16,-18,-17,-19,]),'PUNTO':([8,],[17,]),'ID':([9,20,24,26,27,37,44,45,46,47,48,49,50,51,52,53,54,55,58,60,65,80,],[18,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'PARIZQ':([10,11,22,86,],[20,21,37,20,]),'RLOG':([17,],[22,]),'DOSPUNTOS':([18,],[23,]),'IGUAL':([18,38,39,40,41,],[24,60,-20,-21,-22,]),'MENOS':([20,24,25,26,27,28,29,30,31,32,33,34,35,37,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,80,82,],[26,26,45,26,26,-39,-40,-41,-42,-43,-44,-45,-46,26,45,26,65,26,26,26,26,26,26,26,26,26,26,-35,45,26,45,26,-23,-37,-24,-38,-25,-26,45,45,45,45,45,45,45,45,45,45,26,45,]),'NOT':([20,24,26,27,37,44,45,46,47,48,49,50,51,52,53,54,55,58,60,65,80,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'RNULL':([20,24,26,27,37,44,45,46,47,48,49,50,51,52,53,54,55,58,60,65,80,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'RANY':([20,24,26,27,37,44,45,46,47,48,49,50,51,52,53,54,55,58,60,65,80,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'ENTERO':([20,24,26,27,37,44,45,46,47,48,49,50,51,52,53,54,55,58,60,65,80,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'DECIMAL':([20,24,26,27,37,44,45,46,47,48,49,50,51,52,53,54,55,58,60,65,80,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'CADENA':([20,24,26,27,37,44,45,46,47,48,49,50,51,52,53,54,55,58,60,65,80,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'RTRUE':([20,24,26,27,37,44,45,46,47,48,49,50,51,52,53,54,55,58,60,65,80,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'RFALSE':([20,24,26,27,37,44,45,46,47,48,49,50,51,52,53,54,55,58,60,65,80,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'RSTRING':([23,],[39,]),'RNUMBER':([23,],[40,]),'RBOOLEAN':([23,],[41,]),'PARDER':([25,28,29,30,31,32,33,34,35,56,57,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,82,],[43,-39,-40,-41,-42,-43,-44,-45,-46,-35,-36,77,-23,-37,-24,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,84,]),'MAS':([25,28,29,30,31,32,33,34,35,42,44,56,57,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,82,],[44,-39,-40,-41,-42,-43,-44,-45,-46,44,63,-35,44,44,-23,-37,-24,-38,-25,-26,44,44,44,44,44,44,44,44,44,44,44,]),'POR':([25,28,29,30,31,32,33,34,35,42,56,57,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,82,],[46,-39,-40,-41,-42,-43,-44,-45,-46,46,-35,46,46,46,-37,46,-38,-25,-26,46,46,46,46,46,46,46,46,46,46,46,]),'DIV':([25,28,29,30,31,32,33,34,35,42,56,57,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,82,],[47,-39,-40,-41,-42,-43,-44,-45,-46,47,-35,47,47,47,-37,47,-38,-25,-26,47,47,47,47,47,47,47,47,47,47,47,]),'IGUALDAD':([25,28,29,30,31,32,33,34,35,42,56,57,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,82,],[48,-39,-40,-41,-42,-43,-44,-45,-46,48,-35,48,48,-23,-37,-24,-38,-25,-26,-27,-28,-29,-30,-31,-32,48,48,48,48,48,]),'DESIGUALDAD':([25,28,29,30,31,32,33,34,35,42,56,57,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,82,],[49,-39,-40,-41,-42,-43,-44,-45,-46,49,-35,49,49,-23,-37,-24,-38,-25,-26,-27,-28,-29,-30,-31,-32,49,49,49,49,49,]),'MAYORQ':([25,28,29,30,31,32,33,34,35,42,56,57,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,82,],[50,-39,-40,-41,-42,-43,-44,-45,-46,50,-35,50,50,-23,-37,-24,-38,-25,-26,50,50,-29,-30,-31,-32,50,50,50,50,50,]),'MENORQ':([25,28,29,30,31,32,33,34,35,42,56,57,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,82,],[51,-39,-40,-41,-42,-43,-44,-45,-46,51,-35,51,51,-23,-37,-24,-38,-25,-26,51,51,-29,-30,-31,-32,51,51,51,51,51,]),'MAYORIGUAL':([25,28,29,30,31,32,33,34,35,42,56,57,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,82,],[52,-39,-40,-41,-42,-43,-44,-45,-46,52,-35,52,52,-23,-37,-24,-38,-25,-26,52,52,-29,-30,-31,-32,52,52,52,52,52,]),'MENORIGUAL':([25,28,29,30,31,32,33,34,35,42,56,57,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,82,],[53,-39,-40,-41,-42,-43,-44,-45,-46,53,-35,53,53,-23,-37,-24,-38,-25,-26,53,53,-29,-30,-31,-32,53,53,53,53,53,]),'AND':([25,28,29,30,31,32,33,34,35,42,56,57,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,82,],[54,-39,-40,-41,-42,-43,-44,-45,-46,54,-35,-36,54,-23,-37,-24,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,54,54,54,54,]),'OR':([25,28,29,30,31,32,33,34,35,42,56,57,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,82,],[55,-39,-40,-41,-42,-43,-44,-45,-46,55,-35,-36,55,-23,-37,-24,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,55,55,55,]),'LLAVEIZQ':([43,83,84,],[61,85,87,]),'RELSE':([81,],[83,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,61,85,87,],[2,79,88,90,]),'instruccion':([0,2,61,79,85,87,88,90,],[3,12,3,12,3,3,12,12,]),'imprimir':([0,2,61,79,85,87,88,90,],[4,4,4,4,4,4,4,4,]),'declaracion_normal':([0,2,21,61,79,85,87,88,90,],[5,5,36,5,5,5,5,5,5,]),'condicional_ifs':([0,2,61,79,85,87,88,90,],[6,6,6,6,6,6,6,6,]),'ciclo_for':([0,2,61,79,85,87,88,90,],[7,7,7,7,7,7,7,7,]),'condicional_if':([10,86,],[19,89,]),'expresion':([20,24,26,27,37,44,45,46,47,48,49,50,51,52,53,54,55,58,60,65,80,],[25,42,56,57,59,62,64,66,67,68,69,70,71,72,73,74,75,76,78,56,82,]),'tipo':([23,],[38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','AnalizadorSintactico.py',31),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','AnalizadorSintactico.py',35),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_2','AnalizadorSintactico.py',41),
  ('instruccion -> imprimir PTCOMA','instruccion',2,'p_instrucciones_evaluar','AnalizadorSintactico.py',48),
  ('instruccion -> declaracion_normal PTCOMA','instruccion',2,'p_instrucciones_evaluar','AnalizadorSintactico.py',49),
  ('instruccion -> condicional_ifs PTCOMA','instruccion',2,'p_instrucciones_evaluar','AnalizadorSintactico.py',50),
  ('instruccion -> ciclo_for PTCOMA','instruccion',2,'p_instrucciones_evaluar','AnalizadorSintactico.py',51),
  ('instruccion -> imprimir','instruccion',1,'p_instrucciones_evaluar_1','AnalizadorSintactico.py',56),
  ('instruccion -> declaracion_normal','instruccion',1,'p_instrucciones_evaluar_1','AnalizadorSintactico.py',57),
  ('instruccion -> condicional_ifs','instruccion',1,'p_instrucciones_evaluar_1','AnalizadorSintactico.py',58),
  ('instruccion -> ciclo_for','instruccion',1,'p_instrucciones_evaluar_1','AnalizadorSintactico.py',59),
  ('imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER','imprimir',6,'p_imprimir','AnalizadorSintactico.py',63),
  ('declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion','declaracion_normal',6,'p_declaracion_normal','AnalizadorSintactico.py',67),
  ('declaracion_normal -> RLET ID IGUAL expresion','declaracion_normal',4,'p_declaracion_normal','AnalizadorSintactico.py',68),
  ('condicional_ifs -> RIF condicional_if','condicional_ifs',2,'p_condicional_ifs','AnalizadorSintactico.py',83),
  ('condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER','condicional_if',6,'p_condicional_if','AnalizadorSintactico.py',87),
  ('condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER','condicional_if',10,'p_condicional_if_else','AnalizadorSintactico.py',91),
  ('condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if','condicional_if',9,'p_condicional_if_else_if','AnalizadorSintactico.py',95),
  ('ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER','ciclo_for',11,'p_ciclo_for','AnalizadorSintactico.py',99),
  ('tipo -> RSTRING','tipo',1,'p_tipo','AnalizadorSintactico.py',104),
  ('tipo -> RNUMBER','tipo',1,'p_tipo','AnalizadorSintactico.py',105),
  ('tipo -> RBOOLEAN','tipo',1,'p_tipo','AnalizadorSintactico.py',106),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',112),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',113),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',114),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',115),
  ('expresion -> expresion IGUALDAD expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',116),
  ('expresion -> expresion DESIGUALDAD expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',117),
  ('expresion -> expresion MAYORQ expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',118),
  ('expresion -> expresion MENORQ expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',119),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',120),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',121),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',122),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_binaria','AnalizadorSintactico.py',123),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','AnalizadorSintactico.py',152),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_unaria','AnalizadorSintactico.py',153),
  ('expresion -> expresion MAS MAS','expresion',3,'p_expresion_incrementable','AnalizadorSintactico.py',160),
  ('expresion -> expresion MENOS MENOS','expresion',3,'p_expresion_incrementable','AnalizadorSintactico.py',161),
  ('expresion -> ID','expresion',1,'p_identificador','AnalizadorSintactico.py',171),
  ('expresion -> RNULL','expresion',1,'p_nulo','AnalizadorSintactico.py',175),
  ('expresion -> RANY','expresion',1,'p_any','AnalizadorSintactico.py',179),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','AnalizadorSintactico.py',184),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_decimal','AnalizadorSintactico.py',188),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','AnalizadorSintactico.py',192),
  ('expresion -> RTRUE','expresion',1,'p_expresion_boolean','AnalizadorSintactico.py',197),
  ('expresion -> RFALSE','expresion',1,'p_expresion_boolean','AnalizadorSintactico.py',198),
]
