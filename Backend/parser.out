Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CORDER
    CORIZQ
    RBREAK
    RCONCAT
    RCONTINUE
    RINTERFACE
    RSPLIT
    RTOEXPONENTIAL
    RTOFIXED
    RTOLOWERCASE
    RTOSTRING
    RTUPPERCASE

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> imprimir PTCOMA
Rule 5     instruccion -> declaracion_normal PTCOMA
Rule 6     instruccion -> condicional_ifs PTCOMA
Rule 7     instruccion -> ciclo_for PTCOMA
Rule 8     instruccion -> funcion PTCOMA
Rule 9     instruccion -> llamada_funcion PTCOMA
Rule 10    instruccion -> r_return PTCOMA
Rule 11    instruccion -> asignacion PTCOMA
Rule 12    instruccion -> ciclo_while PTCOMA
Rule 13    instruccion -> imprimir
Rule 14    instruccion -> declaracion_normal
Rule 15    instruccion -> condicional_ifs
Rule 16    instruccion -> ciclo_for
Rule 17    instruccion -> funcion
Rule 18    instruccion -> llamada_funcion
Rule 19    instruccion -> r_return
Rule 20    instruccion -> asignacion
Rule 21    instruccion -> ciclo_while
Rule 22    imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
Rule 23    asignacion -> ID IGUAL expresion
Rule 24    declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion
Rule 25    declaracion_normal -> RLET ID
Rule 26    declaracion_normal -> RLET ID DOSPUNTOS tipo
Rule 27    declaracion_normal -> RLET ID IGUAL expresion
Rule 28    funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 29    funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 30    llamada_funcion -> ID PARIZQ PARDER
Rule 31    llamada_funcion -> ID PARIZQ parametros_llamada PARDER
Rule 32    parametros -> parametros COMA parametro
Rule 33    parametros -> parametro
Rule 34    parametro -> RLET ID DOSPUNTOS tipo
Rule 35    parametro -> ID DOSPUNTOS tipo
Rule 36    parametro -> ID
Rule 37    parametros_llamada -> parametros_llamada COMA parametro_ll
Rule 38    parametros_llamada -> parametro_ll
Rule 39    parametro_ll -> expresion
Rule 40    expresion -> llamada_funcion
Rule 41    r_return -> RRETURN expresion
Rule 42    condicional_ifs -> RIF condicional_if
Rule 43    condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 44    condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
Rule 45    condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if
Rule 46    ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 47    ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 48    tipo -> RSTRING
Rule 49    tipo -> RNUMBER
Rule 50    tipo -> RBOOLEAN
Rule 51    expresion -> expresion MAS expresion
Rule 52    expresion -> expresion MENOS expresion
Rule 53    expresion -> expresion POR expresion
Rule 54    expresion -> expresion DIV expresion
Rule 55    expresion -> expresion IGUALDAD expresion
Rule 56    expresion -> expresion DESIGUALDAD expresion
Rule 57    expresion -> expresion MAYORQ expresion
Rule 58    expresion -> expresion MENORQ expresion
Rule 59    expresion -> expresion MAYORIGUAL expresion
Rule 60    expresion -> expresion MENORIGUAL expresion
Rule 61    expresion -> expresion AND expresion
Rule 62    expresion -> expresion OR expresion
Rule 63    expresion -> expresion POT expresion
Rule 64    expresion -> expresion MOD expresion
Rule 65    expresion -> MENOS expresion
Rule 66    expresion -> NOT expresion
Rule 67    expresion -> expresion MAS MAS
Rule 68    expresion -> expresion MENOS MENOS
Rule 69    expresion -> ID
Rule 70    expresion -> RNULL
Rule 71    expresion -> RANY
Rule 72    expresion -> ENTERO
Rule 73    expresion -> DECIMAL
Rule 74    expresion -> CADENA
Rule 75    expresion -> RTRUE
Rule 76    expresion -> RFALSE

Terminals, with rules where they appear

AND                  : 61
CADENA               : 74
COMA                 : 32 37
CORDER               : 
CORIZQ               : 
DECIMAL              : 73
DESIGUALDAD          : 56
DIV                  : 54
DOSPUNTOS            : 24 26 34 35
ENTERO               : 72
ID                   : 23 24 25 26 27 28 29 30 31 34 35 36 69
IGUAL                : 23 24 27
IGUALDAD             : 55
LLAVEDER             : 28 29 43 44 44 45 46 47
LLAVEIZQ             : 28 29 43 44 44 45 46 47
MAS                  : 51 67 67
MAYORIGUAL           : 59
MAYORQ               : 57
MENORIGUAL           : 60
MENORQ               : 58
MENOS                : 52 65 68 68
MOD                  : 64
NOT                  : 66
OR                   : 62
PARDER               : 22 28 29 30 31 43 44 45 46 47
PARIZQ               : 22 28 29 30 31 43 44 45 46 47
POR                  : 53
POT                  : 63
PTCOMA               : 4 5 6 7 8 9 10 11 12 46 46
PUNTO                : 22
RANY                 : 71
RBOOLEAN             : 50
RBREAK               : 
RCONCAT              : 
RCONSOLE             : 22
RCONTINUE            : 
RELSE                : 44 45
RFALSE               : 76
RFOR                 : 46
RFUNCTION            : 28 29
RIF                  : 42 45
RINTERFACE           : 
RLET                 : 24 25 26 27 34
RLOG                 : 22
RNULL                : 70
RNUMBER              : 49
RRETURN              : 41
RSPLIT               : 
RSTRING              : 48
RTOEXPONENTIAL       : 
RTOFIXED             : 
RTOLOWERCASE         : 
RTOSTRING            : 
RTRUE                : 75
RTUPPERCASE          : 
RWHILE               : 47
error                : 

Nonterminals, with rules where they appear

asignacion           : 11 20
ciclo_for            : 7 16
ciclo_while          : 12 21
condicional_if       : 42 45
condicional_ifs      : 6 15
declaracion_normal   : 5 14 46
expresion            : 22 23 24 27 39 41 43 44 45 46 46 47 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 66 67 68
funcion              : 8 17
imprimir             : 4 13
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 28 29 43 44 44 45 46 47
llamada_funcion      : 9 18 40
parametro            : 32 33
parametro_ll         : 37 38
parametros           : 29 32
parametros_llamada   : 31 37
r_return             : 10 19
tipo                 : 24 26 34 35

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . imprimir
    (14) instruccion -> . declaracion_normal
    (15) instruccion -> . condicional_ifs
    (16) instruccion -> . ciclo_for
    (17) instruccion -> . funcion
    (18) instruccion -> . llamada_funcion
    (19) instruccion -> . r_return
    (20) instruccion -> . asignacion
    (21) instruccion -> . ciclo_while
    (22) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (24) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (25) declaracion_normal -> . RLET ID
    (26) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (27) declaracion_normal -> . RLET ID IGUAL expresion
    (42) condicional_ifs -> . RIF condicional_if
    (46) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (41) r_return -> . RRETURN expresion
    (23) asignacion -> . ID IGUAL expresion
    (47) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    RCONSOLE        shift and go to state 13
    RLET            shift and go to state 14
    RIF             shift and go to state 16
    RFOR            shift and go to state 17
    RFUNCTION       shift and go to state 18
    ID              shift and go to state 15
    RRETURN         shift and go to state 19
    RWHILE          shift and go to state 20

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . imprimir
    (14) instruccion -> . declaracion_normal
    (15) instruccion -> . condicional_ifs
    (16) instruccion -> . ciclo_for
    (17) instruccion -> . funcion
    (18) instruccion -> . llamada_funcion
    (19) instruccion -> . r_return
    (20) instruccion -> . asignacion
    (21) instruccion -> . ciclo_while
    (22) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (24) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (25) declaracion_normal -> . RLET ID
    (26) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (27) declaracion_normal -> . RLET ID IGUAL expresion
    (42) condicional_ifs -> . RIF condicional_if
    (46) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (41) r_return -> . RRETURN expresion
    (23) asignacion -> . ID IGUAL expresion
    (47) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    $end            reduce using rule 1 (init -> instrucciones .)
    RCONSOLE        shift and go to state 13
    RLET            shift and go to state 14
    RIF             shift and go to state 16
    RFOR            shift and go to state 17
    RFUNCTION       shift and go to state 18
    ID              shift and go to state 15
    RRETURN         shift and go to state 19
    RWHILE          shift and go to state 20

    instruccion                    shift and go to state 21
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12

state 3

    (3) instrucciones -> instruccion .

    RCONSOLE        reduce using rule 3 (instrucciones -> instruccion .)
    RLET            reduce using rule 3 (instrucciones -> instruccion .)
    RIF             reduce using rule 3 (instrucciones -> instruccion .)
    RFOR            reduce using rule 3 (instrucciones -> instruccion .)
    RFUNCTION       reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    RRETURN         reduce using rule 3 (instrucciones -> instruccion .)
    RWHILE          reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> imprimir . PTCOMA
    (13) instruccion -> imprimir .

    PTCOMA          shift and go to state 22
    RCONSOLE        reduce using rule 13 (instruccion -> imprimir .)
    RLET            reduce using rule 13 (instruccion -> imprimir .)
    RIF             reduce using rule 13 (instruccion -> imprimir .)
    RFOR            reduce using rule 13 (instruccion -> imprimir .)
    RFUNCTION       reduce using rule 13 (instruccion -> imprimir .)
    ID              reduce using rule 13 (instruccion -> imprimir .)
    RRETURN         reduce using rule 13 (instruccion -> imprimir .)
    RWHILE          reduce using rule 13 (instruccion -> imprimir .)
    $end            reduce using rule 13 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 13 (instruccion -> imprimir .)


state 5

    (5) instruccion -> declaracion_normal . PTCOMA
    (14) instruccion -> declaracion_normal .

    PTCOMA          shift and go to state 23
    RCONSOLE        reduce using rule 14 (instruccion -> declaracion_normal .)
    RLET            reduce using rule 14 (instruccion -> declaracion_normal .)
    RIF             reduce using rule 14 (instruccion -> declaracion_normal .)
    RFOR            reduce using rule 14 (instruccion -> declaracion_normal .)
    RFUNCTION       reduce using rule 14 (instruccion -> declaracion_normal .)
    ID              reduce using rule 14 (instruccion -> declaracion_normal .)
    RRETURN         reduce using rule 14 (instruccion -> declaracion_normal .)
    RWHILE          reduce using rule 14 (instruccion -> declaracion_normal .)
    $end            reduce using rule 14 (instruccion -> declaracion_normal .)
    LLAVEDER        reduce using rule 14 (instruccion -> declaracion_normal .)


state 6

    (6) instruccion -> condicional_ifs . PTCOMA
    (15) instruccion -> condicional_ifs .

    PTCOMA          shift and go to state 24
    RCONSOLE        reduce using rule 15 (instruccion -> condicional_ifs .)
    RLET            reduce using rule 15 (instruccion -> condicional_ifs .)
    RIF             reduce using rule 15 (instruccion -> condicional_ifs .)
    RFOR            reduce using rule 15 (instruccion -> condicional_ifs .)
    RFUNCTION       reduce using rule 15 (instruccion -> condicional_ifs .)
    ID              reduce using rule 15 (instruccion -> condicional_ifs .)
    RRETURN         reduce using rule 15 (instruccion -> condicional_ifs .)
    RWHILE          reduce using rule 15 (instruccion -> condicional_ifs .)
    $end            reduce using rule 15 (instruccion -> condicional_ifs .)
    LLAVEDER        reduce using rule 15 (instruccion -> condicional_ifs .)


state 7

    (7) instruccion -> ciclo_for . PTCOMA
    (16) instruccion -> ciclo_for .

    PTCOMA          shift and go to state 25
    RCONSOLE        reduce using rule 16 (instruccion -> ciclo_for .)
    RLET            reduce using rule 16 (instruccion -> ciclo_for .)
    RIF             reduce using rule 16 (instruccion -> ciclo_for .)
    RFOR            reduce using rule 16 (instruccion -> ciclo_for .)
    RFUNCTION       reduce using rule 16 (instruccion -> ciclo_for .)
    ID              reduce using rule 16 (instruccion -> ciclo_for .)
    RRETURN         reduce using rule 16 (instruccion -> ciclo_for .)
    RWHILE          reduce using rule 16 (instruccion -> ciclo_for .)
    $end            reduce using rule 16 (instruccion -> ciclo_for .)
    LLAVEDER        reduce using rule 16 (instruccion -> ciclo_for .)


state 8

    (8) instruccion -> funcion . PTCOMA
    (17) instruccion -> funcion .

    PTCOMA          shift and go to state 26
    RCONSOLE        reduce using rule 17 (instruccion -> funcion .)
    RLET            reduce using rule 17 (instruccion -> funcion .)
    RIF             reduce using rule 17 (instruccion -> funcion .)
    RFOR            reduce using rule 17 (instruccion -> funcion .)
    RFUNCTION       reduce using rule 17 (instruccion -> funcion .)
    ID              reduce using rule 17 (instruccion -> funcion .)
    RRETURN         reduce using rule 17 (instruccion -> funcion .)
    RWHILE          reduce using rule 17 (instruccion -> funcion .)
    $end            reduce using rule 17 (instruccion -> funcion .)
    LLAVEDER        reduce using rule 17 (instruccion -> funcion .)


state 9

    (9) instruccion -> llamada_funcion . PTCOMA
    (18) instruccion -> llamada_funcion .

    PTCOMA          shift and go to state 27
    RCONSOLE        reduce using rule 18 (instruccion -> llamada_funcion .)
    RLET            reduce using rule 18 (instruccion -> llamada_funcion .)
    RIF             reduce using rule 18 (instruccion -> llamada_funcion .)
    RFOR            reduce using rule 18 (instruccion -> llamada_funcion .)
    RFUNCTION       reduce using rule 18 (instruccion -> llamada_funcion .)
    ID              reduce using rule 18 (instruccion -> llamada_funcion .)
    RRETURN         reduce using rule 18 (instruccion -> llamada_funcion .)
    RWHILE          reduce using rule 18 (instruccion -> llamada_funcion .)
    $end            reduce using rule 18 (instruccion -> llamada_funcion .)
    LLAVEDER        reduce using rule 18 (instruccion -> llamada_funcion .)


state 10

    (10) instruccion -> r_return . PTCOMA
    (19) instruccion -> r_return .

    PTCOMA          shift and go to state 28
    RCONSOLE        reduce using rule 19 (instruccion -> r_return .)
    RLET            reduce using rule 19 (instruccion -> r_return .)
    RIF             reduce using rule 19 (instruccion -> r_return .)
    RFOR            reduce using rule 19 (instruccion -> r_return .)
    RFUNCTION       reduce using rule 19 (instruccion -> r_return .)
    ID              reduce using rule 19 (instruccion -> r_return .)
    RRETURN         reduce using rule 19 (instruccion -> r_return .)
    RWHILE          reduce using rule 19 (instruccion -> r_return .)
    $end            reduce using rule 19 (instruccion -> r_return .)
    LLAVEDER        reduce using rule 19 (instruccion -> r_return .)


state 11

    (11) instruccion -> asignacion . PTCOMA
    (20) instruccion -> asignacion .

    PTCOMA          shift and go to state 29
    RCONSOLE        reduce using rule 20 (instruccion -> asignacion .)
    RLET            reduce using rule 20 (instruccion -> asignacion .)
    RIF             reduce using rule 20 (instruccion -> asignacion .)
    RFOR            reduce using rule 20 (instruccion -> asignacion .)
    RFUNCTION       reduce using rule 20 (instruccion -> asignacion .)
    ID              reduce using rule 20 (instruccion -> asignacion .)
    RRETURN         reduce using rule 20 (instruccion -> asignacion .)
    RWHILE          reduce using rule 20 (instruccion -> asignacion .)
    $end            reduce using rule 20 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 20 (instruccion -> asignacion .)


state 12

    (12) instruccion -> ciclo_while . PTCOMA
    (21) instruccion -> ciclo_while .

    PTCOMA          shift and go to state 30
    RCONSOLE        reduce using rule 21 (instruccion -> ciclo_while .)
    RLET            reduce using rule 21 (instruccion -> ciclo_while .)
    RIF             reduce using rule 21 (instruccion -> ciclo_while .)
    RFOR            reduce using rule 21 (instruccion -> ciclo_while .)
    RFUNCTION       reduce using rule 21 (instruccion -> ciclo_while .)
    ID              reduce using rule 21 (instruccion -> ciclo_while .)
    RRETURN         reduce using rule 21 (instruccion -> ciclo_while .)
    RWHILE          reduce using rule 21 (instruccion -> ciclo_while .)
    $end            reduce using rule 21 (instruccion -> ciclo_while .)
    LLAVEDER        reduce using rule 21 (instruccion -> ciclo_while .)


state 13

    (22) imprimir -> RCONSOLE . PUNTO RLOG PARIZQ expresion PARDER

    PUNTO           shift and go to state 31


state 14

    (24) declaracion_normal -> RLET . ID DOSPUNTOS tipo IGUAL expresion
    (25) declaracion_normal -> RLET . ID
    (26) declaracion_normal -> RLET . ID DOSPUNTOS tipo
    (27) declaracion_normal -> RLET . ID IGUAL expresion

    ID              shift and go to state 32


state 15

    (30) llamada_funcion -> ID . PARIZQ PARDER
    (31) llamada_funcion -> ID . PARIZQ parametros_llamada PARDER
    (23) asignacion -> ID . IGUAL expresion

    PARIZQ          shift and go to state 33
    IGUAL           shift and go to state 34


state 16

    (42) condicional_ifs -> RIF . condicional_if
    (43) condicional_if -> . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) condicional_if -> . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (45) condicional_if -> . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if

    PARIZQ          shift and go to state 36

    condicional_if                 shift and go to state 35

state 17

    (46) ciclo_for -> RFOR . PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 37


state 18

    (28) funcion -> RFUNCTION . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) funcion -> RFUNCTION . ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 38


state 19

    (41) r_return -> RRETURN . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 39
    llamada_funcion                shift and go to state 40

state 20

    (47) ciclo_while -> RWHILE . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 51


state 21

    (2) instrucciones -> instrucciones instruccion .

    RCONSOLE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RLET            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RIF             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RFOR            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RFUNCTION       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RRETURN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RWHILE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 22

    (4) instruccion -> imprimir PTCOMA .

    RCONSOLE        reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    RLET            reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    RIF             reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    RFOR            reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    RFUNCTION       reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    ID              reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    RRETURN         reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    RWHILE          reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    $end            reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    LLAVEDER        reduce using rule 4 (instruccion -> imprimir PTCOMA .)


state 23

    (5) instruccion -> declaracion_normal PTCOMA .

    RCONSOLE        reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    RLET            reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    RIF             reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    RFOR            reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    RFUNCTION       reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    ID              reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    RRETURN         reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    RWHILE          reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    $end            reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    LLAVEDER        reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)


state 24

    (6) instruccion -> condicional_ifs PTCOMA .

    RCONSOLE        reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    RLET            reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    RIF             reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    RFOR            reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    RFUNCTION       reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    ID              reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    RRETURN         reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    RWHILE          reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    $end            reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    LLAVEDER        reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)


state 25

    (7) instruccion -> ciclo_for PTCOMA .

    RCONSOLE        reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    RLET            reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    RIF             reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    RFOR            reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    RFUNCTION       reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    ID              reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    RRETURN         reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    RWHILE          reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    $end            reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    LLAVEDER        reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)


state 26

    (8) instruccion -> funcion PTCOMA .

    RCONSOLE        reduce using rule 8 (instruccion -> funcion PTCOMA .)
    RLET            reduce using rule 8 (instruccion -> funcion PTCOMA .)
    RIF             reduce using rule 8 (instruccion -> funcion PTCOMA .)
    RFOR            reduce using rule 8 (instruccion -> funcion PTCOMA .)
    RFUNCTION       reduce using rule 8 (instruccion -> funcion PTCOMA .)
    ID              reduce using rule 8 (instruccion -> funcion PTCOMA .)
    RRETURN         reduce using rule 8 (instruccion -> funcion PTCOMA .)
    RWHILE          reduce using rule 8 (instruccion -> funcion PTCOMA .)
    $end            reduce using rule 8 (instruccion -> funcion PTCOMA .)
    LLAVEDER        reduce using rule 8 (instruccion -> funcion PTCOMA .)


state 27

    (9) instruccion -> llamada_funcion PTCOMA .

    RCONSOLE        reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    RLET            reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    RIF             reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    RFOR            reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    RFUNCTION       reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    ID              reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    RRETURN         reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    RWHILE          reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    $end            reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    LLAVEDER        reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)


state 28

    (10) instruccion -> r_return PTCOMA .

    RCONSOLE        reduce using rule 10 (instruccion -> r_return PTCOMA .)
    RLET            reduce using rule 10 (instruccion -> r_return PTCOMA .)
    RIF             reduce using rule 10 (instruccion -> r_return PTCOMA .)
    RFOR            reduce using rule 10 (instruccion -> r_return PTCOMA .)
    RFUNCTION       reduce using rule 10 (instruccion -> r_return PTCOMA .)
    ID              reduce using rule 10 (instruccion -> r_return PTCOMA .)
    RRETURN         reduce using rule 10 (instruccion -> r_return PTCOMA .)
    RWHILE          reduce using rule 10 (instruccion -> r_return PTCOMA .)
    $end            reduce using rule 10 (instruccion -> r_return PTCOMA .)
    LLAVEDER        reduce using rule 10 (instruccion -> r_return PTCOMA .)


state 29

    (11) instruccion -> asignacion PTCOMA .

    RCONSOLE        reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    RLET            reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    RIF             reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    RFOR            reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    RFUNCTION       reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    ID              reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    RRETURN         reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    RWHILE          reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    $end            reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    LLAVEDER        reduce using rule 11 (instruccion -> asignacion PTCOMA .)


state 30

    (12) instruccion -> ciclo_while PTCOMA .

    RCONSOLE        reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    RLET            reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    RIF             reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    RFOR            reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    RFUNCTION       reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    ID              reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    RRETURN         reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    RWHILE          reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    $end            reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)
    LLAVEDER        reduce using rule 12 (instruccion -> ciclo_while PTCOMA .)


state 31

    (22) imprimir -> RCONSOLE PUNTO . RLOG PARIZQ expresion PARDER

    RLOG            shift and go to state 52


state 32

    (24) declaracion_normal -> RLET ID . DOSPUNTOS tipo IGUAL expresion
    (25) declaracion_normal -> RLET ID .
    (26) declaracion_normal -> RLET ID . DOSPUNTOS tipo
    (27) declaracion_normal -> RLET ID . IGUAL expresion

    DOSPUNTOS       shift and go to state 53
    PTCOMA          reduce using rule 25 (declaracion_normal -> RLET ID .)
    RCONSOLE        reduce using rule 25 (declaracion_normal -> RLET ID .)
    RLET            reduce using rule 25 (declaracion_normal -> RLET ID .)
    RIF             reduce using rule 25 (declaracion_normal -> RLET ID .)
    RFOR            reduce using rule 25 (declaracion_normal -> RLET ID .)
    RFUNCTION       reduce using rule 25 (declaracion_normal -> RLET ID .)
    ID              reduce using rule 25 (declaracion_normal -> RLET ID .)
    RRETURN         reduce using rule 25 (declaracion_normal -> RLET ID .)
    RWHILE          reduce using rule 25 (declaracion_normal -> RLET ID .)
    $end            reduce using rule 25 (declaracion_normal -> RLET ID .)
    LLAVEDER        reduce using rule 25 (declaracion_normal -> RLET ID .)
    IGUAL           shift and go to state 54


state 33

    (30) llamada_funcion -> ID PARIZQ . PARDER
    (31) llamada_funcion -> ID PARIZQ . parametros_llamada PARDER
    (37) parametros_llamada -> . parametros_llamada COMA parametro_ll
    (38) parametros_llamada -> . parametro_ll
    (39) parametro_ll -> . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    PARDER          shift and go to state 55
    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    parametros_llamada             shift and go to state 56
    parametro_ll                   shift and go to state 57
    expresion                      shift and go to state 58
    llamada_funcion                shift and go to state 40

state 34

    (23) asignacion -> ID IGUAL . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 59
    llamada_funcion                shift and go to state 40

state 35

    (42) condicional_ifs -> RIF condicional_if .

    PTCOMA          reduce using rule 42 (condicional_ifs -> RIF condicional_if .)
    RCONSOLE        reduce using rule 42 (condicional_ifs -> RIF condicional_if .)
    RLET            reduce using rule 42 (condicional_ifs -> RIF condicional_if .)
    RIF             reduce using rule 42 (condicional_ifs -> RIF condicional_if .)
    RFOR            reduce using rule 42 (condicional_ifs -> RIF condicional_if .)
    RFUNCTION       reduce using rule 42 (condicional_ifs -> RIF condicional_if .)
    ID              reduce using rule 42 (condicional_ifs -> RIF condicional_if .)
    RRETURN         reduce using rule 42 (condicional_ifs -> RIF condicional_if .)
    RWHILE          reduce using rule 42 (condicional_ifs -> RIF condicional_if .)
    $end            reduce using rule 42 (condicional_ifs -> RIF condicional_if .)
    LLAVEDER        reduce using rule 42 (condicional_ifs -> RIF condicional_if .)


state 36

    (43) condicional_if -> PARIZQ . expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) condicional_if -> PARIZQ . expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (45) condicional_if -> PARIZQ . expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 60
    llamada_funcion                shift and go to state 40

state 37

    (46) ciclo_for -> RFOR PARIZQ . declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (24) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (25) declaracion_normal -> . RLET ID
    (26) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (27) declaracion_normal -> . RLET ID IGUAL expresion

    RLET            shift and go to state 14

    declaracion_normal             shift and go to state 61

state 38

    (28) funcion -> RFUNCTION ID . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) funcion -> RFUNCTION ID . PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 62


state 39

    (41) r_return -> RRETURN expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    PTCOMA          reduce using rule 41 (r_return -> RRETURN expresion .)
    RCONSOLE        reduce using rule 41 (r_return -> RRETURN expresion .)
    RLET            reduce using rule 41 (r_return -> RRETURN expresion .)
    RIF             reduce using rule 41 (r_return -> RRETURN expresion .)
    RFOR            reduce using rule 41 (r_return -> RRETURN expresion .)
    RFUNCTION       reduce using rule 41 (r_return -> RRETURN expresion .)
    ID              reduce using rule 41 (r_return -> RRETURN expresion .)
    RRETURN         reduce using rule 41 (r_return -> RRETURN expresion .)
    RWHILE          reduce using rule 41 (r_return -> RRETURN expresion .)
    $end            reduce using rule 41 (r_return -> RRETURN expresion .)
    LLAVEDER        reduce using rule 41 (r_return -> RRETURN expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    MAYORQ          shift and go to state 69
    MENORQ          shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    POT             shift and go to state 75
    MOD             shift and go to state 76


state 40

    (40) expresion -> llamada_funcion .

    MAS             reduce using rule 40 (expresion -> llamada_funcion .)
    MENOS           reduce using rule 40 (expresion -> llamada_funcion .)
    POR             reduce using rule 40 (expresion -> llamada_funcion .)
    DIV             reduce using rule 40 (expresion -> llamada_funcion .)
    IGUALDAD        reduce using rule 40 (expresion -> llamada_funcion .)
    DESIGUALDAD     reduce using rule 40 (expresion -> llamada_funcion .)
    MAYORQ          reduce using rule 40 (expresion -> llamada_funcion .)
    MENORQ          reduce using rule 40 (expresion -> llamada_funcion .)
    MAYORIGUAL      reduce using rule 40 (expresion -> llamada_funcion .)
    MENORIGUAL      reduce using rule 40 (expresion -> llamada_funcion .)
    AND             reduce using rule 40 (expresion -> llamada_funcion .)
    OR              reduce using rule 40 (expresion -> llamada_funcion .)
    POT             reduce using rule 40 (expresion -> llamada_funcion .)
    MOD             reduce using rule 40 (expresion -> llamada_funcion .)
    PTCOMA          reduce using rule 40 (expresion -> llamada_funcion .)
    RCONSOLE        reduce using rule 40 (expresion -> llamada_funcion .)
    RLET            reduce using rule 40 (expresion -> llamada_funcion .)
    RIF             reduce using rule 40 (expresion -> llamada_funcion .)
    RFOR            reduce using rule 40 (expresion -> llamada_funcion .)
    RFUNCTION       reduce using rule 40 (expresion -> llamada_funcion .)
    ID              reduce using rule 40 (expresion -> llamada_funcion .)
    RRETURN         reduce using rule 40 (expresion -> llamada_funcion .)
    RWHILE          reduce using rule 40 (expresion -> llamada_funcion .)
    $end            reduce using rule 40 (expresion -> llamada_funcion .)
    LLAVEDER        reduce using rule 40 (expresion -> llamada_funcion .)
    PARDER          reduce using rule 40 (expresion -> llamada_funcion .)
    COMA            reduce using rule 40 (expresion -> llamada_funcion .)


state 41

    (65) expresion -> MENOS . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 77
    llamada_funcion                shift and go to state 40

state 42

    (66) expresion -> NOT . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 78
    llamada_funcion                shift and go to state 40

state 43

    (69) expresion -> ID .
    (30) llamada_funcion -> ID . PARIZQ PARDER
    (31) llamada_funcion -> ID . PARIZQ parametros_llamada PARDER

    MAS             reduce using rule 69 (expresion -> ID .)
    MENOS           reduce using rule 69 (expresion -> ID .)
    POR             reduce using rule 69 (expresion -> ID .)
    DIV             reduce using rule 69 (expresion -> ID .)
    IGUALDAD        reduce using rule 69 (expresion -> ID .)
    DESIGUALDAD     reduce using rule 69 (expresion -> ID .)
    MAYORQ          reduce using rule 69 (expresion -> ID .)
    MENORQ          reduce using rule 69 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 69 (expresion -> ID .)
    MENORIGUAL      reduce using rule 69 (expresion -> ID .)
    AND             reduce using rule 69 (expresion -> ID .)
    OR              reduce using rule 69 (expresion -> ID .)
    POT             reduce using rule 69 (expresion -> ID .)
    MOD             reduce using rule 69 (expresion -> ID .)
    PTCOMA          reduce using rule 69 (expresion -> ID .)
    RCONSOLE        reduce using rule 69 (expresion -> ID .)
    RLET            reduce using rule 69 (expresion -> ID .)
    RIF             reduce using rule 69 (expresion -> ID .)
    RFOR            reduce using rule 69 (expresion -> ID .)
    RFUNCTION       reduce using rule 69 (expresion -> ID .)
    ID              reduce using rule 69 (expresion -> ID .)
    RRETURN         reduce using rule 69 (expresion -> ID .)
    RWHILE          reduce using rule 69 (expresion -> ID .)
    $end            reduce using rule 69 (expresion -> ID .)
    LLAVEDER        reduce using rule 69 (expresion -> ID .)
    PARDER          reduce using rule 69 (expresion -> ID .)
    COMA            reduce using rule 69 (expresion -> ID .)
    PARIZQ          shift and go to state 33


state 44

    (70) expresion -> RNULL .

    MAS             reduce using rule 70 (expresion -> RNULL .)
    MENOS           reduce using rule 70 (expresion -> RNULL .)
    POR             reduce using rule 70 (expresion -> RNULL .)
    DIV             reduce using rule 70 (expresion -> RNULL .)
    IGUALDAD        reduce using rule 70 (expresion -> RNULL .)
    DESIGUALDAD     reduce using rule 70 (expresion -> RNULL .)
    MAYORQ          reduce using rule 70 (expresion -> RNULL .)
    MENORQ          reduce using rule 70 (expresion -> RNULL .)
    MAYORIGUAL      reduce using rule 70 (expresion -> RNULL .)
    MENORIGUAL      reduce using rule 70 (expresion -> RNULL .)
    AND             reduce using rule 70 (expresion -> RNULL .)
    OR              reduce using rule 70 (expresion -> RNULL .)
    POT             reduce using rule 70 (expresion -> RNULL .)
    MOD             reduce using rule 70 (expresion -> RNULL .)
    PTCOMA          reduce using rule 70 (expresion -> RNULL .)
    RCONSOLE        reduce using rule 70 (expresion -> RNULL .)
    RLET            reduce using rule 70 (expresion -> RNULL .)
    RIF             reduce using rule 70 (expresion -> RNULL .)
    RFOR            reduce using rule 70 (expresion -> RNULL .)
    RFUNCTION       reduce using rule 70 (expresion -> RNULL .)
    ID              reduce using rule 70 (expresion -> RNULL .)
    RRETURN         reduce using rule 70 (expresion -> RNULL .)
    RWHILE          reduce using rule 70 (expresion -> RNULL .)
    $end            reduce using rule 70 (expresion -> RNULL .)
    LLAVEDER        reduce using rule 70 (expresion -> RNULL .)
    PARDER          reduce using rule 70 (expresion -> RNULL .)
    COMA            reduce using rule 70 (expresion -> RNULL .)


state 45

    (71) expresion -> RANY .

    MAS             reduce using rule 71 (expresion -> RANY .)
    MENOS           reduce using rule 71 (expresion -> RANY .)
    POR             reduce using rule 71 (expresion -> RANY .)
    DIV             reduce using rule 71 (expresion -> RANY .)
    IGUALDAD        reduce using rule 71 (expresion -> RANY .)
    DESIGUALDAD     reduce using rule 71 (expresion -> RANY .)
    MAYORQ          reduce using rule 71 (expresion -> RANY .)
    MENORQ          reduce using rule 71 (expresion -> RANY .)
    MAYORIGUAL      reduce using rule 71 (expresion -> RANY .)
    MENORIGUAL      reduce using rule 71 (expresion -> RANY .)
    AND             reduce using rule 71 (expresion -> RANY .)
    OR              reduce using rule 71 (expresion -> RANY .)
    POT             reduce using rule 71 (expresion -> RANY .)
    MOD             reduce using rule 71 (expresion -> RANY .)
    PTCOMA          reduce using rule 71 (expresion -> RANY .)
    RCONSOLE        reduce using rule 71 (expresion -> RANY .)
    RLET            reduce using rule 71 (expresion -> RANY .)
    RIF             reduce using rule 71 (expresion -> RANY .)
    RFOR            reduce using rule 71 (expresion -> RANY .)
    RFUNCTION       reduce using rule 71 (expresion -> RANY .)
    ID              reduce using rule 71 (expresion -> RANY .)
    RRETURN         reduce using rule 71 (expresion -> RANY .)
    RWHILE          reduce using rule 71 (expresion -> RANY .)
    $end            reduce using rule 71 (expresion -> RANY .)
    LLAVEDER        reduce using rule 71 (expresion -> RANY .)
    PARDER          reduce using rule 71 (expresion -> RANY .)
    COMA            reduce using rule 71 (expresion -> RANY .)


state 46

    (72) expresion -> ENTERO .

    MAS             reduce using rule 72 (expresion -> ENTERO .)
    MENOS           reduce using rule 72 (expresion -> ENTERO .)
    POR             reduce using rule 72 (expresion -> ENTERO .)
    DIV             reduce using rule 72 (expresion -> ENTERO .)
    IGUALDAD        reduce using rule 72 (expresion -> ENTERO .)
    DESIGUALDAD     reduce using rule 72 (expresion -> ENTERO .)
    MAYORQ          reduce using rule 72 (expresion -> ENTERO .)
    MENORQ          reduce using rule 72 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 72 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 72 (expresion -> ENTERO .)
    AND             reduce using rule 72 (expresion -> ENTERO .)
    OR              reduce using rule 72 (expresion -> ENTERO .)
    POT             reduce using rule 72 (expresion -> ENTERO .)
    MOD             reduce using rule 72 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 72 (expresion -> ENTERO .)
    RCONSOLE        reduce using rule 72 (expresion -> ENTERO .)
    RLET            reduce using rule 72 (expresion -> ENTERO .)
    RIF             reduce using rule 72 (expresion -> ENTERO .)
    RFOR            reduce using rule 72 (expresion -> ENTERO .)
    RFUNCTION       reduce using rule 72 (expresion -> ENTERO .)
    ID              reduce using rule 72 (expresion -> ENTERO .)
    RRETURN         reduce using rule 72 (expresion -> ENTERO .)
    RWHILE          reduce using rule 72 (expresion -> ENTERO .)
    $end            reduce using rule 72 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 72 (expresion -> ENTERO .)
    PARDER          reduce using rule 72 (expresion -> ENTERO .)
    COMA            reduce using rule 72 (expresion -> ENTERO .)


state 47

    (73) expresion -> DECIMAL .

    MAS             reduce using rule 73 (expresion -> DECIMAL .)
    MENOS           reduce using rule 73 (expresion -> DECIMAL .)
    POR             reduce using rule 73 (expresion -> DECIMAL .)
    DIV             reduce using rule 73 (expresion -> DECIMAL .)
    IGUALDAD        reduce using rule 73 (expresion -> DECIMAL .)
    DESIGUALDAD     reduce using rule 73 (expresion -> DECIMAL .)
    MAYORQ          reduce using rule 73 (expresion -> DECIMAL .)
    MENORQ          reduce using rule 73 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 73 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 73 (expresion -> DECIMAL .)
    AND             reduce using rule 73 (expresion -> DECIMAL .)
    OR              reduce using rule 73 (expresion -> DECIMAL .)
    POT             reduce using rule 73 (expresion -> DECIMAL .)
    MOD             reduce using rule 73 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 73 (expresion -> DECIMAL .)
    RCONSOLE        reduce using rule 73 (expresion -> DECIMAL .)
    RLET            reduce using rule 73 (expresion -> DECIMAL .)
    RIF             reduce using rule 73 (expresion -> DECIMAL .)
    RFOR            reduce using rule 73 (expresion -> DECIMAL .)
    RFUNCTION       reduce using rule 73 (expresion -> DECIMAL .)
    ID              reduce using rule 73 (expresion -> DECIMAL .)
    RRETURN         reduce using rule 73 (expresion -> DECIMAL .)
    RWHILE          reduce using rule 73 (expresion -> DECIMAL .)
    $end            reduce using rule 73 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 73 (expresion -> DECIMAL .)
    PARDER          reduce using rule 73 (expresion -> DECIMAL .)
    COMA            reduce using rule 73 (expresion -> DECIMAL .)


state 48

    (74) expresion -> CADENA .

    MAS             reduce using rule 74 (expresion -> CADENA .)
    MENOS           reduce using rule 74 (expresion -> CADENA .)
    POR             reduce using rule 74 (expresion -> CADENA .)
    DIV             reduce using rule 74 (expresion -> CADENA .)
    IGUALDAD        reduce using rule 74 (expresion -> CADENA .)
    DESIGUALDAD     reduce using rule 74 (expresion -> CADENA .)
    MAYORQ          reduce using rule 74 (expresion -> CADENA .)
    MENORQ          reduce using rule 74 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 74 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 74 (expresion -> CADENA .)
    AND             reduce using rule 74 (expresion -> CADENA .)
    OR              reduce using rule 74 (expresion -> CADENA .)
    POT             reduce using rule 74 (expresion -> CADENA .)
    MOD             reduce using rule 74 (expresion -> CADENA .)
    PTCOMA          reduce using rule 74 (expresion -> CADENA .)
    RCONSOLE        reduce using rule 74 (expresion -> CADENA .)
    RLET            reduce using rule 74 (expresion -> CADENA .)
    RIF             reduce using rule 74 (expresion -> CADENA .)
    RFOR            reduce using rule 74 (expresion -> CADENA .)
    RFUNCTION       reduce using rule 74 (expresion -> CADENA .)
    ID              reduce using rule 74 (expresion -> CADENA .)
    RRETURN         reduce using rule 74 (expresion -> CADENA .)
    RWHILE          reduce using rule 74 (expresion -> CADENA .)
    $end            reduce using rule 74 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 74 (expresion -> CADENA .)
    PARDER          reduce using rule 74 (expresion -> CADENA .)
    COMA            reduce using rule 74 (expresion -> CADENA .)


state 49

    (75) expresion -> RTRUE .

    MAS             reduce using rule 75 (expresion -> RTRUE .)
    MENOS           reduce using rule 75 (expresion -> RTRUE .)
    POR             reduce using rule 75 (expresion -> RTRUE .)
    DIV             reduce using rule 75 (expresion -> RTRUE .)
    IGUALDAD        reduce using rule 75 (expresion -> RTRUE .)
    DESIGUALDAD     reduce using rule 75 (expresion -> RTRUE .)
    MAYORQ          reduce using rule 75 (expresion -> RTRUE .)
    MENORQ          reduce using rule 75 (expresion -> RTRUE .)
    MAYORIGUAL      reduce using rule 75 (expresion -> RTRUE .)
    MENORIGUAL      reduce using rule 75 (expresion -> RTRUE .)
    AND             reduce using rule 75 (expresion -> RTRUE .)
    OR              reduce using rule 75 (expresion -> RTRUE .)
    POT             reduce using rule 75 (expresion -> RTRUE .)
    MOD             reduce using rule 75 (expresion -> RTRUE .)
    PTCOMA          reduce using rule 75 (expresion -> RTRUE .)
    RCONSOLE        reduce using rule 75 (expresion -> RTRUE .)
    RLET            reduce using rule 75 (expresion -> RTRUE .)
    RIF             reduce using rule 75 (expresion -> RTRUE .)
    RFOR            reduce using rule 75 (expresion -> RTRUE .)
    RFUNCTION       reduce using rule 75 (expresion -> RTRUE .)
    ID              reduce using rule 75 (expresion -> RTRUE .)
    RRETURN         reduce using rule 75 (expresion -> RTRUE .)
    RWHILE          reduce using rule 75 (expresion -> RTRUE .)
    $end            reduce using rule 75 (expresion -> RTRUE .)
    LLAVEDER        reduce using rule 75 (expresion -> RTRUE .)
    PARDER          reduce using rule 75 (expresion -> RTRUE .)
    COMA            reduce using rule 75 (expresion -> RTRUE .)


state 50

    (76) expresion -> RFALSE .

    MAS             reduce using rule 76 (expresion -> RFALSE .)
    MENOS           reduce using rule 76 (expresion -> RFALSE .)
    POR             reduce using rule 76 (expresion -> RFALSE .)
    DIV             reduce using rule 76 (expresion -> RFALSE .)
    IGUALDAD        reduce using rule 76 (expresion -> RFALSE .)
    DESIGUALDAD     reduce using rule 76 (expresion -> RFALSE .)
    MAYORQ          reduce using rule 76 (expresion -> RFALSE .)
    MENORQ          reduce using rule 76 (expresion -> RFALSE .)
    MAYORIGUAL      reduce using rule 76 (expresion -> RFALSE .)
    MENORIGUAL      reduce using rule 76 (expresion -> RFALSE .)
    AND             reduce using rule 76 (expresion -> RFALSE .)
    OR              reduce using rule 76 (expresion -> RFALSE .)
    POT             reduce using rule 76 (expresion -> RFALSE .)
    MOD             reduce using rule 76 (expresion -> RFALSE .)
    PTCOMA          reduce using rule 76 (expresion -> RFALSE .)
    RCONSOLE        reduce using rule 76 (expresion -> RFALSE .)
    RLET            reduce using rule 76 (expresion -> RFALSE .)
    RIF             reduce using rule 76 (expresion -> RFALSE .)
    RFOR            reduce using rule 76 (expresion -> RFALSE .)
    RFUNCTION       reduce using rule 76 (expresion -> RFALSE .)
    ID              reduce using rule 76 (expresion -> RFALSE .)
    RRETURN         reduce using rule 76 (expresion -> RFALSE .)
    RWHILE          reduce using rule 76 (expresion -> RFALSE .)
    $end            reduce using rule 76 (expresion -> RFALSE .)
    LLAVEDER        reduce using rule 76 (expresion -> RFALSE .)
    PARDER          reduce using rule 76 (expresion -> RFALSE .)
    COMA            reduce using rule 76 (expresion -> RFALSE .)


state 51

    (47) ciclo_while -> RWHILE PARIZQ . expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 79
    llamada_funcion                shift and go to state 40

state 52

    (22) imprimir -> RCONSOLE PUNTO RLOG . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 80


state 53

    (24) declaracion_normal -> RLET ID DOSPUNTOS . tipo IGUAL expresion
    (26) declaracion_normal -> RLET ID DOSPUNTOS . tipo
    (48) tipo -> . RSTRING
    (49) tipo -> . RNUMBER
    (50) tipo -> . RBOOLEAN

    RSTRING         shift and go to state 82
    RNUMBER         shift and go to state 83
    RBOOLEAN        shift and go to state 84

    tipo                           shift and go to state 81

state 54

    (27) declaracion_normal -> RLET ID IGUAL . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 85
    llamada_funcion                shift and go to state 40

state 55

    (30) llamada_funcion -> ID PARIZQ PARDER .

    PTCOMA          reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    RCONSOLE        reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    RLET            reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    RIF             reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    RFOR            reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    RFUNCTION       reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    ID              reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    RRETURN         reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    RWHILE          reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    $end            reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    MAS             reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    POR             reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    DIV             reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    IGUALDAD        reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    DESIGUALDAD     reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    MAYORQ          reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    MENORQ          reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    AND             reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    OR              reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    POT             reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    MOD             reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)
    COMA            reduce using rule 30 (llamada_funcion -> ID PARIZQ PARDER .)


state 56

    (31) llamada_funcion -> ID PARIZQ parametros_llamada . PARDER
    (37) parametros_llamada -> parametros_llamada . COMA parametro_ll

    PARDER          shift and go to state 86
    COMA            shift and go to state 87


state 57

    (38) parametros_llamada -> parametro_ll .

    PARDER          reduce using rule 38 (parametros_llamada -> parametro_ll .)
    COMA            reduce using rule 38 (parametros_llamada -> parametro_ll .)


state 58

    (39) parametro_ll -> expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    PARDER          reduce using rule 39 (parametro_ll -> expresion .)
    COMA            reduce using rule 39 (parametro_ll -> expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    MAYORQ          shift and go to state 69
    MENORQ          shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    POT             shift and go to state 75
    MOD             shift and go to state 76


state 59

    (23) asignacion -> ID IGUAL expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    PTCOMA          reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    RCONSOLE        reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    RLET            reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    RIF             reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    RFOR            reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    RFUNCTION       reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    ID              reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    RRETURN         reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    RWHILE          reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    $end            reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    LLAVEDER        reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    MAYORQ          shift and go to state 69
    MENORQ          shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    POT             shift and go to state 75
    MOD             shift and go to state 76


state 60

    (43) condicional_if -> PARIZQ expresion . PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) condicional_if -> PARIZQ expresion . PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (45) condicional_if -> PARIZQ expresion . PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    PARDER          shift and go to state 88
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    MAYORQ          shift and go to state 69
    MENORQ          shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    POT             shift and go to state 75
    MOD             shift and go to state 76


state 61

    (46) ciclo_for -> RFOR PARIZQ declaracion_normal . PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    PTCOMA          shift and go to state 89


state 62

    (28) funcion -> RFUNCTION ID PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) funcion -> RFUNCTION ID PARIZQ . parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) parametros -> . parametros COMA parametro
    (33) parametros -> . parametro
    (34) parametro -> . RLET ID DOSPUNTOS tipo
    (35) parametro -> . ID DOSPUNTOS tipo
    (36) parametro -> . ID

    PARDER          shift and go to state 91
    RLET            shift and go to state 94
    ID              shift and go to state 90

    parametros                     shift and go to state 92
    parametro                      shift and go to state 93

state 63

    (51) expresion -> expresion MAS . expresion
    (67) expresion -> expresion MAS . MAS
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MAS             shift and go to state 96
    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 95
    llamada_funcion                shift and go to state 40

state 64

    (52) expresion -> expresion MENOS . expresion
    (68) expresion -> expresion MENOS . MENOS
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 98
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 97
    llamada_funcion                shift and go to state 40

state 65

    (53) expresion -> expresion POR . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 99
    llamada_funcion                shift and go to state 40

state 66

    (54) expresion -> expresion DIV . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 100
    llamada_funcion                shift and go to state 40

state 67

    (55) expresion -> expresion IGUALDAD . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 101
    llamada_funcion                shift and go to state 40

state 68

    (56) expresion -> expresion DESIGUALDAD . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 102
    llamada_funcion                shift and go to state 40

state 69

    (57) expresion -> expresion MAYORQ . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 103
    llamada_funcion                shift and go to state 40

state 70

    (58) expresion -> expresion MENORQ . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 104
    llamada_funcion                shift and go to state 40

state 71

    (59) expresion -> expresion MAYORIGUAL . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 105
    llamada_funcion                shift and go to state 40

state 72

    (60) expresion -> expresion MENORIGUAL . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 106
    llamada_funcion                shift and go to state 40

state 73

    (61) expresion -> expresion AND . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 107
    llamada_funcion                shift and go to state 40

state 74

    (62) expresion -> expresion OR . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 108
    llamada_funcion                shift and go to state 40

state 75

    (63) expresion -> expresion POT . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 109
    llamada_funcion                shift and go to state 40

state 76

    (64) expresion -> expresion MOD . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 110
    llamada_funcion                shift and go to state 40

state 77

    (65) expresion -> MENOS expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 65 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 65 (expresion -> MENOS expresion .)
    POR             reduce using rule 65 (expresion -> MENOS expresion .)
    DIV             reduce using rule 65 (expresion -> MENOS expresion .)
    IGUALDAD        reduce using rule 65 (expresion -> MENOS expresion .)
    DESIGUALDAD     reduce using rule 65 (expresion -> MENOS expresion .)
    MAYORQ          reduce using rule 65 (expresion -> MENOS expresion .)
    MENORQ          reduce using rule 65 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 65 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 65 (expresion -> MENOS expresion .)
    AND             reduce using rule 65 (expresion -> MENOS expresion .)
    OR              reduce using rule 65 (expresion -> MENOS expresion .)
    POT             reduce using rule 65 (expresion -> MENOS expresion .)
    MOD             reduce using rule 65 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 65 (expresion -> MENOS expresion .)
    RCONSOLE        reduce using rule 65 (expresion -> MENOS expresion .)
    RLET            reduce using rule 65 (expresion -> MENOS expresion .)
    RIF             reduce using rule 65 (expresion -> MENOS expresion .)
    RFOR            reduce using rule 65 (expresion -> MENOS expresion .)
    RFUNCTION       reduce using rule 65 (expresion -> MENOS expresion .)
    ID              reduce using rule 65 (expresion -> MENOS expresion .)
    RRETURN         reduce using rule 65 (expresion -> MENOS expresion .)
    RWHILE          reduce using rule 65 (expresion -> MENOS expresion .)
    $end            reduce using rule 65 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 65 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 65 (expresion -> MENOS expresion .)
    COMA            reduce using rule 65 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIV             [ shift and go to state 66 ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! MAYORQ          [ shift and go to state 69 ]
  ! MENORQ          [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! POT             [ shift and go to state 75 ]
  ! MOD             [ shift and go to state 76 ]


state 78

    (66) expresion -> NOT expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    AND             reduce using rule 66 (expresion -> NOT expresion .)
    OR              reduce using rule 66 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 66 (expresion -> NOT expresion .)
    RCONSOLE        reduce using rule 66 (expresion -> NOT expresion .)
    RLET            reduce using rule 66 (expresion -> NOT expresion .)
    RIF             reduce using rule 66 (expresion -> NOT expresion .)
    RFOR            reduce using rule 66 (expresion -> NOT expresion .)
    RFUNCTION       reduce using rule 66 (expresion -> NOT expresion .)
    ID              reduce using rule 66 (expresion -> NOT expresion .)
    RRETURN         reduce using rule 66 (expresion -> NOT expresion .)
    RWHILE          reduce using rule 66 (expresion -> NOT expresion .)
    $end            reduce using rule 66 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 66 (expresion -> NOT expresion .)
    PARDER          reduce using rule 66 (expresion -> NOT expresion .)
    COMA            reduce using rule 66 (expresion -> NOT expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    MAYORQ          shift and go to state 69
    MENORQ          shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    POT             shift and go to state 75
    MOD             shift and go to state 76

  ! MAS             [ reduce using rule 66 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 66 (expresion -> NOT expresion .) ]
  ! POR             [ reduce using rule 66 (expresion -> NOT expresion .) ]
  ! DIV             [ reduce using rule 66 (expresion -> NOT expresion .) ]
  ! IGUALDAD        [ reduce using rule 66 (expresion -> NOT expresion .) ]
  ! DESIGUALDAD     [ reduce using rule 66 (expresion -> NOT expresion .) ]
  ! MAYORQ          [ reduce using rule 66 (expresion -> NOT expresion .) ]
  ! MENORQ          [ reduce using rule 66 (expresion -> NOT expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 66 (expresion -> NOT expresion .) ]
  ! MENORIGUAL      [ reduce using rule 66 (expresion -> NOT expresion .) ]
  ! POT             [ reduce using rule 66 (expresion -> NOT expresion .) ]
  ! MOD             [ reduce using rule 66 (expresion -> NOT expresion .) ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 79

    (47) ciclo_while -> RWHILE PARIZQ expresion . PARDER LLAVEIZQ instrucciones LLAVEDER
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    PARDER          shift and go to state 111
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    MAYORQ          shift and go to state 69
    MENORQ          shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    POT             shift and go to state 75
    MOD             shift and go to state 76


state 80

    (22) imprimir -> RCONSOLE PUNTO RLOG PARIZQ . expresion PARDER
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 112
    llamada_funcion                shift and go to state 40

state 81

    (24) declaracion_normal -> RLET ID DOSPUNTOS tipo . IGUAL expresion
    (26) declaracion_normal -> RLET ID DOSPUNTOS tipo .

    IGUAL           shift and go to state 113
    PTCOMA          reduce using rule 26 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    RCONSOLE        reduce using rule 26 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    RLET            reduce using rule 26 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    RIF             reduce using rule 26 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    RFOR            reduce using rule 26 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    RFUNCTION       reduce using rule 26 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    ID              reduce using rule 26 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    RRETURN         reduce using rule 26 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    RWHILE          reduce using rule 26 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    $end            reduce using rule 26 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)
    LLAVEDER        reduce using rule 26 (declaracion_normal -> RLET ID DOSPUNTOS tipo .)


state 82

    (48) tipo -> RSTRING .

    IGUAL           reduce using rule 48 (tipo -> RSTRING .)
    PTCOMA          reduce using rule 48 (tipo -> RSTRING .)
    RCONSOLE        reduce using rule 48 (tipo -> RSTRING .)
    RLET            reduce using rule 48 (tipo -> RSTRING .)
    RIF             reduce using rule 48 (tipo -> RSTRING .)
    RFOR            reduce using rule 48 (tipo -> RSTRING .)
    RFUNCTION       reduce using rule 48 (tipo -> RSTRING .)
    ID              reduce using rule 48 (tipo -> RSTRING .)
    RRETURN         reduce using rule 48 (tipo -> RSTRING .)
    RWHILE          reduce using rule 48 (tipo -> RSTRING .)
    $end            reduce using rule 48 (tipo -> RSTRING .)
    LLAVEDER        reduce using rule 48 (tipo -> RSTRING .)
    PARDER          reduce using rule 48 (tipo -> RSTRING .)
    COMA            reduce using rule 48 (tipo -> RSTRING .)


state 83

    (49) tipo -> RNUMBER .

    IGUAL           reduce using rule 49 (tipo -> RNUMBER .)
    PTCOMA          reduce using rule 49 (tipo -> RNUMBER .)
    RCONSOLE        reduce using rule 49 (tipo -> RNUMBER .)
    RLET            reduce using rule 49 (tipo -> RNUMBER .)
    RIF             reduce using rule 49 (tipo -> RNUMBER .)
    RFOR            reduce using rule 49 (tipo -> RNUMBER .)
    RFUNCTION       reduce using rule 49 (tipo -> RNUMBER .)
    ID              reduce using rule 49 (tipo -> RNUMBER .)
    RRETURN         reduce using rule 49 (tipo -> RNUMBER .)
    RWHILE          reduce using rule 49 (tipo -> RNUMBER .)
    $end            reduce using rule 49 (tipo -> RNUMBER .)
    LLAVEDER        reduce using rule 49 (tipo -> RNUMBER .)
    PARDER          reduce using rule 49 (tipo -> RNUMBER .)
    COMA            reduce using rule 49 (tipo -> RNUMBER .)


state 84

    (50) tipo -> RBOOLEAN .

    IGUAL           reduce using rule 50 (tipo -> RBOOLEAN .)
    PTCOMA          reduce using rule 50 (tipo -> RBOOLEAN .)
    RCONSOLE        reduce using rule 50 (tipo -> RBOOLEAN .)
    RLET            reduce using rule 50 (tipo -> RBOOLEAN .)
    RIF             reduce using rule 50 (tipo -> RBOOLEAN .)
    RFOR            reduce using rule 50 (tipo -> RBOOLEAN .)
    RFUNCTION       reduce using rule 50 (tipo -> RBOOLEAN .)
    ID              reduce using rule 50 (tipo -> RBOOLEAN .)
    RRETURN         reduce using rule 50 (tipo -> RBOOLEAN .)
    RWHILE          reduce using rule 50 (tipo -> RBOOLEAN .)
    $end            reduce using rule 50 (tipo -> RBOOLEAN .)
    LLAVEDER        reduce using rule 50 (tipo -> RBOOLEAN .)
    PARDER          reduce using rule 50 (tipo -> RBOOLEAN .)
    COMA            reduce using rule 50 (tipo -> RBOOLEAN .)


state 85

    (27) declaracion_normal -> RLET ID IGUAL expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    PTCOMA          reduce using rule 27 (declaracion_normal -> RLET ID IGUAL expresion .)
    RCONSOLE        reduce using rule 27 (declaracion_normal -> RLET ID IGUAL expresion .)
    RLET            reduce using rule 27 (declaracion_normal -> RLET ID IGUAL expresion .)
    RIF             reduce using rule 27 (declaracion_normal -> RLET ID IGUAL expresion .)
    RFOR            reduce using rule 27 (declaracion_normal -> RLET ID IGUAL expresion .)
    RFUNCTION       reduce using rule 27 (declaracion_normal -> RLET ID IGUAL expresion .)
    ID              reduce using rule 27 (declaracion_normal -> RLET ID IGUAL expresion .)
    RRETURN         reduce using rule 27 (declaracion_normal -> RLET ID IGUAL expresion .)
    RWHILE          reduce using rule 27 (declaracion_normal -> RLET ID IGUAL expresion .)
    $end            reduce using rule 27 (declaracion_normal -> RLET ID IGUAL expresion .)
    LLAVEDER        reduce using rule 27 (declaracion_normal -> RLET ID IGUAL expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    MAYORQ          shift and go to state 69
    MENORQ          shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    POT             shift and go to state 75
    MOD             shift and go to state 76


state 86

    (31) llamada_funcion -> ID PARIZQ parametros_llamada PARDER .

    PTCOMA          reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    RCONSOLE        reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    RLET            reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    RIF             reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    RFOR            reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    RFUNCTION       reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    ID              reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    RRETURN         reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    RWHILE          reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    $end            reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    MAS             reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    MENOS           reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    POR             reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    DIV             reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    IGUALDAD        reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    DESIGUALDAD     reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    MAYORQ          reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    MENORQ          reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    MAYORIGUAL      reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    MENORIGUAL      reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    AND             reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    OR              reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    POT             reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    MOD             reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    LLAVEDER        reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    PARDER          reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)
    COMA            reduce using rule 31 (llamada_funcion -> ID PARIZQ parametros_llamada PARDER .)


state 87

    (37) parametros_llamada -> parametros_llamada COMA . parametro_ll
    (39) parametro_ll -> . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    parametro_ll                   shift and go to state 114
    expresion                      shift and go to state 58
    llamada_funcion                shift and go to state 40

state 88

    (43) condicional_if -> PARIZQ expresion PARDER . LLAVEIZQ instrucciones LLAVEDER
    (44) condicional_if -> PARIZQ expresion PARDER . LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (45) condicional_if -> PARIZQ expresion PARDER . LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if

    LLAVEIZQ        shift and go to state 115


state 89

    (46) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA . expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 116
    llamada_funcion                shift and go to state 40

state 90

    (35) parametro -> ID . DOSPUNTOS tipo
    (36) parametro -> ID .

    DOSPUNTOS       shift and go to state 117
    PARDER          reduce using rule 36 (parametro -> ID .)
    COMA            reduce using rule 36 (parametro -> ID .)


state 91

    (28) funcion -> RFUNCTION ID PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 118


state 92

    (29) funcion -> RFUNCTION ID PARIZQ parametros . PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) parametros -> parametros . COMA parametro

    PARDER          shift and go to state 119
    COMA            shift and go to state 120


state 93

    (33) parametros -> parametro .

    PARDER          reduce using rule 33 (parametros -> parametro .)
    COMA            reduce using rule 33 (parametros -> parametro .)


state 94

    (34) parametro -> RLET . ID DOSPUNTOS tipo

    ID              shift and go to state 121


state 95

    (51) expresion -> expresion MAS expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 51 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 51 (expresion -> expresion MAS expresion .)
    IGUALDAD        reduce using rule 51 (expresion -> expresion MAS expresion .)
    DESIGUALDAD     reduce using rule 51 (expresion -> expresion MAS expresion .)
    MAYORQ          reduce using rule 51 (expresion -> expresion MAS expresion .)
    MENORQ          reduce using rule 51 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 51 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 51 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 51 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 51 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 51 (expresion -> expresion MAS expresion .)
    RCONSOLE        reduce using rule 51 (expresion -> expresion MAS expresion .)
    RLET            reduce using rule 51 (expresion -> expresion MAS expresion .)
    RIF             reduce using rule 51 (expresion -> expresion MAS expresion .)
    RFOR            reduce using rule 51 (expresion -> expresion MAS expresion .)
    RFUNCTION       reduce using rule 51 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 51 (expresion -> expresion MAS expresion .)
    RRETURN         reduce using rule 51 (expresion -> expresion MAS expresion .)
    RWHILE          reduce using rule 51 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 51 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 51 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 51 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 51 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POT             shift and go to state 75
    MOD             shift and go to state 76

  ! POR             [ reduce using rule 51 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 51 (expresion -> expresion MAS expresion .) ]
  ! POT             [ reduce using rule 51 (expresion -> expresion MAS expresion .) ]
  ! MOD             [ reduce using rule 51 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! MAYORQ          [ shift and go to state 69 ]
  ! MENORQ          [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 96

    (67) expresion -> expresion MAS MAS .

    MAS             reduce using rule 67 (expresion -> expresion MAS MAS .)
    MENOS           reduce using rule 67 (expresion -> expresion MAS MAS .)
    POR             reduce using rule 67 (expresion -> expresion MAS MAS .)
    DIV             reduce using rule 67 (expresion -> expresion MAS MAS .)
    IGUALDAD        reduce using rule 67 (expresion -> expresion MAS MAS .)
    DESIGUALDAD     reduce using rule 67 (expresion -> expresion MAS MAS .)
    MAYORQ          reduce using rule 67 (expresion -> expresion MAS MAS .)
    MENORQ          reduce using rule 67 (expresion -> expresion MAS MAS .)
    MAYORIGUAL      reduce using rule 67 (expresion -> expresion MAS MAS .)
    MENORIGUAL      reduce using rule 67 (expresion -> expresion MAS MAS .)
    AND             reduce using rule 67 (expresion -> expresion MAS MAS .)
    OR              reduce using rule 67 (expresion -> expresion MAS MAS .)
    POT             reduce using rule 67 (expresion -> expresion MAS MAS .)
    MOD             reduce using rule 67 (expresion -> expresion MAS MAS .)
    PTCOMA          reduce using rule 67 (expresion -> expresion MAS MAS .)
    RCONSOLE        reduce using rule 67 (expresion -> expresion MAS MAS .)
    RLET            reduce using rule 67 (expresion -> expresion MAS MAS .)
    RIF             reduce using rule 67 (expresion -> expresion MAS MAS .)
    RFOR            reduce using rule 67 (expresion -> expresion MAS MAS .)
    RFUNCTION       reduce using rule 67 (expresion -> expresion MAS MAS .)
    ID              reduce using rule 67 (expresion -> expresion MAS MAS .)
    RRETURN         reduce using rule 67 (expresion -> expresion MAS MAS .)
    RWHILE          reduce using rule 67 (expresion -> expresion MAS MAS .)
    $end            reduce using rule 67 (expresion -> expresion MAS MAS .)
    LLAVEDER        reduce using rule 67 (expresion -> expresion MAS MAS .)
    PARDER          reduce using rule 67 (expresion -> expresion MAS MAS .)
    COMA            reduce using rule 67 (expresion -> expresion MAS MAS .)


state 97

    (52) expresion -> expresion MENOS expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 52 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 52 (expresion -> expresion MENOS expresion .)
    IGUALDAD        reduce using rule 52 (expresion -> expresion MENOS expresion .)
    DESIGUALDAD     reduce using rule 52 (expresion -> expresion MENOS expresion .)
    MAYORQ          reduce using rule 52 (expresion -> expresion MENOS expresion .)
    MENORQ          reduce using rule 52 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 52 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 52 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 52 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 52 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 52 (expresion -> expresion MENOS expresion .)
    RCONSOLE        reduce using rule 52 (expresion -> expresion MENOS expresion .)
    RLET            reduce using rule 52 (expresion -> expresion MENOS expresion .)
    RIF             reduce using rule 52 (expresion -> expresion MENOS expresion .)
    RFOR            reduce using rule 52 (expresion -> expresion MENOS expresion .)
    RFUNCTION       reduce using rule 52 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 52 (expresion -> expresion MENOS expresion .)
    RRETURN         reduce using rule 52 (expresion -> expresion MENOS expresion .)
    RWHILE          reduce using rule 52 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 52 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 52 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 52 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 52 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POT             shift and go to state 75
    MOD             shift and go to state 76

  ! POR             [ reduce using rule 52 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 52 (expresion -> expresion MENOS expresion .) ]
  ! POT             [ reduce using rule 52 (expresion -> expresion MENOS expresion .) ]
  ! MOD             [ reduce using rule 52 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! MAYORQ          [ shift and go to state 69 ]
  ! MENORQ          [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 98

    (68) expresion -> expresion MENOS MENOS .
    (65) expresion -> MENOS . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MAS             reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    MENOS           reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    POR             reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    DIV             reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    IGUALDAD        reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    DESIGUALDAD     reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    MAYORQ          reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    MENORQ          reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    MAYORIGUAL      reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    MENORIGUAL      reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    AND             reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    OR              reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    POT             reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    MOD             reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    PTCOMA          reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    RCONSOLE        reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    RLET            reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    RIF             reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    RFOR            reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    RFUNCTION       reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    ID              reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    RRETURN         reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    RWHILE          reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    $end            reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    LLAVEDER        reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    PARDER          reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    COMA            reduce using rule 68 (expresion -> expresion MENOS MENOS .)
    NOT             shift and go to state 42
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

  ! MENOS           [ shift and go to state 41 ]
  ! ID              [ shift and go to state 43 ]

    expresion                      shift and go to state 77
    llamada_funcion                shift and go to state 40

state 99

    (53) expresion -> expresion POR expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 53 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 53 (expresion -> expresion POR expresion .)
    POR             reduce using rule 53 (expresion -> expresion POR expresion .)
    DIV             reduce using rule 53 (expresion -> expresion POR expresion .)
    IGUALDAD        reduce using rule 53 (expresion -> expresion POR expresion .)
    DESIGUALDAD     reduce using rule 53 (expresion -> expresion POR expresion .)
    MAYORQ          reduce using rule 53 (expresion -> expresion POR expresion .)
    MENORQ          reduce using rule 53 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 53 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 53 (expresion -> expresion POR expresion .)
    AND             reduce using rule 53 (expresion -> expresion POR expresion .)
    OR              reduce using rule 53 (expresion -> expresion POR expresion .)
    MOD             reduce using rule 53 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 53 (expresion -> expresion POR expresion .)
    RCONSOLE        reduce using rule 53 (expresion -> expresion POR expresion .)
    RLET            reduce using rule 53 (expresion -> expresion POR expresion .)
    RIF             reduce using rule 53 (expresion -> expresion POR expresion .)
    RFOR            reduce using rule 53 (expresion -> expresion POR expresion .)
    RFUNCTION       reduce using rule 53 (expresion -> expresion POR expresion .)
    ID              reduce using rule 53 (expresion -> expresion POR expresion .)
    RRETURN         reduce using rule 53 (expresion -> expresion POR expresion .)
    RWHILE          reduce using rule 53 (expresion -> expresion POR expresion .)
    $end            reduce using rule 53 (expresion -> expresion POR expresion .)
    LLAVEDER        reduce using rule 53 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 53 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 53 (expresion -> expresion POR expresion .)
    POT             shift and go to state 75

  ! POT             [ reduce using rule 53 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIV             [ shift and go to state 66 ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! MAYORQ          [ shift and go to state 69 ]
  ! MENORQ          [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! MOD             [ shift and go to state 76 ]


state 100

    (54) expresion -> expresion DIV expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 54 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 54 (expresion -> expresion DIV expresion .)
    POR             reduce using rule 54 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 54 (expresion -> expresion DIV expresion .)
    IGUALDAD        reduce using rule 54 (expresion -> expresion DIV expresion .)
    DESIGUALDAD     reduce using rule 54 (expresion -> expresion DIV expresion .)
    MAYORQ          reduce using rule 54 (expresion -> expresion DIV expresion .)
    MENORQ          reduce using rule 54 (expresion -> expresion DIV expresion .)
    MAYORIGUAL      reduce using rule 54 (expresion -> expresion DIV expresion .)
    MENORIGUAL      reduce using rule 54 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 54 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 54 (expresion -> expresion DIV expresion .)
    MOD             reduce using rule 54 (expresion -> expresion DIV expresion .)
    PTCOMA          reduce using rule 54 (expresion -> expresion DIV expresion .)
    RCONSOLE        reduce using rule 54 (expresion -> expresion DIV expresion .)
    RLET            reduce using rule 54 (expresion -> expresion DIV expresion .)
    RIF             reduce using rule 54 (expresion -> expresion DIV expresion .)
    RFOR            reduce using rule 54 (expresion -> expresion DIV expresion .)
    RFUNCTION       reduce using rule 54 (expresion -> expresion DIV expresion .)
    ID              reduce using rule 54 (expresion -> expresion DIV expresion .)
    RRETURN         reduce using rule 54 (expresion -> expresion DIV expresion .)
    RWHILE          reduce using rule 54 (expresion -> expresion DIV expresion .)
    $end            reduce using rule 54 (expresion -> expresion DIV expresion .)
    LLAVEDER        reduce using rule 54 (expresion -> expresion DIV expresion .)
    PARDER          reduce using rule 54 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 54 (expresion -> expresion DIV expresion .)
    POT             shift and go to state 75

  ! POT             [ reduce using rule 54 (expresion -> expresion DIV expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIV             [ shift and go to state 66 ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! MAYORQ          [ shift and go to state 69 ]
  ! MENORQ          [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! MOD             [ shift and go to state 76 ]


state 101

    (55) expresion -> expresion IGUALDAD expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    IGUALDAD        reduce using rule 55 (expresion -> expresion IGUALDAD expresion .)
    DESIGUALDAD     reduce using rule 55 (expresion -> expresion IGUALDAD expresion .)
    AND             reduce using rule 55 (expresion -> expresion IGUALDAD expresion .)
    OR              reduce using rule 55 (expresion -> expresion IGUALDAD expresion .)
    PTCOMA          reduce using rule 55 (expresion -> expresion IGUALDAD expresion .)
    RCONSOLE        reduce using rule 55 (expresion -> expresion IGUALDAD expresion .)
    RLET            reduce using rule 55 (expresion -> expresion IGUALDAD expresion .)
    RIF             reduce using rule 55 (expresion -> expresion IGUALDAD expresion .)
    RFOR            reduce using rule 55 (expresion -> expresion IGUALDAD expresion .)
    RFUNCTION       reduce using rule 55 (expresion -> expresion IGUALDAD expresion .)
    ID              reduce using rule 55 (expresion -> expresion IGUALDAD expresion .)
    RRETURN         reduce using rule 55 (expresion -> expresion IGUALDAD expresion .)
    RWHILE          reduce using rule 55 (expresion -> expresion IGUALDAD expresion .)
    $end            reduce using rule 55 (expresion -> expresion IGUALDAD expresion .)
    LLAVEDER        reduce using rule 55 (expresion -> expresion IGUALDAD expresion .)
    PARDER          reduce using rule 55 (expresion -> expresion IGUALDAD expresion .)
    COMA            reduce using rule 55 (expresion -> expresion IGUALDAD expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    MAYORQ          shift and go to state 69
    MENORQ          shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    POT             shift and go to state 75
    MOD             shift and go to state 76

  ! MAS             [ reduce using rule 55 (expresion -> expresion IGUALDAD expresion .) ]
  ! MENOS           [ reduce using rule 55 (expresion -> expresion IGUALDAD expresion .) ]
  ! POR             [ reduce using rule 55 (expresion -> expresion IGUALDAD expresion .) ]
  ! DIV             [ reduce using rule 55 (expresion -> expresion IGUALDAD expresion .) ]
  ! MAYORQ          [ reduce using rule 55 (expresion -> expresion IGUALDAD expresion .) ]
  ! MENORQ          [ reduce using rule 55 (expresion -> expresion IGUALDAD expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 55 (expresion -> expresion IGUALDAD expresion .) ]
  ! MENORIGUAL      [ reduce using rule 55 (expresion -> expresion IGUALDAD expresion .) ]
  ! POT             [ reduce using rule 55 (expresion -> expresion IGUALDAD expresion .) ]
  ! MOD             [ reduce using rule 55 (expresion -> expresion IGUALDAD expresion .) ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 102

    (56) expresion -> expresion DESIGUALDAD expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    IGUALDAD        reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .)
    DESIGUALDAD     reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .)
    AND             reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .)
    OR              reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .)
    PTCOMA          reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .)
    RCONSOLE        reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .)
    RLET            reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .)
    RIF             reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .)
    RFOR            reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .)
    RFUNCTION       reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .)
    ID              reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .)
    RRETURN         reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .)
    RWHILE          reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .)
    $end            reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .)
    LLAVEDER        reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .)
    PARDER          reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .)
    COMA            reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    MAYORQ          shift and go to state 69
    MENORQ          shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    POT             shift and go to state 75
    MOD             shift and go to state 76

  ! MAS             [ reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! MENOS           [ reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! POR             [ reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! DIV             [ reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! MAYORQ          [ reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! MENORQ          [ reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! MENORIGUAL      [ reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! POT             [ reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! MOD             [ reduce using rule 56 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 103

    (57) expresion -> expresion MAYORQ expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    IGUALDAD        reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    DESIGUALDAD     reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    MAYORQ          reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    MENORQ          reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    MAYORIGUAL      reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    MENORIGUAL      reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    AND             reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    OR              reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    PTCOMA          reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    RCONSOLE        reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    RLET            reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    RIF             reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    RFOR            reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    RFUNCTION       reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    ID              reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    RRETURN         reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    RWHILE          reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    $end            reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    LLAVEDER        reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    PARDER          reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    COMA            reduce using rule 57 (expresion -> expresion MAYORQ expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POT             shift and go to state 75
    MOD             shift and go to state 76

  ! MAS             [ reduce using rule 57 (expresion -> expresion MAYORQ expresion .) ]
  ! MENOS           [ reduce using rule 57 (expresion -> expresion MAYORQ expresion .) ]
  ! POR             [ reduce using rule 57 (expresion -> expresion MAYORQ expresion .) ]
  ! DIV             [ reduce using rule 57 (expresion -> expresion MAYORQ expresion .) ]
  ! POT             [ reduce using rule 57 (expresion -> expresion MAYORQ expresion .) ]
  ! MOD             [ reduce using rule 57 (expresion -> expresion MAYORQ expresion .) ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! MAYORQ          [ shift and go to state 69 ]
  ! MENORQ          [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 104

    (58) expresion -> expresion MENORQ expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    IGUALDAD        reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    DESIGUALDAD     reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    MAYORQ          reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    MENORQ          reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    MAYORIGUAL      reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    MENORIGUAL      reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    AND             reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    OR              reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    PTCOMA          reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    RCONSOLE        reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    RLET            reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    RIF             reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    RFOR            reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    RFUNCTION       reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    ID              reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    RRETURN         reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    RWHILE          reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    $end            reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    LLAVEDER        reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    PARDER          reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    COMA            reduce using rule 58 (expresion -> expresion MENORQ expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POT             shift and go to state 75
    MOD             shift and go to state 76

  ! MAS             [ reduce using rule 58 (expresion -> expresion MENORQ expresion .) ]
  ! MENOS           [ reduce using rule 58 (expresion -> expresion MENORQ expresion .) ]
  ! POR             [ reduce using rule 58 (expresion -> expresion MENORQ expresion .) ]
  ! DIV             [ reduce using rule 58 (expresion -> expresion MENORQ expresion .) ]
  ! POT             [ reduce using rule 58 (expresion -> expresion MENORQ expresion .) ]
  ! MOD             [ reduce using rule 58 (expresion -> expresion MENORQ expresion .) ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! MAYORQ          [ shift and go to state 69 ]
  ! MENORQ          [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 105

    (59) expresion -> expresion MAYORIGUAL expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    IGUALDAD        reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    DESIGUALDAD     reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORQ          reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    MENORQ          reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    PTCOMA          reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    RCONSOLE        reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    RLET            reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    RIF             reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    RFOR            reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    RFUNCTION       reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    ID              reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    RRETURN         reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    RWHILE          reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    $end            reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    LLAVEDER        reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    PARDER          reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POT             shift and go to state 75
    MOD             shift and go to state 76

  ! MAS             [ reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POT             [ reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MOD             [ reduce using rule 59 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! MAYORQ          [ shift and go to state 69 ]
  ! MENORQ          [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 106

    (60) expresion -> expresion MENORIGUAL expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    IGUALDAD        reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    DESIGUALDAD     reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    MAYORQ          reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    MENORQ          reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    PTCOMA          reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    RCONSOLE        reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    RLET            reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    RIF             reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    RFOR            reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    RFUNCTION       reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    ID              reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    RRETURN         reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    RWHILE          reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    $end            reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    LLAVEDER        reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    PARDER          reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POT             shift and go to state 75
    MOD             shift and go to state 76

  ! MAS             [ reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POT             [ reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MOD             [ reduce using rule 60 (expresion -> expresion MENORIGUAL expresion .) ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! MAYORQ          [ shift and go to state 69 ]
  ! MENORQ          [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 107

    (61) expresion -> expresion AND expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    AND             reduce using rule 61 (expresion -> expresion AND expresion .)
    OR              reduce using rule 61 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 61 (expresion -> expresion AND expresion .)
    RCONSOLE        reduce using rule 61 (expresion -> expresion AND expresion .)
    RLET            reduce using rule 61 (expresion -> expresion AND expresion .)
    RIF             reduce using rule 61 (expresion -> expresion AND expresion .)
    RFOR            reduce using rule 61 (expresion -> expresion AND expresion .)
    RFUNCTION       reduce using rule 61 (expresion -> expresion AND expresion .)
    ID              reduce using rule 61 (expresion -> expresion AND expresion .)
    RRETURN         reduce using rule 61 (expresion -> expresion AND expresion .)
    RWHILE          reduce using rule 61 (expresion -> expresion AND expresion .)
    $end            reduce using rule 61 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 61 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 61 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 61 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    MAYORQ          shift and go to state 69
    MENORQ          shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    POT             shift and go to state 75
    MOD             shift and go to state 76

  ! MAS             [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! IGUALDAD        [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! DESIGUALDAD     [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! MAYORQ          [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! MENORQ          [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! POT             [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! MOD             [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 108

    (62) expresion -> expresion OR expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    OR              reduce using rule 62 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 62 (expresion -> expresion OR expresion .)
    RCONSOLE        reduce using rule 62 (expresion -> expresion OR expresion .)
    RLET            reduce using rule 62 (expresion -> expresion OR expresion .)
    RIF             reduce using rule 62 (expresion -> expresion OR expresion .)
    RFOR            reduce using rule 62 (expresion -> expresion OR expresion .)
    RFUNCTION       reduce using rule 62 (expresion -> expresion OR expresion .)
    ID              reduce using rule 62 (expresion -> expresion OR expresion .)
    RRETURN         reduce using rule 62 (expresion -> expresion OR expresion .)
    RWHILE          reduce using rule 62 (expresion -> expresion OR expresion .)
    $end            reduce using rule 62 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 62 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 62 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 62 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    MAYORQ          shift and go to state 69
    MENORQ          shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    AND             shift and go to state 73
    POT             shift and go to state 75
    MOD             shift and go to state 76

  ! MAS             [ reduce using rule 62 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 62 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 62 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 62 (expresion -> expresion OR expresion .) ]
  ! IGUALDAD        [ reduce using rule 62 (expresion -> expresion OR expresion .) ]
  ! DESIGUALDAD     [ reduce using rule 62 (expresion -> expresion OR expresion .) ]
  ! MAYORQ          [ reduce using rule 62 (expresion -> expresion OR expresion .) ]
  ! MENORQ          [ reduce using rule 62 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 62 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 62 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 62 (expresion -> expresion OR expresion .) ]
  ! POT             [ reduce using rule 62 (expresion -> expresion OR expresion .) ]
  ! MOD             [ reduce using rule 62 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 74 ]


state 109

    (63) expresion -> expresion POT expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 63 (expresion -> expresion POT expresion .)
    MENOS           reduce using rule 63 (expresion -> expresion POT expresion .)
    POR             reduce using rule 63 (expresion -> expresion POT expresion .)
    DIV             reduce using rule 63 (expresion -> expresion POT expresion .)
    IGUALDAD        reduce using rule 63 (expresion -> expresion POT expresion .)
    DESIGUALDAD     reduce using rule 63 (expresion -> expresion POT expresion .)
    MAYORQ          reduce using rule 63 (expresion -> expresion POT expresion .)
    MENORQ          reduce using rule 63 (expresion -> expresion POT expresion .)
    MAYORIGUAL      reduce using rule 63 (expresion -> expresion POT expresion .)
    MENORIGUAL      reduce using rule 63 (expresion -> expresion POT expresion .)
    AND             reduce using rule 63 (expresion -> expresion POT expresion .)
    OR              reduce using rule 63 (expresion -> expresion POT expresion .)
    POT             reduce using rule 63 (expresion -> expresion POT expresion .)
    MOD             reduce using rule 63 (expresion -> expresion POT expresion .)
    PTCOMA          reduce using rule 63 (expresion -> expresion POT expresion .)
    RCONSOLE        reduce using rule 63 (expresion -> expresion POT expresion .)
    RLET            reduce using rule 63 (expresion -> expresion POT expresion .)
    RIF             reduce using rule 63 (expresion -> expresion POT expresion .)
    RFOR            reduce using rule 63 (expresion -> expresion POT expresion .)
    RFUNCTION       reduce using rule 63 (expresion -> expresion POT expresion .)
    ID              reduce using rule 63 (expresion -> expresion POT expresion .)
    RRETURN         reduce using rule 63 (expresion -> expresion POT expresion .)
    RWHILE          reduce using rule 63 (expresion -> expresion POT expresion .)
    $end            reduce using rule 63 (expresion -> expresion POT expresion .)
    LLAVEDER        reduce using rule 63 (expresion -> expresion POT expresion .)
    PARDER          reduce using rule 63 (expresion -> expresion POT expresion .)
    COMA            reduce using rule 63 (expresion -> expresion POT expresion .)

  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIV             [ shift and go to state 66 ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! MAYORQ          [ shift and go to state 69 ]
  ! MENORQ          [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! POT             [ shift and go to state 75 ]
  ! MOD             [ shift and go to state 76 ]


state 110

    (64) expresion -> expresion MOD expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 64 (expresion -> expresion MOD expresion .)
    MENOS           reduce using rule 64 (expresion -> expresion MOD expresion .)
    POR             reduce using rule 64 (expresion -> expresion MOD expresion .)
    DIV             reduce using rule 64 (expresion -> expresion MOD expresion .)
    IGUALDAD        reduce using rule 64 (expresion -> expresion MOD expresion .)
    DESIGUALDAD     reduce using rule 64 (expresion -> expresion MOD expresion .)
    MAYORQ          reduce using rule 64 (expresion -> expresion MOD expresion .)
    MENORQ          reduce using rule 64 (expresion -> expresion MOD expresion .)
    MAYORIGUAL      reduce using rule 64 (expresion -> expresion MOD expresion .)
    MENORIGUAL      reduce using rule 64 (expresion -> expresion MOD expresion .)
    AND             reduce using rule 64 (expresion -> expresion MOD expresion .)
    OR              reduce using rule 64 (expresion -> expresion MOD expresion .)
    MOD             reduce using rule 64 (expresion -> expresion MOD expresion .)
    PTCOMA          reduce using rule 64 (expresion -> expresion MOD expresion .)
    RCONSOLE        reduce using rule 64 (expresion -> expresion MOD expresion .)
    RLET            reduce using rule 64 (expresion -> expresion MOD expresion .)
    RIF             reduce using rule 64 (expresion -> expresion MOD expresion .)
    RFOR            reduce using rule 64 (expresion -> expresion MOD expresion .)
    RFUNCTION       reduce using rule 64 (expresion -> expresion MOD expresion .)
    ID              reduce using rule 64 (expresion -> expresion MOD expresion .)
    RRETURN         reduce using rule 64 (expresion -> expresion MOD expresion .)
    RWHILE          reduce using rule 64 (expresion -> expresion MOD expresion .)
    $end            reduce using rule 64 (expresion -> expresion MOD expresion .)
    LLAVEDER        reduce using rule 64 (expresion -> expresion MOD expresion .)
    PARDER          reduce using rule 64 (expresion -> expresion MOD expresion .)
    COMA            reduce using rule 64 (expresion -> expresion MOD expresion .)
    POT             shift and go to state 75

  ! POT             [ reduce using rule 64 (expresion -> expresion MOD expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIV             [ shift and go to state 66 ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! MAYORQ          [ shift and go to state 69 ]
  ! MENORQ          [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! MOD             [ shift and go to state 76 ]


state 111

    (47) ciclo_while -> RWHILE PARIZQ expresion PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 122


state 112

    (22) imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion . PARDER
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    PARDER          shift and go to state 123
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    MAYORQ          shift and go to state 69
    MENORQ          shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    POT             shift and go to state 75
    MOD             shift and go to state 76


state 113

    (24) declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL . expresion
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 124
    llamada_funcion                shift and go to state 40

state 114

    (37) parametros_llamada -> parametros_llamada COMA parametro_ll .

    PARDER          reduce using rule 37 (parametros_llamada -> parametros_llamada COMA parametro_ll .)
    COMA            reduce using rule 37 (parametros_llamada -> parametros_llamada COMA parametro_ll .)


state 115

    (43) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ . instrucciones LLAVEDER
    (44) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ . instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (45) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ . instrucciones LLAVEDER RELSE RIF condicional_if
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . imprimir
    (14) instruccion -> . declaracion_normal
    (15) instruccion -> . condicional_ifs
    (16) instruccion -> . ciclo_for
    (17) instruccion -> . funcion
    (18) instruccion -> . llamada_funcion
    (19) instruccion -> . r_return
    (20) instruccion -> . asignacion
    (21) instruccion -> . ciclo_while
    (22) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (24) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (25) declaracion_normal -> . RLET ID
    (26) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (27) declaracion_normal -> . RLET ID IGUAL expresion
    (42) condicional_ifs -> . RIF condicional_if
    (46) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (41) r_return -> . RRETURN expresion
    (23) asignacion -> . ID IGUAL expresion
    (47) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    RCONSOLE        shift and go to state 13
    RLET            shift and go to state 14
    RIF             shift and go to state 16
    RFOR            shift and go to state 17
    RFUNCTION       shift and go to state 18
    ID              shift and go to state 15
    RRETURN         shift and go to state 19
    RWHILE          shift and go to state 20

    instrucciones                  shift and go to state 125
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12

state 116

    (46) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion . PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    PTCOMA          shift and go to state 126
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    MAYORQ          shift and go to state 69
    MENORQ          shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    POT             shift and go to state 75
    MOD             shift and go to state 76


state 117

    (35) parametro -> ID DOSPUNTOS . tipo
    (48) tipo -> . RSTRING
    (49) tipo -> . RNUMBER
    (50) tipo -> . RBOOLEAN

    RSTRING         shift and go to state 82
    RNUMBER         shift and go to state 83
    RBOOLEAN        shift and go to state 84

    tipo                           shift and go to state 127

state 118

    (28) funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . imprimir
    (14) instruccion -> . declaracion_normal
    (15) instruccion -> . condicional_ifs
    (16) instruccion -> . ciclo_for
    (17) instruccion -> . funcion
    (18) instruccion -> . llamada_funcion
    (19) instruccion -> . r_return
    (20) instruccion -> . asignacion
    (21) instruccion -> . ciclo_while
    (22) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (24) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (25) declaracion_normal -> . RLET ID
    (26) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (27) declaracion_normal -> . RLET ID IGUAL expresion
    (42) condicional_ifs -> . RIF condicional_if
    (46) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (41) r_return -> . RRETURN expresion
    (23) asignacion -> . ID IGUAL expresion
    (47) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    RCONSOLE        shift and go to state 13
    RLET            shift and go to state 14
    RIF             shift and go to state 16
    RFOR            shift and go to state 17
    RFUNCTION       shift and go to state 18
    ID              shift and go to state 15
    RRETURN         shift and go to state 19
    RWHILE          shift and go to state 20

    instrucciones                  shift and go to state 128
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12

state 119

    (29) funcion -> RFUNCTION ID PARIZQ parametros PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 129


state 120

    (32) parametros -> parametros COMA . parametro
    (34) parametro -> . RLET ID DOSPUNTOS tipo
    (35) parametro -> . ID DOSPUNTOS tipo
    (36) parametro -> . ID

    RLET            shift and go to state 94
    ID              shift and go to state 90

    parametro                      shift and go to state 130

state 121

    (34) parametro -> RLET ID . DOSPUNTOS tipo

    DOSPUNTOS       shift and go to state 131


state 122

    (47) ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . imprimir
    (14) instruccion -> . declaracion_normal
    (15) instruccion -> . condicional_ifs
    (16) instruccion -> . ciclo_for
    (17) instruccion -> . funcion
    (18) instruccion -> . llamada_funcion
    (19) instruccion -> . r_return
    (20) instruccion -> . asignacion
    (21) instruccion -> . ciclo_while
    (22) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (24) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (25) declaracion_normal -> . RLET ID
    (26) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (27) declaracion_normal -> . RLET ID IGUAL expresion
    (42) condicional_ifs -> . RIF condicional_if
    (46) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (41) r_return -> . RRETURN expresion
    (23) asignacion -> . ID IGUAL expresion
    (47) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    RCONSOLE        shift and go to state 13
    RLET            shift and go to state 14
    RIF             shift and go to state 16
    RFOR            shift and go to state 17
    RFUNCTION       shift and go to state 18
    ID              shift and go to state 15
    RRETURN         shift and go to state 19
    RWHILE          shift and go to state 20

    instrucciones                  shift and go to state 132
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12

state 123

    (22) imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .

    PTCOMA          reduce using rule 22 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)
    RCONSOLE        reduce using rule 22 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)
    RLET            reduce using rule 22 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)
    RIF             reduce using rule 22 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)
    RFOR            reduce using rule 22 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)
    RFUNCTION       reduce using rule 22 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)
    ID              reduce using rule 22 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)
    RRETURN         reduce using rule 22 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)
    RWHILE          reduce using rule 22 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)
    $end            reduce using rule 22 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 22 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)


state 124

    (24) declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    PTCOMA          reduce using rule 24 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RCONSOLE        reduce using rule 24 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RLET            reduce using rule 24 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RIF             reduce using rule 24 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RFOR            reduce using rule 24 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RFUNCTION       reduce using rule 24 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    ID              reduce using rule 24 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RRETURN         reduce using rule 24 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RWHILE          reduce using rule 24 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    $end            reduce using rule 24 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    LLAVEDER        reduce using rule 24 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    MAYORQ          shift and go to state 69
    MENORQ          shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    POT             shift and go to state 75
    MOD             shift and go to state 76


state 125

    (43) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones . LLAVEDER
    (44) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones . LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (45) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones . LLAVEDER RELSE RIF condicional_if
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . imprimir
    (14) instruccion -> . declaracion_normal
    (15) instruccion -> . condicional_ifs
    (16) instruccion -> . ciclo_for
    (17) instruccion -> . funcion
    (18) instruccion -> . llamada_funcion
    (19) instruccion -> . r_return
    (20) instruccion -> . asignacion
    (21) instruccion -> . ciclo_while
    (22) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (24) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (25) declaracion_normal -> . RLET ID
    (26) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (27) declaracion_normal -> . RLET ID IGUAL expresion
    (42) condicional_ifs -> . RIF condicional_if
    (46) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (41) r_return -> . RRETURN expresion
    (23) asignacion -> . ID IGUAL expresion
    (47) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 133
    RCONSOLE        shift and go to state 13
    RLET            shift and go to state 14
    RIF             shift and go to state 16
    RFOR            shift and go to state 17
    RFUNCTION       shift and go to state 18
    ID              shift and go to state 15
    RRETURN         shift and go to state 19
    RWHILE          shift and go to state 20

    instruccion                    shift and go to state 21
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12

state 126

    (46) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA . expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (40) expresion -> . llamada_funcion
    (51) expresion -> . expresion MAS expresion
    (52) expresion -> . expresion MENOS expresion
    (53) expresion -> . expresion POR expresion
    (54) expresion -> . expresion DIV expresion
    (55) expresion -> . expresion IGUALDAD expresion
    (56) expresion -> . expresion DESIGUALDAD expresion
    (57) expresion -> . expresion MAYORQ expresion
    (58) expresion -> . expresion MENORQ expresion
    (59) expresion -> . expresion MAYORIGUAL expresion
    (60) expresion -> . expresion MENORIGUAL expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . expresion OR expresion
    (63) expresion -> . expresion POT expresion
    (64) expresion -> . expresion MOD expresion
    (65) expresion -> . MENOS expresion
    (66) expresion -> . NOT expresion
    (67) expresion -> . expresion MAS MAS
    (68) expresion -> . expresion MENOS MENOS
    (69) expresion -> . ID
    (70) expresion -> . RNULL
    (71) expresion -> . RANY
    (72) expresion -> . ENTERO
    (73) expresion -> . DECIMAL
    (74) expresion -> . CADENA
    (75) expresion -> . RTRUE
    (76) expresion -> . RFALSE
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER

    MENOS           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 43
    RNULL           shift and go to state 44
    RANY            shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    RTRUE           shift and go to state 49
    RFALSE          shift and go to state 50

    expresion                      shift and go to state 134
    llamada_funcion                shift and go to state 40

state 127

    (35) parametro -> ID DOSPUNTOS tipo .

    PARDER          reduce using rule 35 (parametro -> ID DOSPUNTOS tipo .)
    COMA            reduce using rule 35 (parametro -> ID DOSPUNTOS tipo .)


state 128

    (28) funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . imprimir
    (14) instruccion -> . declaracion_normal
    (15) instruccion -> . condicional_ifs
    (16) instruccion -> . ciclo_for
    (17) instruccion -> . funcion
    (18) instruccion -> . llamada_funcion
    (19) instruccion -> . r_return
    (20) instruccion -> . asignacion
    (21) instruccion -> . ciclo_while
    (22) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (24) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (25) declaracion_normal -> . RLET ID
    (26) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (27) declaracion_normal -> . RLET ID IGUAL expresion
    (42) condicional_ifs -> . RIF condicional_if
    (46) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (41) r_return -> . RRETURN expresion
    (23) asignacion -> . ID IGUAL expresion
    (47) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 135
    RCONSOLE        shift and go to state 13
    RLET            shift and go to state 14
    RIF             shift and go to state 16
    RFOR            shift and go to state 17
    RFUNCTION       shift and go to state 18
    ID              shift and go to state 15
    RRETURN         shift and go to state 19
    RWHILE          shift and go to state 20

    instruccion                    shift and go to state 21
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12

state 129

    (29) funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . imprimir
    (14) instruccion -> . declaracion_normal
    (15) instruccion -> . condicional_ifs
    (16) instruccion -> . ciclo_for
    (17) instruccion -> . funcion
    (18) instruccion -> . llamada_funcion
    (19) instruccion -> . r_return
    (20) instruccion -> . asignacion
    (21) instruccion -> . ciclo_while
    (22) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (24) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (25) declaracion_normal -> . RLET ID
    (26) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (27) declaracion_normal -> . RLET ID IGUAL expresion
    (42) condicional_ifs -> . RIF condicional_if
    (46) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (41) r_return -> . RRETURN expresion
    (23) asignacion -> . ID IGUAL expresion
    (47) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    RCONSOLE        shift and go to state 13
    RLET            shift and go to state 14
    RIF             shift and go to state 16
    RFOR            shift and go to state 17
    RFUNCTION       shift and go to state 18
    ID              shift and go to state 15
    RRETURN         shift and go to state 19
    RWHILE          shift and go to state 20

    instrucciones                  shift and go to state 136
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12

state 130

    (32) parametros -> parametros COMA parametro .

    PARDER          reduce using rule 32 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 32 (parametros -> parametros COMA parametro .)


state 131

    (34) parametro -> RLET ID DOSPUNTOS . tipo
    (48) tipo -> . RSTRING
    (49) tipo -> . RNUMBER
    (50) tipo -> . RBOOLEAN

    RSTRING         shift and go to state 82
    RNUMBER         shift and go to state 83
    RBOOLEAN        shift and go to state 84

    tipo                           shift and go to state 137

state 132

    (47) ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . imprimir
    (14) instruccion -> . declaracion_normal
    (15) instruccion -> . condicional_ifs
    (16) instruccion -> . ciclo_for
    (17) instruccion -> . funcion
    (18) instruccion -> . llamada_funcion
    (19) instruccion -> . r_return
    (20) instruccion -> . asignacion
    (21) instruccion -> . ciclo_while
    (22) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (24) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (25) declaracion_normal -> . RLET ID
    (26) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (27) declaracion_normal -> . RLET ID IGUAL expresion
    (42) condicional_ifs -> . RIF condicional_if
    (46) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (41) r_return -> . RRETURN expresion
    (23) asignacion -> . ID IGUAL expresion
    (47) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 138
    RCONSOLE        shift and go to state 13
    RLET            shift and go to state 14
    RIF             shift and go to state 16
    RFOR            shift and go to state 17
    RFUNCTION       shift and go to state 18
    ID              shift and go to state 15
    RRETURN         shift and go to state 19
    RWHILE          shift and go to state 20

    instruccion                    shift and go to state 21
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12

state 133

    (43) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .
    (44) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER . RELSE LLAVEIZQ instrucciones LLAVEDER
    (45) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER . RELSE RIF condicional_if

    PTCOMA          reduce using rule 43 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RCONSOLE        reduce using rule 43 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RLET            reduce using rule 43 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RIF             reduce using rule 43 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFOR            reduce using rule 43 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFUNCTION       reduce using rule 43 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 43 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RRETURN         reduce using rule 43 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RWHILE          reduce using rule 43 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 43 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 43 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RELSE           shift and go to state 139


state 134

    (46) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion . PARDER LLAVEIZQ instrucciones LLAVEDER
    (51) expresion -> expresion . MAS expresion
    (52) expresion -> expresion . MENOS expresion
    (53) expresion -> expresion . POR expresion
    (54) expresion -> expresion . DIV expresion
    (55) expresion -> expresion . IGUALDAD expresion
    (56) expresion -> expresion . DESIGUALDAD expresion
    (57) expresion -> expresion . MAYORQ expresion
    (58) expresion -> expresion . MENORQ expresion
    (59) expresion -> expresion . MAYORIGUAL expresion
    (60) expresion -> expresion . MENORIGUAL expresion
    (61) expresion -> expresion . AND expresion
    (62) expresion -> expresion . OR expresion
    (63) expresion -> expresion . POT expresion
    (64) expresion -> expresion . MOD expresion
    (67) expresion -> expresion . MAS MAS
    (68) expresion -> expresion . MENOS MENOS

    PARDER          shift and go to state 140
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    MAYORQ          shift and go to state 69
    MENORQ          shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    POT             shift and go to state 75
    MOD             shift and go to state 76


state 135

    (28) funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    PTCOMA          reduce using rule 28 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RCONSOLE        reduce using rule 28 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RLET            reduce using rule 28 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RIF             reduce using rule 28 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFOR            reduce using rule 28 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFUNCTION       reduce using rule 28 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 28 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RRETURN         reduce using rule 28 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RWHILE          reduce using rule 28 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 28 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 28 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 136

    (29) funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . imprimir
    (14) instruccion -> . declaracion_normal
    (15) instruccion -> . condicional_ifs
    (16) instruccion -> . ciclo_for
    (17) instruccion -> . funcion
    (18) instruccion -> . llamada_funcion
    (19) instruccion -> . r_return
    (20) instruccion -> . asignacion
    (21) instruccion -> . ciclo_while
    (22) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (24) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (25) declaracion_normal -> . RLET ID
    (26) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (27) declaracion_normal -> . RLET ID IGUAL expresion
    (42) condicional_ifs -> . RIF condicional_if
    (46) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (41) r_return -> . RRETURN expresion
    (23) asignacion -> . ID IGUAL expresion
    (47) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 141
    RCONSOLE        shift and go to state 13
    RLET            shift and go to state 14
    RIF             shift and go to state 16
    RFOR            shift and go to state 17
    RFUNCTION       shift and go to state 18
    ID              shift and go to state 15
    RRETURN         shift and go to state 19
    RWHILE          shift and go to state 20

    instruccion                    shift and go to state 21
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12

state 137

    (34) parametro -> RLET ID DOSPUNTOS tipo .

    PARDER          reduce using rule 34 (parametro -> RLET ID DOSPUNTOS tipo .)
    COMA            reduce using rule 34 (parametro -> RLET ID DOSPUNTOS tipo .)


state 138

    (47) ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .

    PTCOMA          reduce using rule 47 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RCONSOLE        reduce using rule 47 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RLET            reduce using rule 47 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RIF             reduce using rule 47 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFOR            reduce using rule 47 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFUNCTION       reduce using rule 47 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 47 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RRETURN         reduce using rule 47 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RWHILE          reduce using rule 47 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 47 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 47 (ciclo_while -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 139

    (44) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE . LLAVEIZQ instrucciones LLAVEDER
    (45) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE . RIF condicional_if

    LLAVEIZQ        shift and go to state 142
    RIF             shift and go to state 143


state 140

    (46) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 144


state 141

    (29) funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .

    PTCOMA          reduce using rule 29 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RCONSOLE        reduce using rule 29 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RLET            reduce using rule 29 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RIF             reduce using rule 29 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFOR            reduce using rule 29 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFUNCTION       reduce using rule 29 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 29 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RRETURN         reduce using rule 29 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RWHILE          reduce using rule 29 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 29 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 29 (funcion -> RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 142

    (44) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . imprimir
    (14) instruccion -> . declaracion_normal
    (15) instruccion -> . condicional_ifs
    (16) instruccion -> . ciclo_for
    (17) instruccion -> . funcion
    (18) instruccion -> . llamada_funcion
    (19) instruccion -> . r_return
    (20) instruccion -> . asignacion
    (21) instruccion -> . ciclo_while
    (22) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (24) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (25) declaracion_normal -> . RLET ID
    (26) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (27) declaracion_normal -> . RLET ID IGUAL expresion
    (42) condicional_ifs -> . RIF condicional_if
    (46) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (41) r_return -> . RRETURN expresion
    (23) asignacion -> . ID IGUAL expresion
    (47) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    RCONSOLE        shift and go to state 13
    RLET            shift and go to state 14
    RIF             shift and go to state 16
    RFOR            shift and go to state 17
    RFUNCTION       shift and go to state 18
    ID              shift and go to state 15
    RRETURN         shift and go to state 19
    RWHILE          shift and go to state 20

    instrucciones                  shift and go to state 145
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12

state 143

    (45) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF . condicional_if
    (43) condicional_if -> . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) condicional_if -> . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (45) condicional_if -> . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if

    PARIZQ          shift and go to state 36

    condicional_if                 shift and go to state 146

state 144

    (46) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . imprimir
    (14) instruccion -> . declaracion_normal
    (15) instruccion -> . condicional_ifs
    (16) instruccion -> . ciclo_for
    (17) instruccion -> . funcion
    (18) instruccion -> . llamada_funcion
    (19) instruccion -> . r_return
    (20) instruccion -> . asignacion
    (21) instruccion -> . ciclo_while
    (22) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (24) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (25) declaracion_normal -> . RLET ID
    (26) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (27) declaracion_normal -> . RLET ID IGUAL expresion
    (42) condicional_ifs -> . RIF condicional_if
    (46) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (41) r_return -> . RRETURN expresion
    (23) asignacion -> . ID IGUAL expresion
    (47) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    RCONSOLE        shift and go to state 13
    RLET            shift and go to state 14
    RIF             shift and go to state 16
    RFOR            shift and go to state 17
    RFUNCTION       shift and go to state 18
    ID              shift and go to state 15
    RRETURN         shift and go to state 19
    RWHILE          shift and go to state 20

    declaracion_normal             shift and go to state 5
    instrucciones                  shift and go to state 147
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12

state 145

    (44) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . imprimir
    (14) instruccion -> . declaracion_normal
    (15) instruccion -> . condicional_ifs
    (16) instruccion -> . ciclo_for
    (17) instruccion -> . funcion
    (18) instruccion -> . llamada_funcion
    (19) instruccion -> . r_return
    (20) instruccion -> . asignacion
    (21) instruccion -> . ciclo_while
    (22) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (24) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (25) declaracion_normal -> . RLET ID
    (26) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (27) declaracion_normal -> . RLET ID IGUAL expresion
    (42) condicional_ifs -> . RIF condicional_if
    (46) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (41) r_return -> . RRETURN expresion
    (23) asignacion -> . ID IGUAL expresion
    (47) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 148
    RCONSOLE        shift and go to state 13
    RLET            shift and go to state 14
    RIF             shift and go to state 16
    RFOR            shift and go to state 17
    RFUNCTION       shift and go to state 18
    ID              shift and go to state 15
    RRETURN         shift and go to state 19
    RWHILE          shift and go to state 20

    instruccion                    shift and go to state 21
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12

state 146

    (45) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .

    PTCOMA          reduce using rule 45 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RCONSOLE        reduce using rule 45 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RLET            reduce using rule 45 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RIF             reduce using rule 45 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RFOR            reduce using rule 45 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RFUNCTION       reduce using rule 45 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    ID              reduce using rule 45 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RRETURN         reduce using rule 45 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RWHILE          reduce using rule 45 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    $end            reduce using rule 45 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    LLAVEDER        reduce using rule 45 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)


state 147

    (46) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . ciclo_while PTCOMA
    (13) instruccion -> . imprimir
    (14) instruccion -> . declaracion_normal
    (15) instruccion -> . condicional_ifs
    (16) instruccion -> . ciclo_for
    (17) instruccion -> . funcion
    (18) instruccion -> . llamada_funcion
    (19) instruccion -> . r_return
    (20) instruccion -> . asignacion
    (21) instruccion -> . ciclo_while
    (22) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (24) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (25) declaracion_normal -> . RLET ID
    (26) declaracion_normal -> . RLET ID DOSPUNTOS tipo
    (27) declaracion_normal -> . RLET ID IGUAL expresion
    (42) condicional_ifs -> . RIF condicional_if
    (46) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) funcion -> . RFUNCTION ID PARIZQ parametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) llamada_funcion -> . ID PARIZQ PARDER
    (31) llamada_funcion -> . ID PARIZQ parametros_llamada PARDER
    (41) r_return -> . RRETURN expresion
    (23) asignacion -> . ID IGUAL expresion
    (47) ciclo_while -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 149
    RCONSOLE        shift and go to state 13
    RLET            shift and go to state 14
    RIF             shift and go to state 16
    RFOR            shift and go to state 17
    RFUNCTION       shift and go to state 18
    ID              shift and go to state 15
    RRETURN         shift and go to state 19
    RWHILE          shift and go to state 20

    declaracion_normal             shift and go to state 5
    instruccion                    shift and go to state 21
    imprimir                       shift and go to state 4
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11
    ciclo_while                    shift and go to state 12

state 148

    (44) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .

    PTCOMA          reduce using rule 44 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RCONSOLE        reduce using rule 44 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RLET            reduce using rule 44 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RIF             reduce using rule 44 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RFOR            reduce using rule 44 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RFUNCTION       reduce using rule 44 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 44 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RRETURN         reduce using rule 44 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RWHILE          reduce using rule 44 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 44 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 44 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)


state 149

    (46) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .

    PTCOMA          reduce using rule 46 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RCONSOLE        reduce using rule 46 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RLET            reduce using rule 46 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RIF             reduce using rule 46 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFOR            reduce using rule 46 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFUNCTION       reduce using rule 46 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 46 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RRETURN         reduce using rule 46 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RWHILE          reduce using rule 46 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 46 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 46 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)

