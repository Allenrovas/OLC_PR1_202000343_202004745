Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CORDER
    CORIZQ
    RBREAK
    RCONCAT
    RCONTINUE
    RINTERFACE
    RSPLIT
    RTOEXPONENTIAL
    RTOFIXED
    RTOLOWERCASE
    RTOSTRING
    RTUPPERCASE
    RWHILE

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> imprimir PTCOMA
Rule 5     instruccion -> declaracion_normal PTCOMA
Rule 6     instruccion -> condicional_ifs PTCOMA
Rule 7     instruccion -> ciclo_for PTCOMA
Rule 8     instruccion -> funcion PTCOMA
Rule 9     instruccion -> llamada_funcion PTCOMA
Rule 10    instruccion -> r_return PTCOMA
Rule 11    instruccion -> asignacion PTCOMA
Rule 12    instruccion -> imprimir
Rule 13    instruccion -> declaracion_normal
Rule 14    instruccion -> condicional_ifs
Rule 15    instruccion -> ciclo_for
Rule 16    instruccion -> funcion
Rule 17    instruccion -> llamada_funcion
Rule 18    instruccion -> r_return
Rule 19    instruccion -> asignacion
Rule 20    imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
Rule 21    asignacion -> ID IGUAL expresion
Rule 22    declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion
Rule 23    declaracion_normal -> RLET ID IGUAL expresion
Rule 24    funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 25    llamada_funcion -> ID PARIZQ PARDER
Rule 26    expresion -> llamada_funcion
Rule 27    r_return -> RRETURN expresion
Rule 28    condicional_ifs -> RIF condicional_if
Rule 29    condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 30    condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
Rule 31    condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if
Rule 32    ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 33    tipo -> RSTRING
Rule 34    tipo -> RNUMBER
Rule 35    tipo -> RBOOLEAN
Rule 36    expresion -> expresion MAS expresion
Rule 37    expresion -> expresion MENOS expresion
Rule 38    expresion -> expresion POR expresion
Rule 39    expresion -> expresion DIV expresion
Rule 40    expresion -> expresion IGUALDAD expresion
Rule 41    expresion -> expresion DESIGUALDAD expresion
Rule 42    expresion -> expresion MAYORQ expresion
Rule 43    expresion -> expresion MENORQ expresion
Rule 44    expresion -> expresion MAYORIGUAL expresion
Rule 45    expresion -> expresion MENORIGUAL expresion
Rule 46    expresion -> expresion AND expresion
Rule 47    expresion -> expresion OR expresion
Rule 48    expresion -> expresion POT expresion
Rule 49    expresion -> expresion MOD expresion
Rule 50    expresion -> MENOS expresion
Rule 51    expresion -> NOT expresion
Rule 52    expresion -> expresion MAS MAS
Rule 53    expresion -> expresion MENOS MENOS
Rule 54    expresion -> ID
Rule 55    expresion -> RNULL
Rule 56    expresion -> RANY
Rule 57    expresion -> ENTERO
Rule 58    expresion -> DECIMAL
Rule 59    expresion -> CADENA
Rule 60    expresion -> RTRUE
Rule 61    expresion -> RFALSE

Terminals, with rules where they appear

AND                  : 46
CADENA               : 59
CORDER               : 
CORIZQ               : 
DECIMAL              : 58
DESIGUALDAD          : 41
DIV                  : 39
DOSPUNTOS            : 22
ENTERO               : 57
ID                   : 21 22 23 24 25 54
IGUAL                : 21 22 23
IGUALDAD             : 40
LLAVEDER             : 24 29 30 30 31 32
LLAVEIZQ             : 24 29 30 30 31 32
MAS                  : 36 52 52
MAYORIGUAL           : 44
MAYORQ               : 42
MENORIGUAL           : 45
MENORQ               : 43
MENOS                : 37 50 53 53
MOD                  : 49
NOT                  : 51
OR                   : 47
PARDER               : 20 24 25 29 30 31 32
PARIZQ               : 20 24 25 29 30 31 32
POR                  : 38
POT                  : 48
PTCOMA               : 4 5 6 7 8 9 10 11 32 32
PUNTO                : 20
RANY                 : 56
RBOOLEAN             : 35
RBREAK               : 
RCONCAT              : 
RCONSOLE             : 20
RCONTINUE            : 
RELSE                : 30 31
RFALSE               : 61
RFOR                 : 32
RFUNCTION            : 24
RIF                  : 28 31
RINTERFACE           : 
RLET                 : 22 23
RLOG                 : 20
RNULL                : 55
RNUMBER              : 34
RRETURN              : 27
RSPLIT               : 
RSTRING              : 33
RTOEXPONENTIAL       : 
RTOFIXED             : 
RTOLOWERCASE         : 
RTOSTRING            : 
RTRUE                : 60
RTUPPERCASE          : 
RWHILE               : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 11 19
ciclo_for            : 7 15
condicional_if       : 28 31
condicional_ifs      : 6 14
declaracion_normal   : 5 13 32
expresion            : 20 21 22 23 27 29 30 31 32 32 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 51 52 53
funcion              : 8 16
imprimir             : 4 12
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 24 29 30 30 31 32
llamada_funcion      : 9 17 26
r_return             : 10 18
tipo                 : 22

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . imprimir
    (13) instruccion -> . declaracion_normal
    (14) instruccion -> . condicional_ifs
    (15) instruccion -> . ciclo_for
    (16) instruccion -> . funcion
    (17) instruccion -> . llamada_funcion
    (18) instruccion -> . r_return
    (19) instruccion -> . asignacion
    (20) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (22) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (23) declaracion_normal -> . RLET ID IGUAL expresion
    (28) condicional_ifs -> . RIF condicional_if
    (32) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (24) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funcion -> . ID PARIZQ PARDER
    (27) r_return -> . RRETURN expresion
    (21) asignacion -> . ID IGUAL expresion

    RCONSOLE        shift and go to state 12
    RLET            shift and go to state 13
    RIF             shift and go to state 15
    RFOR            shift and go to state 16
    RFUNCTION       shift and go to state 17
    ID              shift and go to state 14
    RRETURN         shift and go to state 18

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . imprimir
    (13) instruccion -> . declaracion_normal
    (14) instruccion -> . condicional_ifs
    (15) instruccion -> . ciclo_for
    (16) instruccion -> . funcion
    (17) instruccion -> . llamada_funcion
    (18) instruccion -> . r_return
    (19) instruccion -> . asignacion
    (20) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (22) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (23) declaracion_normal -> . RLET ID IGUAL expresion
    (28) condicional_ifs -> . RIF condicional_if
    (32) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (24) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funcion -> . ID PARIZQ PARDER
    (27) r_return -> . RRETURN expresion
    (21) asignacion -> . ID IGUAL expresion

    $end            reduce using rule 1 (init -> instrucciones .)
    RCONSOLE        shift and go to state 12
    RLET            shift and go to state 13
    RIF             shift and go to state 15
    RFOR            shift and go to state 16
    RFUNCTION       shift and go to state 17
    ID              shift and go to state 14
    RRETURN         shift and go to state 18

    instruccion                    shift and go to state 19
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11

state 3

    (3) instrucciones -> instruccion .

    RCONSOLE        reduce using rule 3 (instrucciones -> instruccion .)
    RLET            reduce using rule 3 (instrucciones -> instruccion .)
    RIF             reduce using rule 3 (instrucciones -> instruccion .)
    RFOR            reduce using rule 3 (instrucciones -> instruccion .)
    RFUNCTION       reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    RRETURN         reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> imprimir . PTCOMA
    (12) instruccion -> imprimir .

    PTCOMA          shift and go to state 20
    RCONSOLE        reduce using rule 12 (instruccion -> imprimir .)
    RLET            reduce using rule 12 (instruccion -> imprimir .)
    RIF             reduce using rule 12 (instruccion -> imprimir .)
    RFOR            reduce using rule 12 (instruccion -> imprimir .)
    RFUNCTION       reduce using rule 12 (instruccion -> imprimir .)
    ID              reduce using rule 12 (instruccion -> imprimir .)
    RRETURN         reduce using rule 12 (instruccion -> imprimir .)
    $end            reduce using rule 12 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 12 (instruccion -> imprimir .)


state 5

    (5) instruccion -> declaracion_normal . PTCOMA
    (13) instruccion -> declaracion_normal .

    PTCOMA          shift and go to state 21
    RCONSOLE        reduce using rule 13 (instruccion -> declaracion_normal .)
    RLET            reduce using rule 13 (instruccion -> declaracion_normal .)
    RIF             reduce using rule 13 (instruccion -> declaracion_normal .)
    RFOR            reduce using rule 13 (instruccion -> declaracion_normal .)
    RFUNCTION       reduce using rule 13 (instruccion -> declaracion_normal .)
    ID              reduce using rule 13 (instruccion -> declaracion_normal .)
    RRETURN         reduce using rule 13 (instruccion -> declaracion_normal .)
    $end            reduce using rule 13 (instruccion -> declaracion_normal .)
    LLAVEDER        reduce using rule 13 (instruccion -> declaracion_normal .)


state 6

    (6) instruccion -> condicional_ifs . PTCOMA
    (14) instruccion -> condicional_ifs .

    PTCOMA          shift and go to state 22
    RCONSOLE        reduce using rule 14 (instruccion -> condicional_ifs .)
    RLET            reduce using rule 14 (instruccion -> condicional_ifs .)
    RIF             reduce using rule 14 (instruccion -> condicional_ifs .)
    RFOR            reduce using rule 14 (instruccion -> condicional_ifs .)
    RFUNCTION       reduce using rule 14 (instruccion -> condicional_ifs .)
    ID              reduce using rule 14 (instruccion -> condicional_ifs .)
    RRETURN         reduce using rule 14 (instruccion -> condicional_ifs .)
    $end            reduce using rule 14 (instruccion -> condicional_ifs .)
    LLAVEDER        reduce using rule 14 (instruccion -> condicional_ifs .)


state 7

    (7) instruccion -> ciclo_for . PTCOMA
    (15) instruccion -> ciclo_for .

    PTCOMA          shift and go to state 23
    RCONSOLE        reduce using rule 15 (instruccion -> ciclo_for .)
    RLET            reduce using rule 15 (instruccion -> ciclo_for .)
    RIF             reduce using rule 15 (instruccion -> ciclo_for .)
    RFOR            reduce using rule 15 (instruccion -> ciclo_for .)
    RFUNCTION       reduce using rule 15 (instruccion -> ciclo_for .)
    ID              reduce using rule 15 (instruccion -> ciclo_for .)
    RRETURN         reduce using rule 15 (instruccion -> ciclo_for .)
    $end            reduce using rule 15 (instruccion -> ciclo_for .)
    LLAVEDER        reduce using rule 15 (instruccion -> ciclo_for .)


state 8

    (8) instruccion -> funcion . PTCOMA
    (16) instruccion -> funcion .

    PTCOMA          shift and go to state 24
    RCONSOLE        reduce using rule 16 (instruccion -> funcion .)
    RLET            reduce using rule 16 (instruccion -> funcion .)
    RIF             reduce using rule 16 (instruccion -> funcion .)
    RFOR            reduce using rule 16 (instruccion -> funcion .)
    RFUNCTION       reduce using rule 16 (instruccion -> funcion .)
    ID              reduce using rule 16 (instruccion -> funcion .)
    RRETURN         reduce using rule 16 (instruccion -> funcion .)
    $end            reduce using rule 16 (instruccion -> funcion .)
    LLAVEDER        reduce using rule 16 (instruccion -> funcion .)


state 9

    (9) instruccion -> llamada_funcion . PTCOMA
    (17) instruccion -> llamada_funcion .

    PTCOMA          shift and go to state 25
    RCONSOLE        reduce using rule 17 (instruccion -> llamada_funcion .)
    RLET            reduce using rule 17 (instruccion -> llamada_funcion .)
    RIF             reduce using rule 17 (instruccion -> llamada_funcion .)
    RFOR            reduce using rule 17 (instruccion -> llamada_funcion .)
    RFUNCTION       reduce using rule 17 (instruccion -> llamada_funcion .)
    ID              reduce using rule 17 (instruccion -> llamada_funcion .)
    RRETURN         reduce using rule 17 (instruccion -> llamada_funcion .)
    $end            reduce using rule 17 (instruccion -> llamada_funcion .)
    LLAVEDER        reduce using rule 17 (instruccion -> llamada_funcion .)


state 10

    (10) instruccion -> r_return . PTCOMA
    (18) instruccion -> r_return .

    PTCOMA          shift and go to state 26
    RCONSOLE        reduce using rule 18 (instruccion -> r_return .)
    RLET            reduce using rule 18 (instruccion -> r_return .)
    RIF             reduce using rule 18 (instruccion -> r_return .)
    RFOR            reduce using rule 18 (instruccion -> r_return .)
    RFUNCTION       reduce using rule 18 (instruccion -> r_return .)
    ID              reduce using rule 18 (instruccion -> r_return .)
    RRETURN         reduce using rule 18 (instruccion -> r_return .)
    $end            reduce using rule 18 (instruccion -> r_return .)
    LLAVEDER        reduce using rule 18 (instruccion -> r_return .)


state 11

    (11) instruccion -> asignacion . PTCOMA
    (19) instruccion -> asignacion .

    PTCOMA          shift and go to state 27
    RCONSOLE        reduce using rule 19 (instruccion -> asignacion .)
    RLET            reduce using rule 19 (instruccion -> asignacion .)
    RIF             reduce using rule 19 (instruccion -> asignacion .)
    RFOR            reduce using rule 19 (instruccion -> asignacion .)
    RFUNCTION       reduce using rule 19 (instruccion -> asignacion .)
    ID              reduce using rule 19 (instruccion -> asignacion .)
    RRETURN         reduce using rule 19 (instruccion -> asignacion .)
    $end            reduce using rule 19 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 19 (instruccion -> asignacion .)


state 12

    (20) imprimir -> RCONSOLE . PUNTO RLOG PARIZQ expresion PARDER

    PUNTO           shift and go to state 28


state 13

    (22) declaracion_normal -> RLET . ID DOSPUNTOS tipo IGUAL expresion
    (23) declaracion_normal -> RLET . ID IGUAL expresion

    ID              shift and go to state 29


state 14

    (25) llamada_funcion -> ID . PARIZQ PARDER
    (21) asignacion -> ID . IGUAL expresion

    PARIZQ          shift and go to state 30
    IGUAL           shift and go to state 31


state 15

    (28) condicional_ifs -> RIF . condicional_if
    (29) condicional_if -> . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) condicional_if -> . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (31) condicional_if -> . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if

    PARIZQ          shift and go to state 33

    condicional_if                 shift and go to state 32

state 16

    (32) ciclo_for -> RFOR . PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 34


state 17

    (24) funcion -> RFUNCTION . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 35


state 18

    (27) r_return -> RRETURN . expresion
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 36
    llamada_funcion                shift and go to state 37

state 19

    (2) instrucciones -> instrucciones instruccion .

    RCONSOLE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RLET            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RIF             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RFOR            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RFUNCTION       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RRETURN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 20

    (4) instruccion -> imprimir PTCOMA .

    RCONSOLE        reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    RLET            reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    RIF             reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    RFOR            reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    RFUNCTION       reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    ID              reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    RRETURN         reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    $end            reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    LLAVEDER        reduce using rule 4 (instruccion -> imprimir PTCOMA .)


state 21

    (5) instruccion -> declaracion_normal PTCOMA .

    RCONSOLE        reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    RLET            reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    RIF             reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    RFOR            reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    RFUNCTION       reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    ID              reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    RRETURN         reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    $end            reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)
    LLAVEDER        reduce using rule 5 (instruccion -> declaracion_normal PTCOMA .)


state 22

    (6) instruccion -> condicional_ifs PTCOMA .

    RCONSOLE        reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    RLET            reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    RIF             reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    RFOR            reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    RFUNCTION       reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    ID              reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    RRETURN         reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    $end            reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)
    LLAVEDER        reduce using rule 6 (instruccion -> condicional_ifs PTCOMA .)


state 23

    (7) instruccion -> ciclo_for PTCOMA .

    RCONSOLE        reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    RLET            reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    RIF             reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    RFOR            reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    RFUNCTION       reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    ID              reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    RRETURN         reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    $end            reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)
    LLAVEDER        reduce using rule 7 (instruccion -> ciclo_for PTCOMA .)


state 24

    (8) instruccion -> funcion PTCOMA .

    RCONSOLE        reduce using rule 8 (instruccion -> funcion PTCOMA .)
    RLET            reduce using rule 8 (instruccion -> funcion PTCOMA .)
    RIF             reduce using rule 8 (instruccion -> funcion PTCOMA .)
    RFOR            reduce using rule 8 (instruccion -> funcion PTCOMA .)
    RFUNCTION       reduce using rule 8 (instruccion -> funcion PTCOMA .)
    ID              reduce using rule 8 (instruccion -> funcion PTCOMA .)
    RRETURN         reduce using rule 8 (instruccion -> funcion PTCOMA .)
    $end            reduce using rule 8 (instruccion -> funcion PTCOMA .)
    LLAVEDER        reduce using rule 8 (instruccion -> funcion PTCOMA .)


state 25

    (9) instruccion -> llamada_funcion PTCOMA .

    RCONSOLE        reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    RLET            reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    RIF             reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    RFOR            reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    RFUNCTION       reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    ID              reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    RRETURN         reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    $end            reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)
    LLAVEDER        reduce using rule 9 (instruccion -> llamada_funcion PTCOMA .)


state 26

    (10) instruccion -> r_return PTCOMA .

    RCONSOLE        reduce using rule 10 (instruccion -> r_return PTCOMA .)
    RLET            reduce using rule 10 (instruccion -> r_return PTCOMA .)
    RIF             reduce using rule 10 (instruccion -> r_return PTCOMA .)
    RFOR            reduce using rule 10 (instruccion -> r_return PTCOMA .)
    RFUNCTION       reduce using rule 10 (instruccion -> r_return PTCOMA .)
    ID              reduce using rule 10 (instruccion -> r_return PTCOMA .)
    RRETURN         reduce using rule 10 (instruccion -> r_return PTCOMA .)
    $end            reduce using rule 10 (instruccion -> r_return PTCOMA .)
    LLAVEDER        reduce using rule 10 (instruccion -> r_return PTCOMA .)


state 27

    (11) instruccion -> asignacion PTCOMA .

    RCONSOLE        reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    RLET            reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    RIF             reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    RFOR            reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    RFUNCTION       reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    ID              reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    RRETURN         reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    $end            reduce using rule 11 (instruccion -> asignacion PTCOMA .)
    LLAVEDER        reduce using rule 11 (instruccion -> asignacion PTCOMA .)


state 28

    (20) imprimir -> RCONSOLE PUNTO . RLOG PARIZQ expresion PARDER

    RLOG            shift and go to state 48


state 29

    (22) declaracion_normal -> RLET ID . DOSPUNTOS tipo IGUAL expresion
    (23) declaracion_normal -> RLET ID . IGUAL expresion

    DOSPUNTOS       shift and go to state 49
    IGUAL           shift and go to state 50


state 30

    (25) llamada_funcion -> ID PARIZQ . PARDER

    PARDER          shift and go to state 51


state 31

    (21) asignacion -> ID IGUAL . expresion
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 52
    llamada_funcion                shift and go to state 37

state 32

    (28) condicional_ifs -> RIF condicional_if .

    PTCOMA          reduce using rule 28 (condicional_ifs -> RIF condicional_if .)
    RCONSOLE        reduce using rule 28 (condicional_ifs -> RIF condicional_if .)
    RLET            reduce using rule 28 (condicional_ifs -> RIF condicional_if .)
    RIF             reduce using rule 28 (condicional_ifs -> RIF condicional_if .)
    RFOR            reduce using rule 28 (condicional_ifs -> RIF condicional_if .)
    RFUNCTION       reduce using rule 28 (condicional_ifs -> RIF condicional_if .)
    ID              reduce using rule 28 (condicional_ifs -> RIF condicional_if .)
    RRETURN         reduce using rule 28 (condicional_ifs -> RIF condicional_if .)
    $end            reduce using rule 28 (condicional_ifs -> RIF condicional_if .)
    LLAVEDER        reduce using rule 28 (condicional_ifs -> RIF condicional_if .)


state 33

    (29) condicional_if -> PARIZQ . expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) condicional_if -> PARIZQ . expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (31) condicional_if -> PARIZQ . expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 53
    llamada_funcion                shift and go to state 37

state 34

    (32) ciclo_for -> RFOR PARIZQ . declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (22) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (23) declaracion_normal -> . RLET ID IGUAL expresion

    RLET            shift and go to state 13

    declaracion_normal             shift and go to state 54

state 35

    (24) funcion -> RFUNCTION ID . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 55


state 36

    (27) r_return -> RRETURN expresion .
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    PTCOMA          reduce using rule 27 (r_return -> RRETURN expresion .)
    RCONSOLE        reduce using rule 27 (r_return -> RRETURN expresion .)
    RLET            reduce using rule 27 (r_return -> RRETURN expresion .)
    RIF             reduce using rule 27 (r_return -> RRETURN expresion .)
    RFOR            reduce using rule 27 (r_return -> RRETURN expresion .)
    RFUNCTION       reduce using rule 27 (r_return -> RRETURN expresion .)
    ID              reduce using rule 27 (r_return -> RRETURN expresion .)
    RRETURN         reduce using rule 27 (r_return -> RRETURN expresion .)
    $end            reduce using rule 27 (r_return -> RRETURN expresion .)
    LLAVEDER        reduce using rule 27 (r_return -> RRETURN expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIV             shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    MAYORQ          shift and go to state 62
    MENORQ          shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    AND             shift and go to state 66
    OR              shift and go to state 67
    POT             shift and go to state 68
    MOD             shift and go to state 69


state 37

    (26) expresion -> llamada_funcion .

    MAS             reduce using rule 26 (expresion -> llamada_funcion .)
    MENOS           reduce using rule 26 (expresion -> llamada_funcion .)
    POR             reduce using rule 26 (expresion -> llamada_funcion .)
    DIV             reduce using rule 26 (expresion -> llamada_funcion .)
    IGUALDAD        reduce using rule 26 (expresion -> llamada_funcion .)
    DESIGUALDAD     reduce using rule 26 (expresion -> llamada_funcion .)
    MAYORQ          reduce using rule 26 (expresion -> llamada_funcion .)
    MENORQ          reduce using rule 26 (expresion -> llamada_funcion .)
    MAYORIGUAL      reduce using rule 26 (expresion -> llamada_funcion .)
    MENORIGUAL      reduce using rule 26 (expresion -> llamada_funcion .)
    AND             reduce using rule 26 (expresion -> llamada_funcion .)
    OR              reduce using rule 26 (expresion -> llamada_funcion .)
    POT             reduce using rule 26 (expresion -> llamada_funcion .)
    MOD             reduce using rule 26 (expresion -> llamada_funcion .)
    PTCOMA          reduce using rule 26 (expresion -> llamada_funcion .)
    RCONSOLE        reduce using rule 26 (expresion -> llamada_funcion .)
    RLET            reduce using rule 26 (expresion -> llamada_funcion .)
    RIF             reduce using rule 26 (expresion -> llamada_funcion .)
    RFOR            reduce using rule 26 (expresion -> llamada_funcion .)
    RFUNCTION       reduce using rule 26 (expresion -> llamada_funcion .)
    ID              reduce using rule 26 (expresion -> llamada_funcion .)
    RRETURN         reduce using rule 26 (expresion -> llamada_funcion .)
    $end            reduce using rule 26 (expresion -> llamada_funcion .)
    LLAVEDER        reduce using rule 26 (expresion -> llamada_funcion .)
    PARDER          reduce using rule 26 (expresion -> llamada_funcion .)


state 38

    (50) expresion -> MENOS . expresion
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 70
    llamada_funcion                shift and go to state 37

state 39

    (51) expresion -> NOT . expresion
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 71
    llamada_funcion                shift and go to state 37

state 40

    (54) expresion -> ID .
    (25) llamada_funcion -> ID . PARIZQ PARDER

    MAS             reduce using rule 54 (expresion -> ID .)
    MENOS           reduce using rule 54 (expresion -> ID .)
    POR             reduce using rule 54 (expresion -> ID .)
    DIV             reduce using rule 54 (expresion -> ID .)
    IGUALDAD        reduce using rule 54 (expresion -> ID .)
    DESIGUALDAD     reduce using rule 54 (expresion -> ID .)
    MAYORQ          reduce using rule 54 (expresion -> ID .)
    MENORQ          reduce using rule 54 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 54 (expresion -> ID .)
    MENORIGUAL      reduce using rule 54 (expresion -> ID .)
    AND             reduce using rule 54 (expresion -> ID .)
    OR              reduce using rule 54 (expresion -> ID .)
    POT             reduce using rule 54 (expresion -> ID .)
    MOD             reduce using rule 54 (expresion -> ID .)
    PTCOMA          reduce using rule 54 (expresion -> ID .)
    RCONSOLE        reduce using rule 54 (expresion -> ID .)
    RLET            reduce using rule 54 (expresion -> ID .)
    RIF             reduce using rule 54 (expresion -> ID .)
    RFOR            reduce using rule 54 (expresion -> ID .)
    RFUNCTION       reduce using rule 54 (expresion -> ID .)
    ID              reduce using rule 54 (expresion -> ID .)
    RRETURN         reduce using rule 54 (expresion -> ID .)
    $end            reduce using rule 54 (expresion -> ID .)
    LLAVEDER        reduce using rule 54 (expresion -> ID .)
    PARDER          reduce using rule 54 (expresion -> ID .)
    PARIZQ          shift and go to state 30


state 41

    (55) expresion -> RNULL .

    MAS             reduce using rule 55 (expresion -> RNULL .)
    MENOS           reduce using rule 55 (expresion -> RNULL .)
    POR             reduce using rule 55 (expresion -> RNULL .)
    DIV             reduce using rule 55 (expresion -> RNULL .)
    IGUALDAD        reduce using rule 55 (expresion -> RNULL .)
    DESIGUALDAD     reduce using rule 55 (expresion -> RNULL .)
    MAYORQ          reduce using rule 55 (expresion -> RNULL .)
    MENORQ          reduce using rule 55 (expresion -> RNULL .)
    MAYORIGUAL      reduce using rule 55 (expresion -> RNULL .)
    MENORIGUAL      reduce using rule 55 (expresion -> RNULL .)
    AND             reduce using rule 55 (expresion -> RNULL .)
    OR              reduce using rule 55 (expresion -> RNULL .)
    POT             reduce using rule 55 (expresion -> RNULL .)
    MOD             reduce using rule 55 (expresion -> RNULL .)
    PTCOMA          reduce using rule 55 (expresion -> RNULL .)
    RCONSOLE        reduce using rule 55 (expresion -> RNULL .)
    RLET            reduce using rule 55 (expresion -> RNULL .)
    RIF             reduce using rule 55 (expresion -> RNULL .)
    RFOR            reduce using rule 55 (expresion -> RNULL .)
    RFUNCTION       reduce using rule 55 (expresion -> RNULL .)
    ID              reduce using rule 55 (expresion -> RNULL .)
    RRETURN         reduce using rule 55 (expresion -> RNULL .)
    $end            reduce using rule 55 (expresion -> RNULL .)
    LLAVEDER        reduce using rule 55 (expresion -> RNULL .)
    PARDER          reduce using rule 55 (expresion -> RNULL .)


state 42

    (56) expresion -> RANY .

    MAS             reduce using rule 56 (expresion -> RANY .)
    MENOS           reduce using rule 56 (expresion -> RANY .)
    POR             reduce using rule 56 (expresion -> RANY .)
    DIV             reduce using rule 56 (expresion -> RANY .)
    IGUALDAD        reduce using rule 56 (expresion -> RANY .)
    DESIGUALDAD     reduce using rule 56 (expresion -> RANY .)
    MAYORQ          reduce using rule 56 (expresion -> RANY .)
    MENORQ          reduce using rule 56 (expresion -> RANY .)
    MAYORIGUAL      reduce using rule 56 (expresion -> RANY .)
    MENORIGUAL      reduce using rule 56 (expresion -> RANY .)
    AND             reduce using rule 56 (expresion -> RANY .)
    OR              reduce using rule 56 (expresion -> RANY .)
    POT             reduce using rule 56 (expresion -> RANY .)
    MOD             reduce using rule 56 (expresion -> RANY .)
    PTCOMA          reduce using rule 56 (expresion -> RANY .)
    RCONSOLE        reduce using rule 56 (expresion -> RANY .)
    RLET            reduce using rule 56 (expresion -> RANY .)
    RIF             reduce using rule 56 (expresion -> RANY .)
    RFOR            reduce using rule 56 (expresion -> RANY .)
    RFUNCTION       reduce using rule 56 (expresion -> RANY .)
    ID              reduce using rule 56 (expresion -> RANY .)
    RRETURN         reduce using rule 56 (expresion -> RANY .)
    $end            reduce using rule 56 (expresion -> RANY .)
    LLAVEDER        reduce using rule 56 (expresion -> RANY .)
    PARDER          reduce using rule 56 (expresion -> RANY .)


state 43

    (57) expresion -> ENTERO .

    MAS             reduce using rule 57 (expresion -> ENTERO .)
    MENOS           reduce using rule 57 (expresion -> ENTERO .)
    POR             reduce using rule 57 (expresion -> ENTERO .)
    DIV             reduce using rule 57 (expresion -> ENTERO .)
    IGUALDAD        reduce using rule 57 (expresion -> ENTERO .)
    DESIGUALDAD     reduce using rule 57 (expresion -> ENTERO .)
    MAYORQ          reduce using rule 57 (expresion -> ENTERO .)
    MENORQ          reduce using rule 57 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 57 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 57 (expresion -> ENTERO .)
    AND             reduce using rule 57 (expresion -> ENTERO .)
    OR              reduce using rule 57 (expresion -> ENTERO .)
    POT             reduce using rule 57 (expresion -> ENTERO .)
    MOD             reduce using rule 57 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 57 (expresion -> ENTERO .)
    RCONSOLE        reduce using rule 57 (expresion -> ENTERO .)
    RLET            reduce using rule 57 (expresion -> ENTERO .)
    RIF             reduce using rule 57 (expresion -> ENTERO .)
    RFOR            reduce using rule 57 (expresion -> ENTERO .)
    RFUNCTION       reduce using rule 57 (expresion -> ENTERO .)
    ID              reduce using rule 57 (expresion -> ENTERO .)
    RRETURN         reduce using rule 57 (expresion -> ENTERO .)
    $end            reduce using rule 57 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 57 (expresion -> ENTERO .)
    PARDER          reduce using rule 57 (expresion -> ENTERO .)


state 44

    (58) expresion -> DECIMAL .

    MAS             reduce using rule 58 (expresion -> DECIMAL .)
    MENOS           reduce using rule 58 (expresion -> DECIMAL .)
    POR             reduce using rule 58 (expresion -> DECIMAL .)
    DIV             reduce using rule 58 (expresion -> DECIMAL .)
    IGUALDAD        reduce using rule 58 (expresion -> DECIMAL .)
    DESIGUALDAD     reduce using rule 58 (expresion -> DECIMAL .)
    MAYORQ          reduce using rule 58 (expresion -> DECIMAL .)
    MENORQ          reduce using rule 58 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 58 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 58 (expresion -> DECIMAL .)
    AND             reduce using rule 58 (expresion -> DECIMAL .)
    OR              reduce using rule 58 (expresion -> DECIMAL .)
    POT             reduce using rule 58 (expresion -> DECIMAL .)
    MOD             reduce using rule 58 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 58 (expresion -> DECIMAL .)
    RCONSOLE        reduce using rule 58 (expresion -> DECIMAL .)
    RLET            reduce using rule 58 (expresion -> DECIMAL .)
    RIF             reduce using rule 58 (expresion -> DECIMAL .)
    RFOR            reduce using rule 58 (expresion -> DECIMAL .)
    RFUNCTION       reduce using rule 58 (expresion -> DECIMAL .)
    ID              reduce using rule 58 (expresion -> DECIMAL .)
    RRETURN         reduce using rule 58 (expresion -> DECIMAL .)
    $end            reduce using rule 58 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 58 (expresion -> DECIMAL .)
    PARDER          reduce using rule 58 (expresion -> DECIMAL .)


state 45

    (59) expresion -> CADENA .

    MAS             reduce using rule 59 (expresion -> CADENA .)
    MENOS           reduce using rule 59 (expresion -> CADENA .)
    POR             reduce using rule 59 (expresion -> CADENA .)
    DIV             reduce using rule 59 (expresion -> CADENA .)
    IGUALDAD        reduce using rule 59 (expresion -> CADENA .)
    DESIGUALDAD     reduce using rule 59 (expresion -> CADENA .)
    MAYORQ          reduce using rule 59 (expresion -> CADENA .)
    MENORQ          reduce using rule 59 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 59 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 59 (expresion -> CADENA .)
    AND             reduce using rule 59 (expresion -> CADENA .)
    OR              reduce using rule 59 (expresion -> CADENA .)
    POT             reduce using rule 59 (expresion -> CADENA .)
    MOD             reduce using rule 59 (expresion -> CADENA .)
    PTCOMA          reduce using rule 59 (expresion -> CADENA .)
    RCONSOLE        reduce using rule 59 (expresion -> CADENA .)
    RLET            reduce using rule 59 (expresion -> CADENA .)
    RIF             reduce using rule 59 (expresion -> CADENA .)
    RFOR            reduce using rule 59 (expresion -> CADENA .)
    RFUNCTION       reduce using rule 59 (expresion -> CADENA .)
    ID              reduce using rule 59 (expresion -> CADENA .)
    RRETURN         reduce using rule 59 (expresion -> CADENA .)
    $end            reduce using rule 59 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 59 (expresion -> CADENA .)
    PARDER          reduce using rule 59 (expresion -> CADENA .)


state 46

    (60) expresion -> RTRUE .

    MAS             reduce using rule 60 (expresion -> RTRUE .)
    MENOS           reduce using rule 60 (expresion -> RTRUE .)
    POR             reduce using rule 60 (expresion -> RTRUE .)
    DIV             reduce using rule 60 (expresion -> RTRUE .)
    IGUALDAD        reduce using rule 60 (expresion -> RTRUE .)
    DESIGUALDAD     reduce using rule 60 (expresion -> RTRUE .)
    MAYORQ          reduce using rule 60 (expresion -> RTRUE .)
    MENORQ          reduce using rule 60 (expresion -> RTRUE .)
    MAYORIGUAL      reduce using rule 60 (expresion -> RTRUE .)
    MENORIGUAL      reduce using rule 60 (expresion -> RTRUE .)
    AND             reduce using rule 60 (expresion -> RTRUE .)
    OR              reduce using rule 60 (expresion -> RTRUE .)
    POT             reduce using rule 60 (expresion -> RTRUE .)
    MOD             reduce using rule 60 (expresion -> RTRUE .)
    PTCOMA          reduce using rule 60 (expresion -> RTRUE .)
    RCONSOLE        reduce using rule 60 (expresion -> RTRUE .)
    RLET            reduce using rule 60 (expresion -> RTRUE .)
    RIF             reduce using rule 60 (expresion -> RTRUE .)
    RFOR            reduce using rule 60 (expresion -> RTRUE .)
    RFUNCTION       reduce using rule 60 (expresion -> RTRUE .)
    ID              reduce using rule 60 (expresion -> RTRUE .)
    RRETURN         reduce using rule 60 (expresion -> RTRUE .)
    $end            reduce using rule 60 (expresion -> RTRUE .)
    LLAVEDER        reduce using rule 60 (expresion -> RTRUE .)
    PARDER          reduce using rule 60 (expresion -> RTRUE .)


state 47

    (61) expresion -> RFALSE .

    MAS             reduce using rule 61 (expresion -> RFALSE .)
    MENOS           reduce using rule 61 (expresion -> RFALSE .)
    POR             reduce using rule 61 (expresion -> RFALSE .)
    DIV             reduce using rule 61 (expresion -> RFALSE .)
    IGUALDAD        reduce using rule 61 (expresion -> RFALSE .)
    DESIGUALDAD     reduce using rule 61 (expresion -> RFALSE .)
    MAYORQ          reduce using rule 61 (expresion -> RFALSE .)
    MENORQ          reduce using rule 61 (expresion -> RFALSE .)
    MAYORIGUAL      reduce using rule 61 (expresion -> RFALSE .)
    MENORIGUAL      reduce using rule 61 (expresion -> RFALSE .)
    AND             reduce using rule 61 (expresion -> RFALSE .)
    OR              reduce using rule 61 (expresion -> RFALSE .)
    POT             reduce using rule 61 (expresion -> RFALSE .)
    MOD             reduce using rule 61 (expresion -> RFALSE .)
    PTCOMA          reduce using rule 61 (expresion -> RFALSE .)
    RCONSOLE        reduce using rule 61 (expresion -> RFALSE .)
    RLET            reduce using rule 61 (expresion -> RFALSE .)
    RIF             reduce using rule 61 (expresion -> RFALSE .)
    RFOR            reduce using rule 61 (expresion -> RFALSE .)
    RFUNCTION       reduce using rule 61 (expresion -> RFALSE .)
    ID              reduce using rule 61 (expresion -> RFALSE .)
    RRETURN         reduce using rule 61 (expresion -> RFALSE .)
    $end            reduce using rule 61 (expresion -> RFALSE .)
    LLAVEDER        reduce using rule 61 (expresion -> RFALSE .)
    PARDER          reduce using rule 61 (expresion -> RFALSE .)


state 48

    (20) imprimir -> RCONSOLE PUNTO RLOG . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 72


state 49

    (22) declaracion_normal -> RLET ID DOSPUNTOS . tipo IGUAL expresion
    (33) tipo -> . RSTRING
    (34) tipo -> . RNUMBER
    (35) tipo -> . RBOOLEAN

    RSTRING         shift and go to state 74
    RNUMBER         shift and go to state 75
    RBOOLEAN        shift and go to state 76

    tipo                           shift and go to state 73

state 50

    (23) declaracion_normal -> RLET ID IGUAL . expresion
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 77
    llamada_funcion                shift and go to state 37

state 51

    (25) llamada_funcion -> ID PARIZQ PARDER .

    PTCOMA          reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    RCONSOLE        reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    RLET            reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    RIF             reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    RFOR            reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    RFUNCTION       reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    ID              reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    RRETURN         reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    $end            reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    MAS             reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    POR             reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    DIV             reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    IGUALDAD        reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    DESIGUALDAD     reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    MAYORQ          reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    MENORQ          reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    AND             reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    OR              reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    POT             reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    MOD             reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 25 (llamada_funcion -> ID PARIZQ PARDER .)


state 52

    (21) asignacion -> ID IGUAL expresion .
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    PTCOMA          reduce using rule 21 (asignacion -> ID IGUAL expresion .)
    RCONSOLE        reduce using rule 21 (asignacion -> ID IGUAL expresion .)
    RLET            reduce using rule 21 (asignacion -> ID IGUAL expresion .)
    RIF             reduce using rule 21 (asignacion -> ID IGUAL expresion .)
    RFOR            reduce using rule 21 (asignacion -> ID IGUAL expresion .)
    RFUNCTION       reduce using rule 21 (asignacion -> ID IGUAL expresion .)
    ID              reduce using rule 21 (asignacion -> ID IGUAL expresion .)
    RRETURN         reduce using rule 21 (asignacion -> ID IGUAL expresion .)
    $end            reduce using rule 21 (asignacion -> ID IGUAL expresion .)
    LLAVEDER        reduce using rule 21 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIV             shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    MAYORQ          shift and go to state 62
    MENORQ          shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    AND             shift and go to state 66
    OR              shift and go to state 67
    POT             shift and go to state 68
    MOD             shift and go to state 69


state 53

    (29) condicional_if -> PARIZQ expresion . PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) condicional_if -> PARIZQ expresion . PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (31) condicional_if -> PARIZQ expresion . PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    PARDER          shift and go to state 78
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIV             shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    MAYORQ          shift and go to state 62
    MENORQ          shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    AND             shift and go to state 66
    OR              shift and go to state 67
    POT             shift and go to state 68
    MOD             shift and go to state 69


state 54

    (32) ciclo_for -> RFOR PARIZQ declaracion_normal . PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    PTCOMA          shift and go to state 79


state 55

    (24) funcion -> RFUNCTION ID PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 80


state 56

    (36) expresion -> expresion MAS . expresion
    (52) expresion -> expresion MAS . MAS
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MAS             shift and go to state 82
    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 81
    llamada_funcion                shift and go to state 37

state 57

    (37) expresion -> expresion MENOS . expresion
    (53) expresion -> expresion MENOS . MENOS
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 84
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 83
    llamada_funcion                shift and go to state 37

state 58

    (38) expresion -> expresion POR . expresion
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 85
    llamada_funcion                shift and go to state 37

state 59

    (39) expresion -> expresion DIV . expresion
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 86
    llamada_funcion                shift and go to state 37

state 60

    (40) expresion -> expresion IGUALDAD . expresion
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 87
    llamada_funcion                shift and go to state 37

state 61

    (41) expresion -> expresion DESIGUALDAD . expresion
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 88
    llamada_funcion                shift and go to state 37

state 62

    (42) expresion -> expresion MAYORQ . expresion
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 89
    llamada_funcion                shift and go to state 37

state 63

    (43) expresion -> expresion MENORQ . expresion
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 90
    llamada_funcion                shift and go to state 37

state 64

    (44) expresion -> expresion MAYORIGUAL . expresion
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 91
    llamada_funcion                shift and go to state 37

state 65

    (45) expresion -> expresion MENORIGUAL . expresion
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 92
    llamada_funcion                shift and go to state 37

state 66

    (46) expresion -> expresion AND . expresion
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 93
    llamada_funcion                shift and go to state 37

state 67

    (47) expresion -> expresion OR . expresion
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 94
    llamada_funcion                shift and go to state 37

state 68

    (48) expresion -> expresion POT . expresion
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 95
    llamada_funcion                shift and go to state 37

state 69

    (49) expresion -> expresion MOD . expresion
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 96
    llamada_funcion                shift and go to state 37

state 70

    (50) expresion -> MENOS expresion .
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 50 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 50 (expresion -> MENOS expresion .)
    POR             reduce using rule 50 (expresion -> MENOS expresion .)
    DIV             reduce using rule 50 (expresion -> MENOS expresion .)
    IGUALDAD        reduce using rule 50 (expresion -> MENOS expresion .)
    DESIGUALDAD     reduce using rule 50 (expresion -> MENOS expresion .)
    MAYORQ          reduce using rule 50 (expresion -> MENOS expresion .)
    MENORQ          reduce using rule 50 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 50 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 50 (expresion -> MENOS expresion .)
    AND             reduce using rule 50 (expresion -> MENOS expresion .)
    OR              reduce using rule 50 (expresion -> MENOS expresion .)
    POT             reduce using rule 50 (expresion -> MENOS expresion .)
    MOD             reduce using rule 50 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 50 (expresion -> MENOS expresion .)
    RCONSOLE        reduce using rule 50 (expresion -> MENOS expresion .)
    RLET            reduce using rule 50 (expresion -> MENOS expresion .)
    RIF             reduce using rule 50 (expresion -> MENOS expresion .)
    RFOR            reduce using rule 50 (expresion -> MENOS expresion .)
    RFUNCTION       reduce using rule 50 (expresion -> MENOS expresion .)
    ID              reduce using rule 50 (expresion -> MENOS expresion .)
    RRETURN         reduce using rule 50 (expresion -> MENOS expresion .)
    $end            reduce using rule 50 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 50 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 50 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 56 ]
  ! MENOS           [ shift and go to state 57 ]
  ! POR             [ shift and go to state 58 ]
  ! DIV             [ shift and go to state 59 ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]
  ! MAYORQ          [ shift and go to state 62 ]
  ! MENORQ          [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! AND             [ shift and go to state 66 ]
  ! OR              [ shift and go to state 67 ]
  ! POT             [ shift and go to state 68 ]
  ! MOD             [ shift and go to state 69 ]


state 71

    (51) expresion -> NOT expresion .
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    AND             reduce using rule 51 (expresion -> NOT expresion .)
    OR              reduce using rule 51 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 51 (expresion -> NOT expresion .)
    RCONSOLE        reduce using rule 51 (expresion -> NOT expresion .)
    RLET            reduce using rule 51 (expresion -> NOT expresion .)
    RIF             reduce using rule 51 (expresion -> NOT expresion .)
    RFOR            reduce using rule 51 (expresion -> NOT expresion .)
    RFUNCTION       reduce using rule 51 (expresion -> NOT expresion .)
    ID              reduce using rule 51 (expresion -> NOT expresion .)
    RRETURN         reduce using rule 51 (expresion -> NOT expresion .)
    $end            reduce using rule 51 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 51 (expresion -> NOT expresion .)
    PARDER          reduce using rule 51 (expresion -> NOT expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIV             shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    MAYORQ          shift and go to state 62
    MENORQ          shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    POT             shift and go to state 68
    MOD             shift and go to state 69

  ! MAS             [ reduce using rule 51 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 51 (expresion -> NOT expresion .) ]
  ! POR             [ reduce using rule 51 (expresion -> NOT expresion .) ]
  ! DIV             [ reduce using rule 51 (expresion -> NOT expresion .) ]
  ! IGUALDAD        [ reduce using rule 51 (expresion -> NOT expresion .) ]
  ! DESIGUALDAD     [ reduce using rule 51 (expresion -> NOT expresion .) ]
  ! MAYORQ          [ reduce using rule 51 (expresion -> NOT expresion .) ]
  ! MENORQ          [ reduce using rule 51 (expresion -> NOT expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 51 (expresion -> NOT expresion .) ]
  ! MENORIGUAL      [ reduce using rule 51 (expresion -> NOT expresion .) ]
  ! POT             [ reduce using rule 51 (expresion -> NOT expresion .) ]
  ! MOD             [ reduce using rule 51 (expresion -> NOT expresion .) ]
  ! AND             [ shift and go to state 66 ]
  ! OR              [ shift and go to state 67 ]


state 72

    (20) imprimir -> RCONSOLE PUNTO RLOG PARIZQ . expresion PARDER
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 97
    llamada_funcion                shift and go to state 37

state 73

    (22) declaracion_normal -> RLET ID DOSPUNTOS tipo . IGUAL expresion

    IGUAL           shift and go to state 98


state 74

    (33) tipo -> RSTRING .

    IGUAL           reduce using rule 33 (tipo -> RSTRING .)


state 75

    (34) tipo -> RNUMBER .

    IGUAL           reduce using rule 34 (tipo -> RNUMBER .)


state 76

    (35) tipo -> RBOOLEAN .

    IGUAL           reduce using rule 35 (tipo -> RBOOLEAN .)


state 77

    (23) declaracion_normal -> RLET ID IGUAL expresion .
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    PTCOMA          reduce using rule 23 (declaracion_normal -> RLET ID IGUAL expresion .)
    RCONSOLE        reduce using rule 23 (declaracion_normal -> RLET ID IGUAL expresion .)
    RLET            reduce using rule 23 (declaracion_normal -> RLET ID IGUAL expresion .)
    RIF             reduce using rule 23 (declaracion_normal -> RLET ID IGUAL expresion .)
    RFOR            reduce using rule 23 (declaracion_normal -> RLET ID IGUAL expresion .)
    RFUNCTION       reduce using rule 23 (declaracion_normal -> RLET ID IGUAL expresion .)
    ID              reduce using rule 23 (declaracion_normal -> RLET ID IGUAL expresion .)
    RRETURN         reduce using rule 23 (declaracion_normal -> RLET ID IGUAL expresion .)
    $end            reduce using rule 23 (declaracion_normal -> RLET ID IGUAL expresion .)
    LLAVEDER        reduce using rule 23 (declaracion_normal -> RLET ID IGUAL expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIV             shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    MAYORQ          shift and go to state 62
    MENORQ          shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    AND             shift and go to state 66
    OR              shift and go to state 67
    POT             shift and go to state 68
    MOD             shift and go to state 69


state 78

    (29) condicional_if -> PARIZQ expresion PARDER . LLAVEIZQ instrucciones LLAVEDER
    (30) condicional_if -> PARIZQ expresion PARDER . LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (31) condicional_if -> PARIZQ expresion PARDER . LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if

    LLAVEIZQ        shift and go to state 99


state 79

    (32) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA . expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 100
    llamada_funcion                shift and go to state 37

state 80

    (24) funcion -> RFUNCTION ID PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 101


state 81

    (36) expresion -> expresion MAS expresion .
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 36 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 36 (expresion -> expresion MAS expresion .)
    IGUALDAD        reduce using rule 36 (expresion -> expresion MAS expresion .)
    DESIGUALDAD     reduce using rule 36 (expresion -> expresion MAS expresion .)
    MAYORQ          reduce using rule 36 (expresion -> expresion MAS expresion .)
    MENORQ          reduce using rule 36 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 36 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 36 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 36 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 36 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 36 (expresion -> expresion MAS expresion .)
    RCONSOLE        reduce using rule 36 (expresion -> expresion MAS expresion .)
    RLET            reduce using rule 36 (expresion -> expresion MAS expresion .)
    RIF             reduce using rule 36 (expresion -> expresion MAS expresion .)
    RFOR            reduce using rule 36 (expresion -> expresion MAS expresion .)
    RFUNCTION       reduce using rule 36 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 36 (expresion -> expresion MAS expresion .)
    RRETURN         reduce using rule 36 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 36 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 36 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 36 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 58
    DIV             shift and go to state 59
    POT             shift and go to state 68
    MOD             shift and go to state 69

  ! POR             [ reduce using rule 36 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 36 (expresion -> expresion MAS expresion .) ]
  ! POT             [ reduce using rule 36 (expresion -> expresion MAS expresion .) ]
  ! MOD             [ reduce using rule 36 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 56 ]
  ! MENOS           [ shift and go to state 57 ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]
  ! MAYORQ          [ shift and go to state 62 ]
  ! MENORQ          [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! AND             [ shift and go to state 66 ]
  ! OR              [ shift and go to state 67 ]


state 82

    (52) expresion -> expresion MAS MAS .

    MAS             reduce using rule 52 (expresion -> expresion MAS MAS .)
    MENOS           reduce using rule 52 (expresion -> expresion MAS MAS .)
    POR             reduce using rule 52 (expresion -> expresion MAS MAS .)
    DIV             reduce using rule 52 (expresion -> expresion MAS MAS .)
    IGUALDAD        reduce using rule 52 (expresion -> expresion MAS MAS .)
    DESIGUALDAD     reduce using rule 52 (expresion -> expresion MAS MAS .)
    MAYORQ          reduce using rule 52 (expresion -> expresion MAS MAS .)
    MENORQ          reduce using rule 52 (expresion -> expresion MAS MAS .)
    MAYORIGUAL      reduce using rule 52 (expresion -> expresion MAS MAS .)
    MENORIGUAL      reduce using rule 52 (expresion -> expresion MAS MAS .)
    AND             reduce using rule 52 (expresion -> expresion MAS MAS .)
    OR              reduce using rule 52 (expresion -> expresion MAS MAS .)
    POT             reduce using rule 52 (expresion -> expresion MAS MAS .)
    MOD             reduce using rule 52 (expresion -> expresion MAS MAS .)
    PTCOMA          reduce using rule 52 (expresion -> expresion MAS MAS .)
    RCONSOLE        reduce using rule 52 (expresion -> expresion MAS MAS .)
    RLET            reduce using rule 52 (expresion -> expresion MAS MAS .)
    RIF             reduce using rule 52 (expresion -> expresion MAS MAS .)
    RFOR            reduce using rule 52 (expresion -> expresion MAS MAS .)
    RFUNCTION       reduce using rule 52 (expresion -> expresion MAS MAS .)
    ID              reduce using rule 52 (expresion -> expresion MAS MAS .)
    RRETURN         reduce using rule 52 (expresion -> expresion MAS MAS .)
    $end            reduce using rule 52 (expresion -> expresion MAS MAS .)
    LLAVEDER        reduce using rule 52 (expresion -> expresion MAS MAS .)
    PARDER          reduce using rule 52 (expresion -> expresion MAS MAS .)


state 83

    (37) expresion -> expresion MENOS expresion .
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 37 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 37 (expresion -> expresion MENOS expresion .)
    IGUALDAD        reduce using rule 37 (expresion -> expresion MENOS expresion .)
    DESIGUALDAD     reduce using rule 37 (expresion -> expresion MENOS expresion .)
    MAYORQ          reduce using rule 37 (expresion -> expresion MENOS expresion .)
    MENORQ          reduce using rule 37 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 37 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 37 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 37 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 37 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 37 (expresion -> expresion MENOS expresion .)
    RCONSOLE        reduce using rule 37 (expresion -> expresion MENOS expresion .)
    RLET            reduce using rule 37 (expresion -> expresion MENOS expresion .)
    RIF             reduce using rule 37 (expresion -> expresion MENOS expresion .)
    RFOR            reduce using rule 37 (expresion -> expresion MENOS expresion .)
    RFUNCTION       reduce using rule 37 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 37 (expresion -> expresion MENOS expresion .)
    RRETURN         reduce using rule 37 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 37 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 37 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 37 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 58
    DIV             shift and go to state 59
    POT             shift and go to state 68
    MOD             shift and go to state 69

  ! POR             [ reduce using rule 37 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 37 (expresion -> expresion MENOS expresion .) ]
  ! POT             [ reduce using rule 37 (expresion -> expresion MENOS expresion .) ]
  ! MOD             [ reduce using rule 37 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 56 ]
  ! MENOS           [ shift and go to state 57 ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]
  ! MAYORQ          [ shift and go to state 62 ]
  ! MENORQ          [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! AND             [ shift and go to state 66 ]
  ! OR              [ shift and go to state 67 ]


state 84

    (53) expresion -> expresion MENOS MENOS .
    (50) expresion -> MENOS . expresion
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MAS             reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    MENOS           reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    POR             reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    DIV             reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    IGUALDAD        reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    DESIGUALDAD     reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    MAYORQ          reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    MENORQ          reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    MAYORIGUAL      reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    MENORIGUAL      reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    AND             reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    OR              reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    POT             reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    MOD             reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    PTCOMA          reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    RCONSOLE        reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    RLET            reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    RIF             reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    RFOR            reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    RFUNCTION       reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    ID              reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    RRETURN         reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    $end            reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    LLAVEDER        reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    PARDER          reduce using rule 53 (expresion -> expresion MENOS MENOS .)
    NOT             shift and go to state 39
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

  ! MENOS           [ shift and go to state 38 ]
  ! ID              [ shift and go to state 40 ]

    expresion                      shift and go to state 70
    llamada_funcion                shift and go to state 37

state 85

    (38) expresion -> expresion POR expresion .
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 38 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 38 (expresion -> expresion POR expresion .)
    POR             reduce using rule 38 (expresion -> expresion POR expresion .)
    DIV             reduce using rule 38 (expresion -> expresion POR expresion .)
    IGUALDAD        reduce using rule 38 (expresion -> expresion POR expresion .)
    DESIGUALDAD     reduce using rule 38 (expresion -> expresion POR expresion .)
    MAYORQ          reduce using rule 38 (expresion -> expresion POR expresion .)
    MENORQ          reduce using rule 38 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 38 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 38 (expresion -> expresion POR expresion .)
    AND             reduce using rule 38 (expresion -> expresion POR expresion .)
    OR              reduce using rule 38 (expresion -> expresion POR expresion .)
    MOD             reduce using rule 38 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 38 (expresion -> expresion POR expresion .)
    RCONSOLE        reduce using rule 38 (expresion -> expresion POR expresion .)
    RLET            reduce using rule 38 (expresion -> expresion POR expresion .)
    RIF             reduce using rule 38 (expresion -> expresion POR expresion .)
    RFOR            reduce using rule 38 (expresion -> expresion POR expresion .)
    RFUNCTION       reduce using rule 38 (expresion -> expresion POR expresion .)
    ID              reduce using rule 38 (expresion -> expresion POR expresion .)
    RRETURN         reduce using rule 38 (expresion -> expresion POR expresion .)
    $end            reduce using rule 38 (expresion -> expresion POR expresion .)
    LLAVEDER        reduce using rule 38 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 38 (expresion -> expresion POR expresion .)
    POT             shift and go to state 68

  ! POT             [ reduce using rule 38 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 56 ]
  ! MENOS           [ shift and go to state 57 ]
  ! POR             [ shift and go to state 58 ]
  ! DIV             [ shift and go to state 59 ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]
  ! MAYORQ          [ shift and go to state 62 ]
  ! MENORQ          [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! AND             [ shift and go to state 66 ]
  ! OR              [ shift and go to state 67 ]
  ! MOD             [ shift and go to state 69 ]


state 86

    (39) expresion -> expresion DIV expresion .
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 39 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 39 (expresion -> expresion DIV expresion .)
    POR             reduce using rule 39 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 39 (expresion -> expresion DIV expresion .)
    IGUALDAD        reduce using rule 39 (expresion -> expresion DIV expresion .)
    DESIGUALDAD     reduce using rule 39 (expresion -> expresion DIV expresion .)
    MAYORQ          reduce using rule 39 (expresion -> expresion DIV expresion .)
    MENORQ          reduce using rule 39 (expresion -> expresion DIV expresion .)
    MAYORIGUAL      reduce using rule 39 (expresion -> expresion DIV expresion .)
    MENORIGUAL      reduce using rule 39 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 39 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 39 (expresion -> expresion DIV expresion .)
    MOD             reduce using rule 39 (expresion -> expresion DIV expresion .)
    PTCOMA          reduce using rule 39 (expresion -> expresion DIV expresion .)
    RCONSOLE        reduce using rule 39 (expresion -> expresion DIV expresion .)
    RLET            reduce using rule 39 (expresion -> expresion DIV expresion .)
    RIF             reduce using rule 39 (expresion -> expresion DIV expresion .)
    RFOR            reduce using rule 39 (expresion -> expresion DIV expresion .)
    RFUNCTION       reduce using rule 39 (expresion -> expresion DIV expresion .)
    ID              reduce using rule 39 (expresion -> expresion DIV expresion .)
    RRETURN         reduce using rule 39 (expresion -> expresion DIV expresion .)
    $end            reduce using rule 39 (expresion -> expresion DIV expresion .)
    LLAVEDER        reduce using rule 39 (expresion -> expresion DIV expresion .)
    PARDER          reduce using rule 39 (expresion -> expresion DIV expresion .)
    POT             shift and go to state 68

  ! POT             [ reduce using rule 39 (expresion -> expresion DIV expresion .) ]
  ! MAS             [ shift and go to state 56 ]
  ! MENOS           [ shift and go to state 57 ]
  ! POR             [ shift and go to state 58 ]
  ! DIV             [ shift and go to state 59 ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]
  ! MAYORQ          [ shift and go to state 62 ]
  ! MENORQ          [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! AND             [ shift and go to state 66 ]
  ! OR              [ shift and go to state 67 ]
  ! MOD             [ shift and go to state 69 ]


state 87

    (40) expresion -> expresion IGUALDAD expresion .
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    IGUALDAD        reduce using rule 40 (expresion -> expresion IGUALDAD expresion .)
    DESIGUALDAD     reduce using rule 40 (expresion -> expresion IGUALDAD expresion .)
    AND             reduce using rule 40 (expresion -> expresion IGUALDAD expresion .)
    OR              reduce using rule 40 (expresion -> expresion IGUALDAD expresion .)
    PTCOMA          reduce using rule 40 (expresion -> expresion IGUALDAD expresion .)
    RCONSOLE        reduce using rule 40 (expresion -> expresion IGUALDAD expresion .)
    RLET            reduce using rule 40 (expresion -> expresion IGUALDAD expresion .)
    RIF             reduce using rule 40 (expresion -> expresion IGUALDAD expresion .)
    RFOR            reduce using rule 40 (expresion -> expresion IGUALDAD expresion .)
    RFUNCTION       reduce using rule 40 (expresion -> expresion IGUALDAD expresion .)
    ID              reduce using rule 40 (expresion -> expresion IGUALDAD expresion .)
    RRETURN         reduce using rule 40 (expresion -> expresion IGUALDAD expresion .)
    $end            reduce using rule 40 (expresion -> expresion IGUALDAD expresion .)
    LLAVEDER        reduce using rule 40 (expresion -> expresion IGUALDAD expresion .)
    PARDER          reduce using rule 40 (expresion -> expresion IGUALDAD expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIV             shift and go to state 59
    MAYORQ          shift and go to state 62
    MENORQ          shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    POT             shift and go to state 68
    MOD             shift and go to state 69

  ! MAS             [ reduce using rule 40 (expresion -> expresion IGUALDAD expresion .) ]
  ! MENOS           [ reduce using rule 40 (expresion -> expresion IGUALDAD expresion .) ]
  ! POR             [ reduce using rule 40 (expresion -> expresion IGUALDAD expresion .) ]
  ! DIV             [ reduce using rule 40 (expresion -> expresion IGUALDAD expresion .) ]
  ! MAYORQ          [ reduce using rule 40 (expresion -> expresion IGUALDAD expresion .) ]
  ! MENORQ          [ reduce using rule 40 (expresion -> expresion IGUALDAD expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 40 (expresion -> expresion IGUALDAD expresion .) ]
  ! MENORIGUAL      [ reduce using rule 40 (expresion -> expresion IGUALDAD expresion .) ]
  ! POT             [ reduce using rule 40 (expresion -> expresion IGUALDAD expresion .) ]
  ! MOD             [ reduce using rule 40 (expresion -> expresion IGUALDAD expresion .) ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]
  ! AND             [ shift and go to state 66 ]
  ! OR              [ shift and go to state 67 ]


state 88

    (41) expresion -> expresion DESIGUALDAD expresion .
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    IGUALDAD        reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .)
    DESIGUALDAD     reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .)
    AND             reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .)
    OR              reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .)
    PTCOMA          reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .)
    RCONSOLE        reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .)
    RLET            reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .)
    RIF             reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .)
    RFOR            reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .)
    RFUNCTION       reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .)
    ID              reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .)
    RRETURN         reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .)
    $end            reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .)
    LLAVEDER        reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .)
    PARDER          reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIV             shift and go to state 59
    MAYORQ          shift and go to state 62
    MENORQ          shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    POT             shift and go to state 68
    MOD             shift and go to state 69

  ! MAS             [ reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! MENOS           [ reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! POR             [ reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! DIV             [ reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! MAYORQ          [ reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! MENORQ          [ reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! MENORIGUAL      [ reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! POT             [ reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! MOD             [ reduce using rule 41 (expresion -> expresion DESIGUALDAD expresion .) ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]
  ! AND             [ shift and go to state 66 ]
  ! OR              [ shift and go to state 67 ]


state 89

    (42) expresion -> expresion MAYORQ expresion .
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    IGUALDAD        reduce using rule 42 (expresion -> expresion MAYORQ expresion .)
    DESIGUALDAD     reduce using rule 42 (expresion -> expresion MAYORQ expresion .)
    MAYORQ          reduce using rule 42 (expresion -> expresion MAYORQ expresion .)
    MENORQ          reduce using rule 42 (expresion -> expresion MAYORQ expresion .)
    MAYORIGUAL      reduce using rule 42 (expresion -> expresion MAYORQ expresion .)
    MENORIGUAL      reduce using rule 42 (expresion -> expresion MAYORQ expresion .)
    AND             reduce using rule 42 (expresion -> expresion MAYORQ expresion .)
    OR              reduce using rule 42 (expresion -> expresion MAYORQ expresion .)
    PTCOMA          reduce using rule 42 (expresion -> expresion MAYORQ expresion .)
    RCONSOLE        reduce using rule 42 (expresion -> expresion MAYORQ expresion .)
    RLET            reduce using rule 42 (expresion -> expresion MAYORQ expresion .)
    RIF             reduce using rule 42 (expresion -> expresion MAYORQ expresion .)
    RFOR            reduce using rule 42 (expresion -> expresion MAYORQ expresion .)
    RFUNCTION       reduce using rule 42 (expresion -> expresion MAYORQ expresion .)
    ID              reduce using rule 42 (expresion -> expresion MAYORQ expresion .)
    RRETURN         reduce using rule 42 (expresion -> expresion MAYORQ expresion .)
    $end            reduce using rule 42 (expresion -> expresion MAYORQ expresion .)
    LLAVEDER        reduce using rule 42 (expresion -> expresion MAYORQ expresion .)
    PARDER          reduce using rule 42 (expresion -> expresion MAYORQ expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIV             shift and go to state 59
    POT             shift and go to state 68
    MOD             shift and go to state 69

  ! MAS             [ reduce using rule 42 (expresion -> expresion MAYORQ expresion .) ]
  ! MENOS           [ reduce using rule 42 (expresion -> expresion MAYORQ expresion .) ]
  ! POR             [ reduce using rule 42 (expresion -> expresion MAYORQ expresion .) ]
  ! DIV             [ reduce using rule 42 (expresion -> expresion MAYORQ expresion .) ]
  ! POT             [ reduce using rule 42 (expresion -> expresion MAYORQ expresion .) ]
  ! MOD             [ reduce using rule 42 (expresion -> expresion MAYORQ expresion .) ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]
  ! MAYORQ          [ shift and go to state 62 ]
  ! MENORQ          [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! AND             [ shift and go to state 66 ]
  ! OR              [ shift and go to state 67 ]


state 90

    (43) expresion -> expresion MENORQ expresion .
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    IGUALDAD        reduce using rule 43 (expresion -> expresion MENORQ expresion .)
    DESIGUALDAD     reduce using rule 43 (expresion -> expresion MENORQ expresion .)
    MAYORQ          reduce using rule 43 (expresion -> expresion MENORQ expresion .)
    MENORQ          reduce using rule 43 (expresion -> expresion MENORQ expresion .)
    MAYORIGUAL      reduce using rule 43 (expresion -> expresion MENORQ expresion .)
    MENORIGUAL      reduce using rule 43 (expresion -> expresion MENORQ expresion .)
    AND             reduce using rule 43 (expresion -> expresion MENORQ expresion .)
    OR              reduce using rule 43 (expresion -> expresion MENORQ expresion .)
    PTCOMA          reduce using rule 43 (expresion -> expresion MENORQ expresion .)
    RCONSOLE        reduce using rule 43 (expresion -> expresion MENORQ expresion .)
    RLET            reduce using rule 43 (expresion -> expresion MENORQ expresion .)
    RIF             reduce using rule 43 (expresion -> expresion MENORQ expresion .)
    RFOR            reduce using rule 43 (expresion -> expresion MENORQ expresion .)
    RFUNCTION       reduce using rule 43 (expresion -> expresion MENORQ expresion .)
    ID              reduce using rule 43 (expresion -> expresion MENORQ expresion .)
    RRETURN         reduce using rule 43 (expresion -> expresion MENORQ expresion .)
    $end            reduce using rule 43 (expresion -> expresion MENORQ expresion .)
    LLAVEDER        reduce using rule 43 (expresion -> expresion MENORQ expresion .)
    PARDER          reduce using rule 43 (expresion -> expresion MENORQ expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIV             shift and go to state 59
    POT             shift and go to state 68
    MOD             shift and go to state 69

  ! MAS             [ reduce using rule 43 (expresion -> expresion MENORQ expresion .) ]
  ! MENOS           [ reduce using rule 43 (expresion -> expresion MENORQ expresion .) ]
  ! POR             [ reduce using rule 43 (expresion -> expresion MENORQ expresion .) ]
  ! DIV             [ reduce using rule 43 (expresion -> expresion MENORQ expresion .) ]
  ! POT             [ reduce using rule 43 (expresion -> expresion MENORQ expresion .) ]
  ! MOD             [ reduce using rule 43 (expresion -> expresion MENORQ expresion .) ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]
  ! MAYORQ          [ shift and go to state 62 ]
  ! MENORQ          [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! AND             [ shift and go to state 66 ]
  ! OR              [ shift and go to state 67 ]


state 91

    (44) expresion -> expresion MAYORIGUAL expresion .
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    IGUALDAD        reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .)
    DESIGUALDAD     reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORQ          reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .)
    MENORQ          reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .)
    PTCOMA          reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .)
    RCONSOLE        reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .)
    RLET            reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .)
    RIF             reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .)
    RFOR            reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .)
    RFUNCTION       reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .)
    ID              reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .)
    RRETURN         reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .)
    $end            reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .)
    LLAVEDER        reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .)
    PARDER          reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIV             shift and go to state 59
    POT             shift and go to state 68
    MOD             shift and go to state 69

  ! MAS             [ reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POT             [ reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MOD             [ reduce using rule 44 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]
  ! MAYORQ          [ shift and go to state 62 ]
  ! MENORQ          [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! AND             [ shift and go to state 66 ]
  ! OR              [ shift and go to state 67 ]


state 92

    (45) expresion -> expresion MENORIGUAL expresion .
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    IGUALDAD        reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .)
    DESIGUALDAD     reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .)
    MAYORQ          reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .)
    MENORQ          reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .)
    PTCOMA          reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .)
    RCONSOLE        reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .)
    RLET            reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .)
    RIF             reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .)
    RFOR            reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .)
    RFUNCTION       reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .)
    ID              reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .)
    RRETURN         reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .)
    $end            reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .)
    LLAVEDER        reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .)
    PARDER          reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIV             shift and go to state 59
    POT             shift and go to state 68
    MOD             shift and go to state 69

  ! MAS             [ reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POT             [ reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MOD             [ reduce using rule 45 (expresion -> expresion MENORIGUAL expresion .) ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]
  ! MAYORQ          [ shift and go to state 62 ]
  ! MENORQ          [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! AND             [ shift and go to state 66 ]
  ! OR              [ shift and go to state 67 ]


state 93

    (46) expresion -> expresion AND expresion .
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    AND             reduce using rule 46 (expresion -> expresion AND expresion .)
    OR              reduce using rule 46 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 46 (expresion -> expresion AND expresion .)
    RCONSOLE        reduce using rule 46 (expresion -> expresion AND expresion .)
    RLET            reduce using rule 46 (expresion -> expresion AND expresion .)
    RIF             reduce using rule 46 (expresion -> expresion AND expresion .)
    RFOR            reduce using rule 46 (expresion -> expresion AND expresion .)
    RFUNCTION       reduce using rule 46 (expresion -> expresion AND expresion .)
    ID              reduce using rule 46 (expresion -> expresion AND expresion .)
    RRETURN         reduce using rule 46 (expresion -> expresion AND expresion .)
    $end            reduce using rule 46 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 46 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 46 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIV             shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    MAYORQ          shift and go to state 62
    MENORQ          shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    POT             shift and go to state 68
    MOD             shift and go to state 69

  ! MAS             [ reduce using rule 46 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 46 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 46 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 46 (expresion -> expresion AND expresion .) ]
  ! IGUALDAD        [ reduce using rule 46 (expresion -> expresion AND expresion .) ]
  ! DESIGUALDAD     [ reduce using rule 46 (expresion -> expresion AND expresion .) ]
  ! MAYORQ          [ reduce using rule 46 (expresion -> expresion AND expresion .) ]
  ! MENORQ          [ reduce using rule 46 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 46 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 46 (expresion -> expresion AND expresion .) ]
  ! POT             [ reduce using rule 46 (expresion -> expresion AND expresion .) ]
  ! MOD             [ reduce using rule 46 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 66 ]
  ! OR              [ shift and go to state 67 ]


state 94

    (47) expresion -> expresion OR expresion .
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    OR              reduce using rule 47 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 47 (expresion -> expresion OR expresion .)
    RCONSOLE        reduce using rule 47 (expresion -> expresion OR expresion .)
    RLET            reduce using rule 47 (expresion -> expresion OR expresion .)
    RIF             reduce using rule 47 (expresion -> expresion OR expresion .)
    RFOR            reduce using rule 47 (expresion -> expresion OR expresion .)
    RFUNCTION       reduce using rule 47 (expresion -> expresion OR expresion .)
    ID              reduce using rule 47 (expresion -> expresion OR expresion .)
    RRETURN         reduce using rule 47 (expresion -> expresion OR expresion .)
    $end            reduce using rule 47 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 47 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 47 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIV             shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    MAYORQ          shift and go to state 62
    MENORQ          shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    AND             shift and go to state 66
    POT             shift and go to state 68
    MOD             shift and go to state 69

  ! MAS             [ reduce using rule 47 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 47 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 47 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 47 (expresion -> expresion OR expresion .) ]
  ! IGUALDAD        [ reduce using rule 47 (expresion -> expresion OR expresion .) ]
  ! DESIGUALDAD     [ reduce using rule 47 (expresion -> expresion OR expresion .) ]
  ! MAYORQ          [ reduce using rule 47 (expresion -> expresion OR expresion .) ]
  ! MENORQ          [ reduce using rule 47 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 47 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 47 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 47 (expresion -> expresion OR expresion .) ]
  ! POT             [ reduce using rule 47 (expresion -> expresion OR expresion .) ]
  ! MOD             [ reduce using rule 47 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 67 ]


state 95

    (48) expresion -> expresion POT expresion .
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 48 (expresion -> expresion POT expresion .)
    MENOS           reduce using rule 48 (expresion -> expresion POT expresion .)
    POR             reduce using rule 48 (expresion -> expresion POT expresion .)
    DIV             reduce using rule 48 (expresion -> expresion POT expresion .)
    IGUALDAD        reduce using rule 48 (expresion -> expresion POT expresion .)
    DESIGUALDAD     reduce using rule 48 (expresion -> expresion POT expresion .)
    MAYORQ          reduce using rule 48 (expresion -> expresion POT expresion .)
    MENORQ          reduce using rule 48 (expresion -> expresion POT expresion .)
    MAYORIGUAL      reduce using rule 48 (expresion -> expresion POT expresion .)
    MENORIGUAL      reduce using rule 48 (expresion -> expresion POT expresion .)
    AND             reduce using rule 48 (expresion -> expresion POT expresion .)
    OR              reduce using rule 48 (expresion -> expresion POT expresion .)
    POT             reduce using rule 48 (expresion -> expresion POT expresion .)
    MOD             reduce using rule 48 (expresion -> expresion POT expresion .)
    PTCOMA          reduce using rule 48 (expresion -> expresion POT expresion .)
    RCONSOLE        reduce using rule 48 (expresion -> expresion POT expresion .)
    RLET            reduce using rule 48 (expresion -> expresion POT expresion .)
    RIF             reduce using rule 48 (expresion -> expresion POT expresion .)
    RFOR            reduce using rule 48 (expresion -> expresion POT expresion .)
    RFUNCTION       reduce using rule 48 (expresion -> expresion POT expresion .)
    ID              reduce using rule 48 (expresion -> expresion POT expresion .)
    RRETURN         reduce using rule 48 (expresion -> expresion POT expresion .)
    $end            reduce using rule 48 (expresion -> expresion POT expresion .)
    LLAVEDER        reduce using rule 48 (expresion -> expresion POT expresion .)
    PARDER          reduce using rule 48 (expresion -> expresion POT expresion .)

  ! MAS             [ shift and go to state 56 ]
  ! MENOS           [ shift and go to state 57 ]
  ! POR             [ shift and go to state 58 ]
  ! DIV             [ shift and go to state 59 ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]
  ! MAYORQ          [ shift and go to state 62 ]
  ! MENORQ          [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! AND             [ shift and go to state 66 ]
  ! OR              [ shift and go to state 67 ]
  ! POT             [ shift and go to state 68 ]
  ! MOD             [ shift and go to state 69 ]


state 96

    (49) expresion -> expresion MOD expresion .
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    MAS             reduce using rule 49 (expresion -> expresion MOD expresion .)
    MENOS           reduce using rule 49 (expresion -> expresion MOD expresion .)
    POR             reduce using rule 49 (expresion -> expresion MOD expresion .)
    DIV             reduce using rule 49 (expresion -> expresion MOD expresion .)
    IGUALDAD        reduce using rule 49 (expresion -> expresion MOD expresion .)
    DESIGUALDAD     reduce using rule 49 (expresion -> expresion MOD expresion .)
    MAYORQ          reduce using rule 49 (expresion -> expresion MOD expresion .)
    MENORQ          reduce using rule 49 (expresion -> expresion MOD expresion .)
    MAYORIGUAL      reduce using rule 49 (expresion -> expresion MOD expresion .)
    MENORIGUAL      reduce using rule 49 (expresion -> expresion MOD expresion .)
    AND             reduce using rule 49 (expresion -> expresion MOD expresion .)
    OR              reduce using rule 49 (expresion -> expresion MOD expresion .)
    MOD             reduce using rule 49 (expresion -> expresion MOD expresion .)
    PTCOMA          reduce using rule 49 (expresion -> expresion MOD expresion .)
    RCONSOLE        reduce using rule 49 (expresion -> expresion MOD expresion .)
    RLET            reduce using rule 49 (expresion -> expresion MOD expresion .)
    RIF             reduce using rule 49 (expresion -> expresion MOD expresion .)
    RFOR            reduce using rule 49 (expresion -> expresion MOD expresion .)
    RFUNCTION       reduce using rule 49 (expresion -> expresion MOD expresion .)
    ID              reduce using rule 49 (expresion -> expresion MOD expresion .)
    RRETURN         reduce using rule 49 (expresion -> expresion MOD expresion .)
    $end            reduce using rule 49 (expresion -> expresion MOD expresion .)
    LLAVEDER        reduce using rule 49 (expresion -> expresion MOD expresion .)
    PARDER          reduce using rule 49 (expresion -> expresion MOD expresion .)
    POT             shift and go to state 68

  ! POT             [ reduce using rule 49 (expresion -> expresion MOD expresion .) ]
  ! MAS             [ shift and go to state 56 ]
  ! MENOS           [ shift and go to state 57 ]
  ! POR             [ shift and go to state 58 ]
  ! DIV             [ shift and go to state 59 ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]
  ! MAYORQ          [ shift and go to state 62 ]
  ! MENORQ          [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! AND             [ shift and go to state 66 ]
  ! OR              [ shift and go to state 67 ]
  ! MOD             [ shift and go to state 69 ]


state 97

    (20) imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion . PARDER
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    PARDER          shift and go to state 102
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIV             shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    MAYORQ          shift and go to state 62
    MENORQ          shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    AND             shift and go to state 66
    OR              shift and go to state 67
    POT             shift and go to state 68
    MOD             shift and go to state 69


state 98

    (22) declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL . expresion
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 103
    llamada_funcion                shift and go to state 37

state 99

    (29) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ . instrucciones LLAVEDER
    (30) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ . instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (31) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ . instrucciones LLAVEDER RELSE RIF condicional_if
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . imprimir
    (13) instruccion -> . declaracion_normal
    (14) instruccion -> . condicional_ifs
    (15) instruccion -> . ciclo_for
    (16) instruccion -> . funcion
    (17) instruccion -> . llamada_funcion
    (18) instruccion -> . r_return
    (19) instruccion -> . asignacion
    (20) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (22) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (23) declaracion_normal -> . RLET ID IGUAL expresion
    (28) condicional_ifs -> . RIF condicional_if
    (32) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (24) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funcion -> . ID PARIZQ PARDER
    (27) r_return -> . RRETURN expresion
    (21) asignacion -> . ID IGUAL expresion

    RCONSOLE        shift and go to state 12
    RLET            shift and go to state 13
    RIF             shift and go to state 15
    RFOR            shift and go to state 16
    RFUNCTION       shift and go to state 17
    ID              shift and go to state 14
    RRETURN         shift and go to state 18

    instrucciones                  shift and go to state 104
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11

state 100

    (32) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion . PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    PTCOMA          shift and go to state 105
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIV             shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    MAYORQ          shift and go to state 62
    MENORQ          shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    AND             shift and go to state 66
    OR              shift and go to state 67
    POT             shift and go to state 68
    MOD             shift and go to state 69


state 101

    (24) funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . imprimir
    (13) instruccion -> . declaracion_normal
    (14) instruccion -> . condicional_ifs
    (15) instruccion -> . ciclo_for
    (16) instruccion -> . funcion
    (17) instruccion -> . llamada_funcion
    (18) instruccion -> . r_return
    (19) instruccion -> . asignacion
    (20) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (22) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (23) declaracion_normal -> . RLET ID IGUAL expresion
    (28) condicional_ifs -> . RIF condicional_if
    (32) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (24) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funcion -> . ID PARIZQ PARDER
    (27) r_return -> . RRETURN expresion
    (21) asignacion -> . ID IGUAL expresion

    RCONSOLE        shift and go to state 12
    RLET            shift and go to state 13
    RIF             shift and go to state 15
    RFOR            shift and go to state 16
    RFUNCTION       shift and go to state 17
    ID              shift and go to state 14
    RRETURN         shift and go to state 18

    instrucciones                  shift and go to state 106
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11

state 102

    (20) imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .

    PTCOMA          reduce using rule 20 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)
    RCONSOLE        reduce using rule 20 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)
    RLET            reduce using rule 20 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)
    RIF             reduce using rule 20 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)
    RFOR            reduce using rule 20 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)
    RFUNCTION       reduce using rule 20 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)
    ID              reduce using rule 20 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)
    RRETURN         reduce using rule 20 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)
    $end            reduce using rule 20 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 20 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)


state 103

    (22) declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    PTCOMA          reduce using rule 22 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RCONSOLE        reduce using rule 22 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RLET            reduce using rule 22 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RIF             reduce using rule 22 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RFOR            reduce using rule 22 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RFUNCTION       reduce using rule 22 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    ID              reduce using rule 22 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    RRETURN         reduce using rule 22 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    $end            reduce using rule 22 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    LLAVEDER        reduce using rule 22 (declaracion_normal -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIV             shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    MAYORQ          shift and go to state 62
    MENORQ          shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    AND             shift and go to state 66
    OR              shift and go to state 67
    POT             shift and go to state 68
    MOD             shift and go to state 69


state 104

    (29) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones . LLAVEDER
    (30) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones . LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (31) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones . LLAVEDER RELSE RIF condicional_if
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . imprimir
    (13) instruccion -> . declaracion_normal
    (14) instruccion -> . condicional_ifs
    (15) instruccion -> . ciclo_for
    (16) instruccion -> . funcion
    (17) instruccion -> . llamada_funcion
    (18) instruccion -> . r_return
    (19) instruccion -> . asignacion
    (20) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (22) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (23) declaracion_normal -> . RLET ID IGUAL expresion
    (28) condicional_ifs -> . RIF condicional_if
    (32) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (24) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funcion -> . ID PARIZQ PARDER
    (27) r_return -> . RRETURN expresion
    (21) asignacion -> . ID IGUAL expresion

    LLAVEDER        shift and go to state 107
    RCONSOLE        shift and go to state 12
    RLET            shift and go to state 13
    RIF             shift and go to state 15
    RFOR            shift and go to state 16
    RFUNCTION       shift and go to state 17
    ID              shift and go to state 14
    RRETURN         shift and go to state 18

    instruccion                    shift and go to state 19
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11

state 105

    (32) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA . expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (26) expresion -> . llamada_funcion
    (36) expresion -> . expresion MAS expresion
    (37) expresion -> . expresion MENOS expresion
    (38) expresion -> . expresion POR expresion
    (39) expresion -> . expresion DIV expresion
    (40) expresion -> . expresion IGUALDAD expresion
    (41) expresion -> . expresion DESIGUALDAD expresion
    (42) expresion -> . expresion MAYORQ expresion
    (43) expresion -> . expresion MENORQ expresion
    (44) expresion -> . expresion MAYORIGUAL expresion
    (45) expresion -> . expresion MENORIGUAL expresion
    (46) expresion -> . expresion AND expresion
    (47) expresion -> . expresion OR expresion
    (48) expresion -> . expresion POT expresion
    (49) expresion -> . expresion MOD expresion
    (50) expresion -> . MENOS expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MAS MAS
    (53) expresion -> . expresion MENOS MENOS
    (54) expresion -> . ID
    (55) expresion -> . RNULL
    (56) expresion -> . RANY
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . CADENA
    (60) expresion -> . RTRUE
    (61) expresion -> . RFALSE
    (25) llamada_funcion -> . ID PARIZQ PARDER

    MENOS           shift and go to state 38
    NOT             shift and go to state 39
    ID              shift and go to state 40
    RNULL           shift and go to state 41
    RANY            shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    CADENA          shift and go to state 45
    RTRUE           shift and go to state 46
    RFALSE          shift and go to state 47

    expresion                      shift and go to state 108
    llamada_funcion                shift and go to state 37

state 106

    (24) funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . imprimir
    (13) instruccion -> . declaracion_normal
    (14) instruccion -> . condicional_ifs
    (15) instruccion -> . ciclo_for
    (16) instruccion -> . funcion
    (17) instruccion -> . llamada_funcion
    (18) instruccion -> . r_return
    (19) instruccion -> . asignacion
    (20) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (22) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (23) declaracion_normal -> . RLET ID IGUAL expresion
    (28) condicional_ifs -> . RIF condicional_if
    (32) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (24) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funcion -> . ID PARIZQ PARDER
    (27) r_return -> . RRETURN expresion
    (21) asignacion -> . ID IGUAL expresion

    LLAVEDER        shift and go to state 109
    RCONSOLE        shift and go to state 12
    RLET            shift and go to state 13
    RIF             shift and go to state 15
    RFOR            shift and go to state 16
    RFUNCTION       shift and go to state 17
    ID              shift and go to state 14
    RRETURN         shift and go to state 18

    instruccion                    shift and go to state 19
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11

state 107

    (29) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .
    (30) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER . RELSE LLAVEIZQ instrucciones LLAVEDER
    (31) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER . RELSE RIF condicional_if

    PTCOMA          reduce using rule 29 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RCONSOLE        reduce using rule 29 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RLET            reduce using rule 29 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RIF             reduce using rule 29 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFOR            reduce using rule 29 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFUNCTION       reduce using rule 29 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 29 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RRETURN         reduce using rule 29 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 29 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 29 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RELSE           shift and go to state 110


state 108

    (32) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion . PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) expresion -> expresion . MAS expresion
    (37) expresion -> expresion . MENOS expresion
    (38) expresion -> expresion . POR expresion
    (39) expresion -> expresion . DIV expresion
    (40) expresion -> expresion . IGUALDAD expresion
    (41) expresion -> expresion . DESIGUALDAD expresion
    (42) expresion -> expresion . MAYORQ expresion
    (43) expresion -> expresion . MENORQ expresion
    (44) expresion -> expresion . MAYORIGUAL expresion
    (45) expresion -> expresion . MENORIGUAL expresion
    (46) expresion -> expresion . AND expresion
    (47) expresion -> expresion . OR expresion
    (48) expresion -> expresion . POT expresion
    (49) expresion -> expresion . MOD expresion
    (52) expresion -> expresion . MAS MAS
    (53) expresion -> expresion . MENOS MENOS

    PARDER          shift and go to state 111
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIV             shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    MAYORQ          shift and go to state 62
    MENORQ          shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    AND             shift and go to state 66
    OR              shift and go to state 67
    POT             shift and go to state 68
    MOD             shift and go to state 69


state 109

    (24) funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    PTCOMA          reduce using rule 24 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RCONSOLE        reduce using rule 24 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RLET            reduce using rule 24 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RIF             reduce using rule 24 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFOR            reduce using rule 24 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFUNCTION       reduce using rule 24 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 24 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RRETURN         reduce using rule 24 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 24 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 24 (funcion -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 110

    (30) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE . LLAVEIZQ instrucciones LLAVEDER
    (31) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE . RIF condicional_if

    LLAVEIZQ        shift and go to state 112
    RIF             shift and go to state 113


state 111

    (32) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 114


state 112

    (30) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . imprimir
    (13) instruccion -> . declaracion_normal
    (14) instruccion -> . condicional_ifs
    (15) instruccion -> . ciclo_for
    (16) instruccion -> . funcion
    (17) instruccion -> . llamada_funcion
    (18) instruccion -> . r_return
    (19) instruccion -> . asignacion
    (20) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (22) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (23) declaracion_normal -> . RLET ID IGUAL expresion
    (28) condicional_ifs -> . RIF condicional_if
    (32) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (24) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funcion -> . ID PARIZQ PARDER
    (27) r_return -> . RRETURN expresion
    (21) asignacion -> . ID IGUAL expresion

    RCONSOLE        shift and go to state 12
    RLET            shift and go to state 13
    RIF             shift and go to state 15
    RFOR            shift and go to state 16
    RFUNCTION       shift and go to state 17
    ID              shift and go to state 14
    RRETURN         shift and go to state 18

    instrucciones                  shift and go to state 115
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11

state 113

    (31) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF . condicional_if
    (29) condicional_if -> . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (30) condicional_if -> . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER
    (31) condicional_if -> . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if

    PARIZQ          shift and go to state 33

    condicional_if                 shift and go to state 116

state 114

    (32) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . imprimir
    (13) instruccion -> . declaracion_normal
    (14) instruccion -> . condicional_ifs
    (15) instruccion -> . ciclo_for
    (16) instruccion -> . funcion
    (17) instruccion -> . llamada_funcion
    (18) instruccion -> . r_return
    (19) instruccion -> . asignacion
    (20) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (22) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (23) declaracion_normal -> . RLET ID IGUAL expresion
    (28) condicional_ifs -> . RIF condicional_if
    (32) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (24) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funcion -> . ID PARIZQ PARDER
    (27) r_return -> . RRETURN expresion
    (21) asignacion -> . ID IGUAL expresion

    RCONSOLE        shift and go to state 12
    RLET            shift and go to state 13
    RIF             shift and go to state 15
    RFOR            shift and go to state 16
    RFUNCTION       shift and go to state 17
    ID              shift and go to state 14
    RRETURN         shift and go to state 18

    declaracion_normal             shift and go to state 5
    instrucciones                  shift and go to state 117
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11

state 115

    (30) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . imprimir
    (13) instruccion -> . declaracion_normal
    (14) instruccion -> . condicional_ifs
    (15) instruccion -> . ciclo_for
    (16) instruccion -> . funcion
    (17) instruccion -> . llamada_funcion
    (18) instruccion -> . r_return
    (19) instruccion -> . asignacion
    (20) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (22) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (23) declaracion_normal -> . RLET ID IGUAL expresion
    (28) condicional_ifs -> . RIF condicional_if
    (32) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (24) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funcion -> . ID PARIZQ PARDER
    (27) r_return -> . RRETURN expresion
    (21) asignacion -> . ID IGUAL expresion

    LLAVEDER        shift and go to state 118
    RCONSOLE        shift and go to state 12
    RLET            shift and go to state 13
    RIF             shift and go to state 15
    RFOR            shift and go to state 16
    RFUNCTION       shift and go to state 17
    ID              shift and go to state 14
    RRETURN         shift and go to state 18

    instruccion                    shift and go to state 19
    imprimir                       shift and go to state 4
    declaracion_normal             shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11

state 116

    (31) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .

    PTCOMA          reduce using rule 31 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RCONSOLE        reduce using rule 31 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RLET            reduce using rule 31 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RIF             reduce using rule 31 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RFOR            reduce using rule 31 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RFUNCTION       reduce using rule 31 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    ID              reduce using rule 31 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    RRETURN         reduce using rule 31 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    $end            reduce using rule 31 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)
    LLAVEDER        reduce using rule 31 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE RIF condicional_if .)


state 117

    (32) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) instruccion -> . declaracion_normal PTCOMA
    (6) instruccion -> . condicional_ifs PTCOMA
    (7) instruccion -> . ciclo_for PTCOMA
    (8) instruccion -> . funcion PTCOMA
    (9) instruccion -> . llamada_funcion PTCOMA
    (10) instruccion -> . r_return PTCOMA
    (11) instruccion -> . asignacion PTCOMA
    (12) instruccion -> . imprimir
    (13) instruccion -> . declaracion_normal
    (14) instruccion -> . condicional_ifs
    (15) instruccion -> . ciclo_for
    (16) instruccion -> . funcion
    (17) instruccion -> . llamada_funcion
    (18) instruccion -> . r_return
    (19) instruccion -> . asignacion
    (20) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
    (22) declaracion_normal -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (23) declaracion_normal -> . RLET ID IGUAL expresion
    (28) condicional_ifs -> . RIF condicional_if
    (32) ciclo_for -> . RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (24) funcion -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funcion -> . ID PARIZQ PARDER
    (27) r_return -> . RRETURN expresion
    (21) asignacion -> . ID IGUAL expresion

    LLAVEDER        shift and go to state 119
    RCONSOLE        shift and go to state 12
    RLET            shift and go to state 13
    RIF             shift and go to state 15
    RFOR            shift and go to state 16
    RFUNCTION       shift and go to state 17
    ID              shift and go to state 14
    RRETURN         shift and go to state 18

    declaracion_normal             shift and go to state 5
    instruccion                    shift and go to state 19
    imprimir                       shift and go to state 4
    condicional_ifs                shift and go to state 6
    ciclo_for                      shift and go to state 7
    funcion                        shift and go to state 8
    llamada_funcion                shift and go to state 9
    r_return                       shift and go to state 10
    asignacion                     shift and go to state 11

state 118

    (30) condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .

    PTCOMA          reduce using rule 30 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RCONSOLE        reduce using rule 30 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RLET            reduce using rule 30 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RIF             reduce using rule 30 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RFOR            reduce using rule 30 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RFUNCTION       reduce using rule 30 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 30 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    RRETURN         reduce using rule 30 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 30 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 30 (condicional_if -> PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER RELSE LLAVEIZQ instrucciones LLAVEDER .)


state 119

    (32) ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .

    PTCOMA          reduce using rule 32 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RCONSOLE        reduce using rule 32 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RLET            reduce using rule 32 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RIF             reduce using rule 32 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFOR            reduce using rule 32 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RFUNCTION       reduce using rule 32 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 32 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RRETURN         reduce using rule 32 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 32 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 32 (ciclo_for -> RFOR PARIZQ declaracion_normal PTCOMA expresion PTCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)

