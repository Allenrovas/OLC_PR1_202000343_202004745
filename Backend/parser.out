Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    CORDER
    CORIZQ
    DESIGUALDAD
    DOSPUNTOS
    ID
    IGUAL
    IGUALDAD
    LLAVEDER
    LLAVEIZQ
    MAYORIGUAL
    MAYORQ
    MENORIGUAL
    MENORQ
    MOD
    NOT
    OR
    POT
    RANY
    RBOOLEAN
    RBREAK
    RCONCAT
    RCONTINUE
    RELSE
    RFALSE
    RFOR
    RFUNCTION
    RIF
    RINTERFACE
    RLET
    RNULL
    RNUMBER
    RRETURN
    RSPLIT
    RSTRING
    RTOEXPONENTIAL
    RTOFIXED
    RTOLOWERCASE
    RTOSTRING
    RTRUE
    RTUPPERCASE
    RWHILE

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> imprimir PTCOMA
Rule 5     imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER
Rule 6     expresion -> expresion MAS expresion
Rule 7     expresion -> expresion MENOS expresion
Rule 8     expresion -> expresion POR expresion
Rule 9     expresion -> expresion DIV expresion
Rule 10    expresion -> ENTERO
Rule 11    expresion -> DECIMAL
Rule 12    expresion -> CADENA

Terminals, with rules where they appear

AND                  : 
CADENA               : 12
CORDER               : 
CORIZQ               : 
DECIMAL              : 11
DESIGUALDAD          : 
DIV                  : 9
DOSPUNTOS            : 
ENTERO               : 10
ID                   : 
IGUAL                : 
IGUALDAD             : 
LLAVEDER             : 
LLAVEIZQ             : 
MAS                  : 6
MAYORIGUAL           : 
MAYORQ               : 
MENORIGUAL           : 
MENORQ               : 
MENOS                : 7
MOD                  : 
NOT                  : 
OR                   : 
PARDER               : 5
PARIZQ               : 5
POR                  : 8
POT                  : 
PTCOMA               : 4
PUNTO                : 5
RANY                 : 
RBOOLEAN             : 
RBREAK               : 
RCONCAT              : 
RCONSOLE             : 5
RCONTINUE            : 
RELSE                : 
RFALSE               : 
RFOR                 : 
RFUNCTION            : 
RIF                  : 
RINTERFACE           : 
RLET                 : 
RLOG                 : 5
RNULL                : 
RNUMBER              : 
RRETURN              : 
RSPLIT               : 
RSTRING              : 
RTOEXPONENTIAL       : 
RTOFIXED             : 
RTOLOWERCASE         : 
RTOSTRING            : 
RTRUE                : 
RTUPPERCASE          : 
RWHILE               : 
error                : 

Nonterminals, with rules where they appear

expresion            : 5 6 6 7 7 8 8 9 9
imprimir             : 4
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER

    RCONSOLE        shift and go to state 5

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PTCOMA
    (5) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ expresion PARDER

    $end            reduce using rule 1 (init -> instrucciones .)
    RCONSOLE        shift and go to state 5

    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 4

state 3

    (3) instrucciones -> instruccion .

    RCONSOLE        reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> imprimir . PTCOMA

    PTCOMA          shift and go to state 7


state 5

    (5) imprimir -> RCONSOLE . PUNTO RLOG PARIZQ expresion PARDER

    PUNTO           shift and go to state 8


state 6

    (2) instrucciones -> instrucciones instruccion .

    RCONSOLE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 7

    (4) instruccion -> imprimir PTCOMA .

    RCONSOLE        reduce using rule 4 (instruccion -> imprimir PTCOMA .)
    $end            reduce using rule 4 (instruccion -> imprimir PTCOMA .)


state 8

    (5) imprimir -> RCONSOLE PUNTO . RLOG PARIZQ expresion PARDER

    RLOG            shift and go to state 9


state 9

    (5) imprimir -> RCONSOLE PUNTO RLOG . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 10


state 10

    (5) imprimir -> RCONSOLE PUNTO RLOG PARIZQ . expresion PARDER
    (6) expresion -> . expresion MAS expresion
    (7) expresion -> . expresion MENOS expresion
    (8) expresion -> . expresion POR expresion
    (9) expresion -> . expresion DIV expresion
    (10) expresion -> . ENTERO
    (11) expresion -> . DECIMAL
    (12) expresion -> . CADENA

    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    CADENA          shift and go to state 14

    expresion                      shift and go to state 11

state 11

    (5) imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion . PARDER
    (6) expresion -> expresion . MAS expresion
    (7) expresion -> expresion . MENOS expresion
    (8) expresion -> expresion . POR expresion
    (9) expresion -> expresion . DIV expresion

    PARDER          shift and go to state 15
    MAS             shift and go to state 16
    MENOS           shift and go to state 17
    POR             shift and go to state 18
    DIV             shift and go to state 19


state 12

    (10) expresion -> ENTERO .

    PARDER          reduce using rule 10 (expresion -> ENTERO .)
    MAS             reduce using rule 10 (expresion -> ENTERO .)
    MENOS           reduce using rule 10 (expresion -> ENTERO .)
    POR             reduce using rule 10 (expresion -> ENTERO .)
    DIV             reduce using rule 10 (expresion -> ENTERO .)


state 13

    (11) expresion -> DECIMAL .

    PARDER          reduce using rule 11 (expresion -> DECIMAL .)
    MAS             reduce using rule 11 (expresion -> DECIMAL .)
    MENOS           reduce using rule 11 (expresion -> DECIMAL .)
    POR             reduce using rule 11 (expresion -> DECIMAL .)
    DIV             reduce using rule 11 (expresion -> DECIMAL .)


state 14

    (12) expresion -> CADENA .

    PARDER          reduce using rule 12 (expresion -> CADENA .)
    MAS             reduce using rule 12 (expresion -> CADENA .)
    MENOS           reduce using rule 12 (expresion -> CADENA .)
    POR             reduce using rule 12 (expresion -> CADENA .)
    DIV             reduce using rule 12 (expresion -> CADENA .)


state 15

    (5) imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .

    PTCOMA          reduce using rule 5 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ expresion PARDER .)


state 16

    (6) expresion -> expresion MAS . expresion
    (6) expresion -> . expresion MAS expresion
    (7) expresion -> . expresion MENOS expresion
    (8) expresion -> . expresion POR expresion
    (9) expresion -> . expresion DIV expresion
    (10) expresion -> . ENTERO
    (11) expresion -> . DECIMAL
    (12) expresion -> . CADENA

    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    CADENA          shift and go to state 14

    expresion                      shift and go to state 20

state 17

    (7) expresion -> expresion MENOS . expresion
    (6) expresion -> . expresion MAS expresion
    (7) expresion -> . expresion MENOS expresion
    (8) expresion -> . expresion POR expresion
    (9) expresion -> . expresion DIV expresion
    (10) expresion -> . ENTERO
    (11) expresion -> . DECIMAL
    (12) expresion -> . CADENA

    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    CADENA          shift and go to state 14

    expresion                      shift and go to state 21

state 18

    (8) expresion -> expresion POR . expresion
    (6) expresion -> . expresion MAS expresion
    (7) expresion -> . expresion MENOS expresion
    (8) expresion -> . expresion POR expresion
    (9) expresion -> . expresion DIV expresion
    (10) expresion -> . ENTERO
    (11) expresion -> . DECIMAL
    (12) expresion -> . CADENA

    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    CADENA          shift and go to state 14

    expresion                      shift and go to state 22

state 19

    (9) expresion -> expresion DIV . expresion
    (6) expresion -> . expresion MAS expresion
    (7) expresion -> . expresion MENOS expresion
    (8) expresion -> . expresion POR expresion
    (9) expresion -> . expresion DIV expresion
    (10) expresion -> . ENTERO
    (11) expresion -> . DECIMAL
    (12) expresion -> . CADENA

    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    CADENA          shift and go to state 14

    expresion                      shift and go to state 23

state 20

    (6) expresion -> expresion MAS expresion .
    (6) expresion -> expresion . MAS expresion
    (7) expresion -> expresion . MENOS expresion
    (8) expresion -> expresion . POR expresion
    (9) expresion -> expresion . DIV expresion

    PARDER          reduce using rule 6 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 6 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 6 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 18
    DIV             shift and go to state 19

  ! POR             [ reduce using rule 6 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 6 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 16 ]
  ! MENOS           [ shift and go to state 17 ]


state 21

    (7) expresion -> expresion MENOS expresion .
    (6) expresion -> expresion . MAS expresion
    (7) expresion -> expresion . MENOS expresion
    (8) expresion -> expresion . POR expresion
    (9) expresion -> expresion . DIV expresion

    PARDER          reduce using rule 7 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 7 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 7 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 18
    DIV             shift and go to state 19

  ! POR             [ reduce using rule 7 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 7 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 16 ]
  ! MENOS           [ shift and go to state 17 ]


state 22

    (8) expresion -> expresion POR expresion .
    (6) expresion -> expresion . MAS expresion
    (7) expresion -> expresion . MENOS expresion
    (8) expresion -> expresion . POR expresion
    (9) expresion -> expresion . DIV expresion

    PARDER          reduce using rule 8 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 8 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 8 (expresion -> expresion POR expresion .)
    POR             reduce using rule 8 (expresion -> expresion POR expresion .)
    DIV             reduce using rule 8 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 16 ]
  ! MENOS           [ shift and go to state 17 ]
  ! POR             [ shift and go to state 18 ]
  ! DIV             [ shift and go to state 19 ]


state 23

    (9) expresion -> expresion DIV expresion .
    (6) expresion -> expresion . MAS expresion
    (7) expresion -> expresion . MENOS expresion
    (8) expresion -> expresion . POR expresion
    (9) expresion -> expresion . DIV expresion

    PARDER          reduce using rule 9 (expresion -> expresion DIV expresion .)
    MAS             reduce using rule 9 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 9 (expresion -> expresion DIV expresion .)
    POR             reduce using rule 9 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 9 (expresion -> expresion DIV expresion .)

  ! MAS             [ shift and go to state 16 ]
  ! MENOS           [ shift and go to state 17 ]
  ! POR             [ shift and go to state 18 ]
  ! DIV             [ shift and go to state 19 ]

